
_build_lpc40xx_freertos/lpc40xx_freertos.elf:     file format elf32-littlearm
_build_lpc40xx_freertos/lpc40xx_freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000000e5

Program Header:
0x70000001 off    0x0001b4d4 vaddr 0x0000b4d4 paddr 0x0000b4d4 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0000b4dc memsz 0x0000b4dc flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x0000b4dc align 2**16
         filesz 0x00000354 memsz 0x00000354 flags rw-
    LOAD off    0x00020358 vaddr 0x10000358 paddr 0x0000b830 align 2**16
         filesz 0x00000000 memsz 0x00000f98 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000028 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            0000b4d4  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx       00000008  0000b4d4  0000b4d4  0001b4d4  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data            00000354  10000000  0000b4dc  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss             00000f98  10000358  0000b830  00020358  2**3  ALLOC
  4 .persistent_ram2 00000028  20000000  20000000  00030000  2**2  ALLOC
  5 .debug_info      0002355c  00000000  00000000  00020354  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev    0000626f  00000000  00000000  000438b0  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges   00000ec0  00000000  00000000  00049b1f  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges    00001bc8  00000000  00000000  0004a9df  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line      00011b61  00000000  00000000  0004c5a7  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str       000065ab  00000000  00000000  0005e108  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment         00000076  00000000  00000000  000646b3  2**0  CONTENTS, READONLY
 12 .ARM.attributes  00000032  00000000  00000000  00064729  2**0  CONTENTS, READONLY
 13 .debug_frame     00004394  00000000  00000000  0006475c  2**2  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc       000128ac  00000000  00000000  00068af0  2**0  CONTENTS, READONLY, DEBUGGING
 15 .stab            00000054  00000000  00000000  0007b39c  2**2  CONTENTS, READONLY, DEBUGGING
 16 .stabstr         000000ab  00000000  00000000  0007b3f0  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000b4d4 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000358 l    d  .bss	00000000 .bss
20000000 l    d  .persistent_ram2	00000000 .persistent_ram2
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000158 l     F .text	0000001a isr_hard_fault
0000016c l       .text	00000000 handler_address
00000174 l     F .text	0000005c halt
0000a1f8 l     O .text	00000040 table.8042
00000000 l    df *ABS*	00000000 entry_point.c
0000a060 l     O .text	0000000c __FUNCTION__.8182
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 crash.c
20000000 l     O .persistent_ram2	00000028 crash_registers
00000000 l    df *ABS*	00000000 syscall.c
10000000 l     O .data	00000004 next_free_heap.5390
10000004 l     O .data	00000004 next_free_heap.5399
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 acceleration.c
00000000 l    df *ABS*	00000000 sensors.c
00000000 l    df *ABS*	00000000 ff.c
00000426 l     F .text	00000010 ld_dword
00000436 l     F .text	0000001c mem_cmp
00000452 l     F .text	0000002a get_ldnumber
0000047c l     F .text	00000040 sync_window.part.6
000004bc l     F .text	00000044 move_window
00000500 l     F .text	00000074 check_fs
00000574 l     F .text	000002c0 find_volume
00000834 l     F .text	00000016 unlock_fs
10000358 l     O .bss	00000004 FatFs
1000035c l     O .bss	00000002 Fsid
00000000 l    df *ABS*	00000000 ffsystem.c
00000000 l    df *ABS*	00000000 disk_glue_logic.c
00000000 l    df *ABS*	00000000 sd_card.c
0000096c l     F .text	00000028 sd_card__wait_for_ready
00000994 l     F .text	00000020 sd_card__power_off
000009b4 l     F .text	0000005a sd_card__transmit_datablock
00000a0e l     F .text	00000086 sd_card__send_command
00000a94 l     F .text	00000042 sd_card__read_datablock
1000035e l     O .bss	00000001 g_card_type
10000008 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 system_calls.c
00000d78 l     F .text	0000001e system_calls__print_and_halt
00000000 l    df *ABS*	00000000 app_cli.c
00000e4c l     F .text	00000098 app_cli__private_print_list_of_all_commands
00000000 l    df *ABS*	00000000 sj2_cli.c
00001038 l     F .text	00000012 sj2_cli__output_function
0000104c l     F .text	00000078 sj2_cli__task
10000360 l     O .bss	00000010 sj2_cli_struct.8627
10000370 l     O .bss	00000800 task_stack.8631
10000b70 l     O .bss	00000054 task_struct.8632
1000000c l     O .data	00000010 crash.8628
1000001c l     O .data	00000010 i2c.8629
1000002c l     O .data	00000010 task_list.8630
00000000 l    df *ABS*	00000000 handler_i2c.c
00001140 l     F .text	000000c8 cli__i2c_read
00001208 l     F .text	000000e8 cli__i2c_write
00000000 l    df *ABS*	00000000 handlers_general.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 peripherals_init.c
10000bc4 l     O .bss	00000020 rxq_storage.9206
10000be4 l     O .bss	00000048 rxq_struct.9204
10000c2c l     O .bss	00000238 sd_card_drive.9197
10000e64 l     O .bss	00000080 txq_storage.9207
10000ee4 l     O .bss	00000048 txq_struct.9205
0000a84d l     O .text	00000011 __FUNCTION__.9185
00000000 l    df *ABS*	00000000 ssp2_mutex.c
10000f2c l     O .bss	00000004 spi2_mutex_handle
10000f30 l     O .bss	00000048 spi2_mutex_memory
00000000 l    df *ABS*	00000000 sys_time.c
0000151c l     F .text	00000024 sys_time__one_minute_isr
10000f78 l     O .bss	00000004 sys_time__one_minute_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 main.c
000015d4 l     F .text	00000014 blink_task
10000f7c l     O .bss	00000001 led0.8493
10000f7d l     O .bss	00000001 led1.8494
00000000 l    df *ABS*	00000000 rtos_hooks.c
10000f80 l     O .bss	00000008 freertos_run_time_counter_offset
10000f88 l     O .bss	00000190 uxIdleTaskStack.7849
10001118 l     O .bss	00000054 xIdleTaskTCB.7848
00000000 l    df *ABS*	00000000 sl_string.c
00000000 l    df *ABS*	00000000 freertos_interrupt_handlers.c
00000000 l    df *ABS*	00000000 port.c
00001ab4 l     F .text	00000022 prvPortStartFirstTask
00001adc l     F .text	0000000e vPortEnableVFP
00001af0 l     F .text	0000003c prvTaskExitError
00001b80 l       .text	00000000 pxCurrentTCBConst2
00001c50 l       .text	00000000 pxCurrentTCBConst
1000116c l     O .bss	00000001 ucMaxSysCallPriority
10001170 l     O .bss	00000004 ulMaxPRIGROUPValue
10001174 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00001ec2 l     F .text	00000016 prvIsQueueEmpty
00001ed8 l     F .text	0000006a prvCopyDataToQueue
00001f42 l     F .text	0000002a prvCopyDataFromQueue
00001f6c l     F .text	00000070 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000027b4 l     F .text	000000f4 prvAddNewTaskToReadyList
000028a8 l     F .text	00000028 prvIdleTask
000028d0 l     F .text	00000024 prvResetNextTaskUnblockTime
000028f4 l     F .text	00000098 prvInitialiseNewTask.isra.2
0000298c l     F .text	0000008c prvAddCurrentTaskToDelayedList
1000117c l     O .bss	00000004 pxDelayedTaskList
10001180 l     O .bss	00000004 pxOverflowDelayedTaskList
10001184 l     O .bss	000000c8 pxReadyTasksLists
1000124c l     O .bss	00000004 ulTaskSwitchedInTime
10001250 l     O .bss	00000004 uxCurrentNumberOfTasks
10001254 l     O .bss	00000004 uxPendedTicks
10001258 l     O .bss	00000004 uxSchedulerSuspended
1000125c l     O .bss	00000004 uxTaskNumber
10001260 l     O .bss	00000004 uxTopReadyPriority
10001264 l     O .bss	00000014 xDelayedTaskList1
10001278 l     O .bss	00000014 xDelayedTaskList2
1000128c l     O .bss	00000004 xIdleTaskHandle
10001290 l     O .bss	00000004 xNextTaskUnblockTime
10001294 l     O .bss	00000004 xNumOfOverflows
10001298 l     O .bss	00000014 xPendingReadyList
100012ac l     O .bss	00000004 xSchedulerRunning
100012b0 l     O .bss	00000014 xSuspendedTaskList
100012c4 l     O .bss	00000004 xTickCount
100012c8 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 board_io.c
100012cc l     O .bss	00000001 board_io__led0
100012cd l     O .bss	00000001 board_io__led1
100012ce l     O .bss	00000001 board_io__led2
100012cf l     O .bss	00000001 board_io__led3
100012d0 l     O .bss	00000001 board_io__sw0
100012d1 l     O .bss	00000001 board_io__sw1
100012d2 l     O .bss	00000001 board_io__sw2
100012d3 l     O .bss	00000001 board_io__sw3
00000000 l    df *ABS*	00000000 gpio.c
0000b084 l     O .text	00000018 gpio_memory_map
00000000 l    df *ABS*	00000000 hw_timer.c
0000b09c l     O .text	00000030 hw_timers
00000000 l    df *ABS*	00000000 i2c.c
000035d8 l     F .text	0000005e i2c__transfer_unprotected
00003638 l     F .text	00000128 i2c__handle_interrupt
00003760 l     F .text	0000000c i2c2_isr
0000376c l     F .text	0000000c i2c1_isr
00003778 l     F .text	0000000c i2c0_isr
1000003c l     O .data	00000060 i2c_structs
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00003928 l     F .text	00000002 lpc_peripheral__halt_handler
100012d4 l     O .bss	00000004 memory_write_to_avoid_spurious_interrupt.7695
1000009c l     O .data	000000a4 lpc_peripheral__isr_registrations
0000b0ff l     O .text	0000005a lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 ssp2.c
000039d8 l     F .text	00000098 ssp2__dma_transfer_block
00000000 l    df *ABS*	00000000 uart.c
00003b00 l     F .text	00000094 uart__isr_common
00003b94 l     F .text	0000000c uart3_isr
00003ba0 l     F .text	0000000c uart2_isr
00003bac l     F .text	0000000c uart1_isr
00003bb8 l     F .text	0000000c uart0_isr
10000140 l     O .data	00000040 uarts
0000b174 l     O .text	00000010 uart__isrs
0000b184 l     O .text	00000004 uart_peripheral_ids
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00004418 l     F .text	0000002e __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
00005758 l     F .text	00000038 sulp
0000b2d8 l     O .text	00000014 fpi.7522
0000b2ec l     O .text	00000014 fpinan.7558
0000b300 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00006334 l     F .text	000000f0 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0000668c l     F .text	00000112 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000074bc l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
000076dc l     F .text	00000074 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00007bc4 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0000b4a0 l     O .text	0000000c p05.7444
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strtoul.c
00009230 l     F .text	000000ec _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 refill.c
00009490 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000184 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 lnumeric.c
100001e4 l     O .data	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 reent.c
0000945c g     F .text	00000010 _malloc_usable_size_r
000046bc g     F .text	000000ba __cvt
00005334 g     F .text	00000028 putchar
00008dac g     F .text	000000b0 _scanf_chars
000019be g     F .text	00000022 sl_string__erase_last
00009e68 g     F .text	0000002c .hidden __aeabi_dcmpun
00008716 g     F .text	00000042 __any_on
00009418 g     F .text	00000020 _isatty_r
00009e2c g     F .text	00000012 .hidden __aeabi_dcmple
00003d94 g     F .text	0000007c uart__put
0000535c g     F .text	000000dc _puts_r
00009d68 g     F .text	0000007a .hidden __cmpdf2
00009438 g     F .text	00000024 _lseek_r
0000174e g     F .text	0000001a sl_string__is_full
00009d68 g     F .text	0000007a .hidden __eqdf2
00003a70 g     F .text	0000002c ssp2__set_max_clock
00001bc8 g     F .text	00000028 vPortExitCritical
00000422 g     F .text	00000004 sensors__init
000098d8 g     F .text	0000005a .hidden __floatdidf
00003c1c g     F .text	00000028 uart__is_initialized
00000ee4 g     F .text	00000016 app_cli__initialize
00005304 g     F .text	00000030 printf
100012e0 g     O .bss	00000001 __lock___atexit_recursive_mutex
00001540 g     F .text	0000002c sys_time__init
00009202 g     F .text	00000024 __sseek
0000756c g     F .text	00000070 __sinit
0000650c g     F .text	000000a4 __swbuf_r
00007510 g     F .text	0000002c __sfmoreglue
000064b0 g     F .text	00000048 _vsiscanf_r
00007f5c g     F .text	0000000c __malloc_unlock
000003e8 g     F .text	00000018 startup__initialize_interrupts
00006328 g     F .text	0000000c _strtod_r
00007750 g     F .text	0000002a __hexdig_fun
100012e1 g     O .bss	00000001 __lock___arc4random_mutex
00004284 g     F .text	00000034 memmove
0000337c g     F .text	0000000c board_io__get_led3
000022d8 g     F .text	000000bc xQueueGenericSendFromISR
00007f68 g     F .text	00000068 _Balloc
0000b4dc g       .ARM.exidx	00000000 __exidx_end
000039a8 g     F .text	00000030 lpc_peripheral__enable_interrupt
00009d58 g     F .text	0000008a .hidden __gtdf2
00003210 g     F .text	00000010 vRunTimeStatIsrExit
10001178 g     O .bss	00000004 pxCurrentTCB
00009fc4 g     F .text	0000002e .hidden __aeabi_d2lz
000093f4 g     F .text	00000024 _fstat_r
00001a18 g     F .text	00000050 sl_string__erase_int
100012ec g     O .bss	00000004 errno
00008e5c g     F .text	000001e8 _scanf_i
000091c6 g     F .text	00000004 __seofread
0000b4dc g       .ARM.exidx	00000000 _etext
00009df4 g     F .text	00000010 .hidden __aeabi_cdcmple
000016fc g     F .text	00000028 sl_string__initialize
00003bc4 g     F .text	00000058 uart__init
000064f8 g     F .text	00000014 vsscanf
0000022c g     F .text	00000040 clock__initialize_system_clock_96mhz
00002f28 g     F .text	00000018 vTaskInternalSetTimeOutState
000035c8 g     F .text	00000010 hw_timer__set_value
00003cd0 g     F .text	00000024 uart__polled_put
00007d30 g     F .text	00000080 _getc_r
00001cb0 g     F .text	00000100 xPortStartScheduler
00004268 g     F .text	0000001c memcpy
00002e78 g     F .text	00000030 vTaskPlaceOnEventList
00007c10 g     F .text	00000120 __hexnan
00009de4 g     F .text	00000020 .hidden __aeabi_cdrcmple
00005468 g     F .text	00000184 setvbuf
00007504 g     F .text	0000000c _cleanup_r
00008878 g     F .text	000001f0 _svfprintf_r
00009860 g     F .text	00000022 .hidden __floatsidf
00001c80  w    F .text	00000030 vPortSetupTimerInterrupt
00009d60 g     F .text	00000082 .hidden __ltdf2
00001c54 g     F .text	0000002c xPortSysTickHandler
000008f6 g     F .text	0000001c disk_initialize
00003e10 g     F .text	00000000 .hidden __aeabi_uldivmod
00005438 g     F .text	00000010 puts
00002288 g     F .text	0000002a xQueueCreateMutexStatic
00001e26 g     F .text	0000001a vPortFree
000017c6 g     F .text	0000002e sl_string__set
0000867c g     F .text	00000066 __ratio
00003364 g     F .text	0000000c board_io__get_led1
00002574 g     F .text	00000180 xQueueSemaphoreTake
00003344 g     F .text	00000014 board_io__sd_card_is_present
000008d0 g     F .text	0000000a ff_del_syncobj
00004248 g     F .text	00000010 malloc
00001db0 g     F .text	00000058 vPortValidateInterruptPriority
00003984 g     F .text	00000024 lpc_peripheral__is_powered_on
0000a040 g     F .text	00000010 _fstat
0000b3d8 g     O .text	000000c8 __mprec_tens
00003784 g     F .text	000000b0 i2c__initialize
00001bf0 g     F .text	00000064 xPortPendSVHandler
00006494 g     F .text	0000001c vsnprintf
10000358 g       .bss	00000000 _bss_start
00009ee4 g     F .text	00000040 .hidden __fixunsdfsi
00001e5c g     F .text	00000018 vListInsertEnd
00008ae2 g     F .text	0000003a __ssrefill_r
00000912 g     F .text	0000000a disk_status
00009840 g     F .text	0000001e .hidden __aeabi_ui2d
00007db0 g     F .text	00000008 _localeconv_r
20008000 g       *ABS*	00000000 __top_ram_32k
00008190 g     F .text	00000012 __i2b
00003470 g     F .text	00000020 gpio__set_as_output
00003e40 g     F .text	000002d0 .hidden __udivmoddi4
000095bc g     F .text	00000000 .hidden __aeabi_drsub
00005448 g     F .text	00000020 _sbrk_r
00003424 g     F .text	00000024 gpio__set_as_input
00001ab0 g     F .text	00000004 xPortSysTickHandler_wrapper
000033b2 g     F .text	0000002a gpio__construct_with_function
0000946c g     F .text	00000024 _read_r
00001e56 g     F .text	00000006 vListInitialiseItem
00009e18 g     F .text	00000012 .hidden __aeabi_dcmplt
00002438 g     F .text	0000013c xQueueReceive
00007498 g     F .text	00000024 fflush
00009884 g     F .text	00000042 .hidden __extendsfdf2
00008b1c g     F .text	00000290 __ssvfscanf_r
00009b88 g     F .text	000001d0 .hidden __aeabi_ddiv
000095c8 g     F .text	00000276 .hidden __adddf3
20008000 g       *ABS*	00000000 _heap_end
00008540 g     F .text	000000a0 __b2d
0000b4d4 g       .text	00000000 __exidx_start
100012e2 g     O .bss	00000001 __lock___env_recursive_mutex
00009934 g     F .text	00000254 .hidden __aeabi_dmul
00000d98 g     F .text	00000028 _isatty
100012e3 g     O .bss	00000001 __lock___sinit_recursive_mutex
0000b28c g     O .text	00000004 _global_impure_ptr
00008774 g     F .text	0000004c _realloc_r
0000569c g     F .text	00000044 strncasecmp
000033fc g     F .text	00000028 gpio__enable_pull_down_resistors
00003c58 g     F .text	00000078 uart__enable_queues
0000b3b0 g     O .text	00000028 __mprec_bigtens
00008074 g     F .text	0000007c __s2b
000034f8 g     F .text	0000001c gpio__reset
000034dc g     F .text	0000001c gpio__set
00009840 g     F .text	0000001e .hidden __floatunsidf
00003ae0 g     F .text	00000014 ssp2__exchange_byte
00000344 g     F .text	00000054 _sbrk
00008406 g     F .text	00000034 __mcmp
00001e08 g     F .text	0000001e pvPortMalloc
10010000 g       *ABS*	00000000 __end_of_unused_ram64
00001736 g     F .text	0000000c sl_string__get_capacity_including_null_char
00002790 g     F .text	00000024 vQueueDelete
00001e40 g     F .text	00000016 vListInitialise
00006428 g     F .text	00000014 strtol
000015aa g     F .text	0000002a uart_puts__polled
00009f24 g     F .text	0000009e .hidden __aeabi_d2f
00080000 g       *ABS*	00000000 __top_flash
100012f0 g       .bss	00000000 _bss_end
00009ff4 g     F .text	0000003c .hidden __aeabi_d2ulz
0000212c g     F .text	0000015c xQueueGenericSend
000014c4 g     F .text	00000034 spi2_mutex__acquire
00005790 g     F .text	00000b98 _strtod_l
00003910 g     F .text	00000018 i2c__write_single
00007be8 g     F .text	00000028 __match
0000357c g     F .text	00000024 hw_timer__enable_match_isr
000013a4 g     F .text	00000120 peripherals_init
00006494 g     F .text	0000001c vsniprintf
000017a4 g     F .text	00000022 sl_string__scanf
000080f0 g     F .text	00000040 __hi0bits
00003220 g     F .text	00000104 board_io__initialize
000019fc g     F .text	0000001c sl_string__erase_first_word
00009e94 g     F .text	0000004e .hidden __fixdfsi
00003084 g     F .text	0000009c xTaskPriorityDisinherit
20000028 g       .persistent_ram2	00000000 _heap_start
100012e4 g     O .bss	00000001 __lock___malloc_recursive_mutex
000034b8 g     F .text	00000024 gpio__get
000018ea g     F .text	0000002e sl_string__begins_with_ignore_case
00000c44 g     F .text	0000008c sd_card__read
00009044 g     F .text	00000090 _putc_r
100012f0 g       .bss	00000000 __start_of_unused_ram64
00002ea8 g     F .text	00000080 xTaskRemoveFromEventList
00001670 g     F .text	00000010 vApplicationMallocFailedHook
000001d0 g     F .text	0000004c isr_hard_fault_handler
0000411c g     F .text	00000024 fprintf
000095c8 g     F .text	00000276 .hidden __aeabi_dadd
00009d60 g     F .text	00000082 .hidden __ledf2
10000000 g       .data	00000000 _bdata_vma
0000185e g     F .text	00000038 sl_string__append
000082c4 g     F .text	0000009c __pow5mult
000098c8 g     F .text	0000006a .hidden __aeabi_ul2d
0000b338 g     O .text	00000020 __sf_fake_stderr
00003534 g     F .text	00000048 hw_timer__enable
00004244 g     F .text	00000002 __retarget_lock_release_recursive
00000398 g     F .text	0000003c startup__initialize_ram
00000af8 g     F .text	0000013c sd_card__initialize
000087c0 g     F .text	000000b6 __ssputs_r
00000224 g     F .text	00000008 clock__get_peripheral_clock_hz
000031d0 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000284 g     F .text	000000c0 crash__report_if_occurred
00009e54 g     F .text	00000012 .hidden __aeabi_dcmpgt
10010000 g       *ABS*	00000000 __top_ram_64k
00004446 g     F .text	00000024 __sfputs_r
0000753c g     F .text	0000000c __sfp_lock_acquire
00007eb0 g     F .text	00000000 memchr
000047dc  w    F .text	00000454 _printf_float
00002f40 g     F .text	00000074 xTaskCheckForTimeOut
000042c8 g     F .text	0000009c _free_r
00002fe0 g     F .text	000000a4 xTaskPriorityInherit
00009e40 g     F .text	00000012 .hidden __aeabi_dcmpge
000090d4 g     F .text	00000058 __srget_r
00008a68 g     F .text	0000007a _sungetc_r
000095c4 g     F .text	0000027a .hidden __aeabi_dsub
00002b54 g     F .text	00000010 vTaskSuspendAll
0000572a g     F .text	0000002e strstr
000098c8 g     F .text	0000006a .hidden __floatundidf
0000a050 g     F .text	00000010 _lseek
00008360 g     F .text	000000a6 __lshift
00003514 g     F .text	0000001e gpio__toggle
00001742 g     F .text	0000000c sl_string__get_length
00001ea2 g     F .text	00000020 uxListRemove
000019e0 g     F .text	0000001c sl_string__erase_at_substring
00001690 g     F .text	00000040 configASSERT_callback
000056e0 g     F .text	00000024 strncmp
00001338 g     F .text	00000010 cli__crash_me
000081a2 g     F .text	00000120 __multiply
00002a18 g     F .text	0000006c xTaskCreateStatic
000008bc g     F .text	00000014 ff_cre_syncobj
00005704 g     F .text	00000026 strncpy
000085e0 g     F .text	0000009c __d2b
00005638 g     F .text	00000038 strcasecmp
00001348 g     F .text	00000010 cli__task_list
00002dbc g     F .text	000000bc vTaskSwitchContext
00003888 g     F .text	0000001e i2c__read_single
00003448 g     F .text	00000028 gpio__construct_as_input
0000931c g     F .text	00000004 _strtoul_r
00002058 g     F .text	0000008c xQueueGenericCreateStatic
00001a68 g     F .text	00000040 sl_string__trim_end
000093d4 g     F .text	00000020 _close_r
00009860 g     F .text	00000022 .hidden __aeabi_i2d
000016d0 g     F .text	00000018 vApplicationGetIdleTaskMemory
00000cd0 g     F .text	000000a8 sd_card__write
10000354 g       .data	00000000 _data_end
000065b0 g     F .text	000000dc __swsetup_r
00003af4 g     F .text	00000006 ssp2__dma_write_block
00001654 g     F .text	0000001c vApplicationStackOverflowHook
00004110  w    F .text	00000002 .hidden __aeabi_ldiv0
00009b88 g     F .text	000001d0 .hidden __divdf3
000075dc g     F .text	0000008c __sfp
000086e2 g     F .text	00000034 __copybits
00007560 g     F .text	0000000c __sinit_lock_release
0000195c g     F .text	00000022 sl_string__ends_with_newline
0000643c g     F .text	00000058 _vsnprintf_r
00001598 g     F .text	00000012 sys_time__get_uptime_ms
00000000 g       .text	00000000 __base_flash
00009934 g     F .text	00000254 .hidden __muldf3
00003370 g     F .text	0000000c board_io__get_led2
000091a4 g     F .text	00000022 __sread
00007f50 g     F .text	0000000c __malloc_lock
00007420 g     F .text	00000078 _fflush_r
00003d40 g     F .text	00000054 uart__polled_get
00008758 g     F .text	0000001c _calloc_r
0000156c g     F .text	0000002c sys_time__get_uptime_us
0000b358 g     O .text	00000020 __sf_fake_stdin
00004242 g     F .text	00000002 __retarget_lock_acquire_recursive
000042b8 g     F .text	00000010 memset
000038f8 g     F .text	00000018 i2c__detect
000015e8 g     F .text	0000006c main
00004240 g     F .text	00000002 __retarget_lock_init_recursive
10000000 g       .text	00000000 __base_ram_64k
00001e74 g     F .text	0000002e vListInsert
00009226 g     F .text	00000008 __sclose
00009f24 g     F .text	0000009e .hidden __truncdfsf2
00006424 g     F .text	00000004 _strtol_r
0000421c g     F .text	00000024 getchar
000000e4 g       .text	00000000 __init_array_end
00001b60 g     F .text	00000024 vPortSVCHandler
000067a0 g     F .text	00000b74 _dtoa_r
00004364 g     F .text	000000b4 _malloc_r
00009394 g     F .text	0000001a __ascii_wctomb
000098d8 g     F .text	0000005a .hidden __aeabi_l2d
000018ae g     F .text	00000014 sl_string__equals_to_ignore_case
0000084c g     F .text	00000070 f_mount
00009320 g     F .text	00000074 __submore
000019b6 g     F .text	00000008 sl_string__erase_first
00007668 g     F .text	00000038 _fwalk
000026f4 g     F .text	0000009c xQueueReceiveFromISR
00000f04 g     F .text	00000134 app_cli__process_input
000020e4 g     F .text	00000048 xQueueGenericCreate
00003c44 g     F .text	00000014 uart__is_transmit_queue_initialized
00003a9c g     F .text	00000044 ssp2__initialize
00000c34 g     F .text	00000010 sd_card__status
00009ff4 g     F .text	0000003c .hidden __fixunsdfdi
00009d68 g     F .text	0000007a .hidden __nedf2
00001aac g     F .text	00000004 xPortPendSVHandler_wrapper
00003834 g     F .text	00000054 i2c__read_slave_data
00005304 g     F .text	00000030 iprintf
000008ec g     F .text	0000000a ff_rel_grant
00002c88 g     F .text	000000ec xTaskResumeAll
000055f8 g     F .text	00000040 sprintf
00001aa8 g     F .text	00000004 vPortSVCHandler_wrapper
00002ae0 g     F .text	00000074 vTaskStartScheduler
00004776 g     F .text	00000064 __exponent
0000392c g     F .text	00000034 lpc_peripheral__interrupt_dispatcher
00009fc4 g     F .text	0000002e .hidden __fixdfdi
00001724 g     F .text	00000012 sl_string__get_capacity
000093b0 g     F .text	00000024 _write_r
0000021c g     F .text	00000008 clock__get_core_clock_hz
000055ec g     F .text	0000000c nanf
00004c30 g     F .text	000000ea _printf_common
10000180 g     O .data	00000004 _impure_ptr
00007314 g     F .text	0000010c __sflush_r
000000e4 g       .text	00000000 __preinit_array_end
000033dc g     F .text	00000020 gpio__enable_open_drain
00003324 g     F .text	00000010 board_io__sd_card_cs
000014f8 g     F .text	00000024 spi2_mutex__release
00008878 g     F .text	000001f0 _svfiprintf_r
000094a4 g     F .text	00000118 __srefill_r
00007e80 g     F .text	00000024 __ascii_mbtowc
000084f4 g     F .text	0000004c __ulp
00002fb4 g     F .text	0000000c vTaskMissedYield
00003334 g     F .text	00000010 board_io__sd_card_ds
0000b398 g     O .text	0000000c _C_numeric_locale
0000643c g     F .text	00000058 _vsniprintf_r
0000026c g     F .text	00000018 crash__record_get
00000ad8 g     F .text	00000020 sd_card__update_status
00009ee4 g     F .text	00000040 .hidden __aeabi_d2uiz
00009130 g     F .text	00000010 nan
00002b64 g     F .text	00000124 xTaskIncrementTick
00008b1c g     F .text	00000290 __ssvfiscanf_r
000016e8 g     F .text	00000014 freertos_hooks__get_run_time_counter_value
00007db8 g     F .text	00000048 __swhatbuf_r
10010000 g       *ABS*	00000000 _estack
000018c2 g     F .text	00000028 sl_string__begins_with_limited_chars
0000178a g     F .text	0000001a sl_string__printf
00009e04 g     F .text	00000012 .hidden __aeabi_dcmpeq
00000400 g     F .text	00000022 acceleration__init
00001fdc g     F .text	0000007c xQueueGenericReset
00000dc0 g     F .text	00000070 _write
00001398 g     F .text	0000000c delay__ms
000017f4 g     F .text	00000016 sl_string__initialize_from
00000000 g     O .text	000000e4 interrupt_vector_table
100012e5 g     O .bss	00000001 __lock___at_quick_exit_mutex
00004140 g     F .text	000000cc _fputs_r
20000000 g       .text	00000000 __base_ram_32k
00002a84 g     F .text	0000005a xTaskCreate
000064b0 g     F .text	00000048 _vsscanf_r
000091ca g     F .text	00000038 __swrite
00000944 g     F .text	00000028 disk_write
0000411c g     F .text	00000024 fiprintf
0000446c g     F .text	00000250 _vfiprintf_r
000076a0 g     F .text	0000003c _fwalk_reent
00003388 g     F .text	0000002a gpio__set_function
0000176e g     F .text	0000001c sl_string__vprintf
0000843a g     F .text	000000ba __mdiff
00009e94 g     F .text	0000004e .hidden __aeabi_d2iz
000008da g     F .text	00000012 ff_req_grant
000064f8 g     F .text	00000014 vsiscanf
0000b4dc g       *ABS*	00000000 _bdata_lma
00002d74 g     F .text	00000048 vTaskDelay
00007548 g     F .text	0000000c __sfp_lock_release
0000b378 g     O .text	00000020 __sf_fake_stdout
000055f8 g     F .text	00000040 siprintf
00009140 g     F .text	00000064 __sccl
00004114 g     F .text	00000008 atoi
00002fc0 g     F .text	00000020 xTaskGetSchedulerState
0000b188 g     O .text	00000101 _ctype_
00003120 g     F .text	000000b0 vTaskPriorityDisinheritAfterTimeout
00000e30 g     F .text	0000001c _read
000000e4 g       .text	00000000 __init_array_start
00004110  w    F .text	00000002 .hidden __aeabi_idiv0
00009e68 g     F .text	0000002c .hidden __unorddf2
000035a0 g     F .text	00000018 hw_timer__acknowledge_interrupt
000003d4 g     F .text	00000014 startup__initialize_fpu
100012e6 g     O .bss	00000001 __lock___dd_hash_mutex
00007e00 g     F .text	00000080 __smakebuf_r
100012e7 g     O .bss	00000001 __lock___tz_mutex
0000568a g     F .text	00000010 strlen
0000091c g     F .text	00000028 disk_read
00001b2c g     F .text	0000002c pxPortInitialiseStack
00004d1c g     F .text	00000228 _printf_i
00003cf4 g     F .text	0000004c uart__get
00009df4 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00003358 g     F .text	0000000c board_io__get_led0
00009d58 g     F .text	0000008a .hidden __gedf2
0000777c g     F .text	00000446 __gethex
100012dc g     O .bss	00000004 __malloc_sbrk_start
00001896 g     F .text	00000018 sl_string__append_char
000038a8 g     F .text	00000050 i2c__write_slave_data
00001358 g     F .text	00000040 delay__us
00005670 g     F .text	0000001a strchr
00001918 g     F .text	00000044 sl_string__begins_with_whole_word
00009884 g     F .text	00000042 .hidden __aeabi_f2d
0000420c g     F .text	00000010 fputs
00001b84 g     F .text	00000044 vPortEnterCritical
00003960 g     F .text	00000024 lpc_peripheral__turn_on_power_to
100012d8 g     O .bss	00000004 __malloc_free_list
00000efa g     F .text	0000000a app_cli__add_command_handler
000095c4 g     F .text	0000027a .hidden __subdf3
0000446c g     F .text	00000250 _vfprintf_r
000000e4 g       .text	00000000 __preinit_array_start
000035b8 g     F .text	00000010 hw_timer__get_value
00008130 g     F .text	00000060 __lo0bits
000031e8 g     F .text	00000028 vRunTimeStatIsrEntry
000000e4 g     F .text	00000074 entry_point
00003490 g     F .text	00000028 gpio__construct_as_output
000022b2 g     F .text	00000024 xQueueCreateMutex
100001e8 g     O .data	0000016c __global_locale
0000180a g     F .text	00000054 sl_string__insert_at
000010c4 g     F .text	0000007c sj2_cli__init
00003afa g     F .text	00000006 ssp2__dma_read_block
100012e8 g     O .bss	00000001 __lock___sfp_recursive_mutex
00002394 g     F .text	000000a4 xQueueGiveFromISR
0000197e g     F .text	00000038 sl_string__erase_after
0000a030 g     F .text	00000010 _close
00004258 g     F .text	00000010 free
000012f0 g     F .text	00000048 cli__i2c
00007554 g     F .text	0000000c __sinit_lock_acquire
00004f44  w    F .text	000003c0 _scanf_float
00007ffe g     F .text	00000076 __multadd
00007fd0 g     F .text	0000002e _Bfree
00001768 g     F .text	00000006 sl_string__clear
00001680 g     F .text	00000010 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
__base_flash():
       0:	00 00 01 10 e5 00 00 00 75 01 00 00 59 01 00 00     ........u...Y...
      10:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      20:	75 01 00 00 75 01 00 00 75 01 00 00 a9 1a 00 00     u...u...u.......
      30:	75 01 00 00 75 01 00 00 ad 1a 00 00 b1 1a 00 00     u...u...........
      40:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      50:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      60:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      70:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      80:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      90:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      a0:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      b0:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      c0:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      d0:	2d 39 00 00 2d 39 00 00 2d 39 00 00 2d 39 00 00     -9..-9..-9..-9..
      e0:	2d 39 00 00                                         -9..

000000e4 <entry_point>:
entry_point():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:15

extern void main(void);
static void entry_point__halt(void);
static void entry_point__handle_crash_report(void);

void entry_point(void) {
      e4:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:16
  startup__initialize_ram();
      e6:	f000 f957 	bl	398 <startup__initialize_ram>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:17
  startup__initialize_fpu();
      ea:	f000 f973 	bl	3d4 <startup__initialize_fpu>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:18
  startup__initialize_interrupts();
      ee:	f000 f97b 	bl	3e8 <startup__initialize_interrupts>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:20

  clock__initialize_system_clock_96mhz();
      f2:	f000 f89b 	bl	22c <clock__initialize_system_clock_96mhz>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:21
  sys_time__init(clock__get_peripheral_clock_hz());
      f6:	f000 f895 	bl	224 <clock__get_peripheral_clock_hz>
      fa:	f001 fa21 	bl	1540 <sys_time__init>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:30
   * We need to initialize the trace early before using ANY RTOS API
   */
  vTraceEnable(TRC_INIT);

  // Peripherals init initializes UART and then we can print the crash report if applicable
  peripherals_init();
      fe:	f001 f951 	bl	13a4 <peripherals_init>
entry_point__handle_crash_report():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:54
  while (1) {
  }
}

static void entry_point__handle_crash_report(void) {
  if (crash__report_if_occurred()) {
     102:	f000 f8bf 	bl	284 <crash__report_if_occurred>
     106:	b140      	cbz	r0, 11a <entry_point+0x36>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:55
    while (sys_time__get_uptime_ms() < 5000) {
     108:	f241 3487 	movw	r4, #4999	; 0x1387
     10c:	2500      	movs	r5, #0
     10e:	f001 fa43 	bl	1598 <sys_time__get_uptime_ms>
     112:	428d      	cmp	r5, r1
     114:	bf08      	it	eq
     116:	4284      	cmpeq	r4, r0
     118:	d2f9      	bcs.n	10e <entry_point+0x2a>
entry_point():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:33
  if (!sensors__init()) {
     11a:	f000 f982 	bl	422 <sensors__init>
     11e:	b918      	cbnz	r0, 128 <entry_point+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:34
    printf("\n%s(): WARNING: Sensor errors on this board\n", __FUNCTION__);
     120:	4908      	ldr	r1, [pc, #32]	; (144 <entry_point+0x60>)
     122:	4809      	ldr	r0, [pc, #36]	; (148 <entry_point+0x64>)
     124:	f005 f8ee 	bl	5304 <iprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:40
  printf("\n%s(): Entering main()\n", __FUNCTION__);
     128:	4906      	ldr	r1, [pc, #24]	; (144 <entry_point+0x60>)
     12a:	4808      	ldr	r0, [pc, #32]	; (14c <entry_point+0x68>)
     12c:	f005 f8ea 	bl	5304 <iprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:41
  main();
     130:	f001 fa5a 	bl	15e8 <main>
entry_point__halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:48
  fprintf(stderr, "ERROR: main() should never return, program has been halted");
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <entry_point+0x6c>)
     136:	4807      	ldr	r0, [pc, #28]	; (154 <entry_point+0x70>)
     138:	681b      	ldr	r3, [r3, #0]
     13a:	68d9      	ldr	r1, [r3, #12]
     13c:	f004 f866 	bl	420c <fputs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/entry_point.c:50
  }
     140:	e7fe      	b.n	140 <entry_point+0x5c>
     142:	bf00      	nop
     144:	0000a060 	.word	0x0000a060
     148:	0000a06c 	.word	0x0000a06c
     14c:	0000a099 	.word	0x0000a099
     150:	10000180 	.word	0x10000180
     154:	0000a0b1 	.word	0x0000a0b1

00000158 <isr_hard_fault>:
isr_hard_fault():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:128
/**
 * Explanation of register usage dictated by ARM's EABI:
 * https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention
 */
static void isr_hard_fault(void) {
  __asm__ volatile("tst lr, #4                                    \n"
     158:	f01e 0f04 	tst.w	lr, #4
     15c:	bf0c      	ite	eq
     15e:	f3ef 8008 	mrseq	r0, MSP
     162:	f3ef 8009 	mrsne	r0, PSP
     166:	6981      	ldr	r1, [r0, #24]
     168:	4a00      	ldr	r2, [pc, #0]	; (16c <handler_address>)
     16a:	4710      	bx	r2

0000016c <handler_address>:
     16c:	000001d1 	.word	0x000001d1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:136
                   "mrsne r0, psp                                 \n"
                   "ldr r1, [r0, #24]                             \n"
                   "ldr r2, handler_address                       \n"
                   "bx r2                                         \n"
                   "handler_address: .word isr_hard_fault_handler \n");
}
     170:	4770      	bx	lr
handler_address():
     172:	Address 0x0000000000000172 is out of bounds.


00000174 <halt>:
halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:101
static void halt(void) {
     174:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:106
  fprintf(stderr, "Unexpected CPU exception ");
     176:	4c0f      	ldr	r4, [pc, #60]	; (1b4 <halt+0x40>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:105
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     178:	4b0f      	ldr	r3, [pc, #60]	; (1b8 <halt+0x44>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:106
  fprintf(stderr, "Unexpected CPU exception ");
     17a:	4810      	ldr	r0, [pc, #64]	; (1bc <halt+0x48>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:105
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     17c:	781d      	ldrb	r5, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:106
  fprintf(stderr, "Unexpected CPU exception ");
     17e:	6823      	ldr	r3, [r4, #0]
     180:	68d9      	ldr	r1, [r3, #12]
     182:	f004 f843 	bl	420c <fputs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:107
  fprintf(stderr, "%u (interrupt) has occured and the program will now halt\n", isr_num);
     186:	6823      	ldr	r3, [r4, #0]
     188:	490d      	ldr	r1, [pc, #52]	; (1c0 <halt+0x4c>)
     18a:	68d8      	ldr	r0, [r3, #12]
     18c:	462a      	mov	r2, r5
     18e:	f003 ffc5 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:109
  if (isr_num < 16) {
     192:	2d0f      	cmp	r5, #15
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:113
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     194:	6823      	ldr	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:109
  if (isr_num < 16) {
     196:	d807      	bhi.n	1a8 <halt+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:113
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     198:	4a0a      	ldr	r2, [pc, #40]	; (1c4 <halt+0x50>)
     19a:	490b      	ldr	r1, [pc, #44]	; (1c8 <halt+0x54>)
     19c:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
     1a0:	68d8      	ldr	r0, [r3, #12]
     1a2:	f003 ffbb 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:119 (discriminator 1)
    ;
     1a6:	e7fe      	b.n	1a6 <halt+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:115
    fprintf(stderr, "Did you register the interrupt correctly using lpc_peripherals.h API?");
     1a8:	68d9      	ldr	r1, [r3, #12]
     1aa:	4808      	ldr	r0, [pc, #32]	; (1cc <halt+0x58>)
     1ac:	f004 f82e 	bl	420c <fputs>
     1b0:	e7f9      	b.n	1a6 <halt+0x32>
     1b2:	bf00      	nop
     1b4:	10000180 	.word	0x10000180
     1b8:	e000ed04 	.word	0xe000ed04
     1bc:	0000a0ec 	.word	0x0000a0ec
     1c0:	0000a106 	.word	0x0000a106
     1c4:	0000a1f8 	.word	0x0000a1f8
     1c8:	0000a140 	.word	0x0000a140
     1cc:	0000a15e 	.word	0x0000a15e

000001d0 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:138

void isr_hard_fault_handler(unsigned long *hardfault_args) {
     1d0:	b510      	push	{r4, lr}
     1d2:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:139
  crash__registers_s *c = crash__record_get();
     1d4:	f000 f84a 	bl	26c <crash__record_get>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:141

  c->registers[0] = ((unsigned long)hardfault_args[0]);
     1d8:	6823      	ldr	r3, [r4, #0]
     1da:	6083      	str	r3, [r0, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:142
  c->registers[1] = ((unsigned long)hardfault_args[1]);
     1dc:	6863      	ldr	r3, [r4, #4]
     1de:	60c3      	str	r3, [r0, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:143
  c->registers[2] = ((unsigned long)hardfault_args[2]);
     1e0:	68a3      	ldr	r3, [r4, #8]
     1e2:	6103      	str	r3, [r0, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:144
  c->registers[3] = ((unsigned long)hardfault_args[3]);
     1e4:	68e3      	ldr	r3, [r4, #12]
     1e6:	6143      	str	r3, [r0, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:146

  c->r12 = ((unsigned long)hardfault_args[4]);
     1e8:	6923      	ldr	r3, [r4, #16]
     1ea:	6243      	str	r3, [r0, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:147
  c->lr = ((unsigned long)hardfault_args[5]) - 1;
     1ec:	6963      	ldr	r3, [r4, #20]
     1ee:	3b01      	subs	r3, #1
     1f0:	61c3      	str	r3, [r0, #28]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:148
  c->pc = ((unsigned long)hardfault_args[6]);
     1f2:	69a3      	ldr	r3, [r4, #24]
     1f4:	6183      	str	r3, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/interrupt_vector_table.c:149
  c->psr = ((unsigned long)hardfault_args[7]);
     1f6:	69e3      	ldr	r3, [r4, #28]
     1f8:	6203      	str	r3, [r0, #32]
__DSB():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     1fa:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     1fe:	4905      	ldr	r1, [pc, #20]	; (214 <isr_hard_fault_handler+0x44>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <isr_hard_fault_handler+0x48>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     202:	68ca      	ldr	r2, [r1, #12]
     204:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     208:	4313      	orrs	r3, r2
     20a:	60cb      	str	r3, [r1, #12]
__DSB():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
     20c:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1944
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
     210:	bf00      	nop
     212:	e7fd      	b.n	210 <isr_hard_fault_handler+0x40>
     214:	e000ed00 	.word	0xe000ed00
     218:	05fa0004 	.word	0x05fa0004

0000021c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:12
 * Then, the Cortex-M4 port uses that reference to configure the RTOS tick rate.
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz() configures
 * fixed CPU frequency. It is rare that anyone needs to change this (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
     21c:	4800      	ldr	r0, [pc, #0]	; (220 <clock__get_core_clock_hz+0x4>)
     21e:	4770      	bx	lr
     220:	05b8d800 	.word	0x05b8d800

00000224 <clock__get_peripheral_clock_hz>:
clock__get_peripheral_clock_hz():
     224:	4800      	ldr	r0, [pc, #0]	; (228 <clock__get_peripheral_clock_hz+0x4>)
     226:	4770      	bx	lr
     228:	05b8d800 	.word	0x05b8d800

0000022c <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:21

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
     22c:	4b0e      	ldr	r3, [pc, #56]	; (268 <clock__initialize_system_clock_96mhz+0x3c>)
     22e:	2207      	movs	r2, #7
     230:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:25
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
     234:	21aa      	movs	r1, #170	; 0xaa
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:22
  LPC_SC->PLL0CON = 1; // PLL enable
     236:	2201      	movs	r2, #1
     238:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:25
  LPC_SC->PLL0FEED = 0xAA;
     23c:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:26
  LPC_SC->PLL0FEED = 0x55;
     240:	2155      	movs	r1, #85	; 0x55
     242:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:29

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
     246:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:33 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
     24a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
     24e:	0552      	lsls	r2, r2, #21
     250:	d5fb      	bpl.n	24a <clock__initialize_system_clock_96mhz+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:38
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
     252:	681a      	ldr	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:39
  flash_cfg &= ~(0xF << 12);
     254:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:40
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
     258:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:41
  LPC_SC->FLASHCFG = flash_cfg;
     25c:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:45

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
     25e:	f240 1201 	movw	r2, #257	; 0x101
     262:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/clock.c:46
}
     266:	4770      	bx	lr
     268:	400fc000 	.word	0x400fc000

0000026c <crash__record_get>:
crash__record_get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:17

static void crash__clear_record(void);

crash__registers_s *crash__record_get(void) {
  // Record the crash signature first before returning the struct
  crash_registers.signature = crash__signature;
     26c:	4802      	ldr	r0, [pc, #8]	; (278 <crash__record_get+0xc>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:18
  crash_registers.signature_inverted = ~crash__signature;
     26e:	4a03      	ldr	r2, [pc, #12]	; (27c <crash__record_get+0x10>)
     270:	4b03      	ldr	r3, [pc, #12]	; (280 <crash__record_get+0x14>)
     272:	e9c0 2300 	strd	r2, r3, [r0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:21

  return &crash_registers;
}
     276:	4770      	bx	lr
     278:	20000000 	.word	0x20000000
     27c:	deadbeef 	.word	0xdeadbeef
     280:	21524110 	.word	0x21524110

00000284 <crash__report_if_occurred>:
crash__report_if_occurred():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:23

bool crash__report_if_occurred(void) {
     284:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:26
  bool crash_occured = false;

  if (crash__signature == crash_registers.signature && ~crash__signature == crash_registers.signature_inverted) {
     286:	4c22      	ldr	r4, [pc, #136]	; (310 <crash__report_if_occurred+0x8c>)
     288:	4b22      	ldr	r3, [pc, #136]	; (314 <crash__report_if_occurred+0x90>)
     28a:	6822      	ldr	r2, [r4, #0]
     28c:	429a      	cmp	r2, r3
     28e:	d13d      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:26 (discriminator 1)
     290:	6862      	ldr	r2, [r4, #4]
     292:	4b21      	ldr	r3, [pc, #132]	; (318 <crash__report_if_occurred+0x94>)
     294:	429a      	cmp	r2, r3
     296:	d139      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:29
    crash_occured = true;

    fprintf(stderr, "----------------------------------------\n"
     298:	4d20      	ldr	r5, [pc, #128]	; (31c <crash__report_if_occurred+0x98>)
     29a:	4821      	ldr	r0, [pc, #132]	; (320 <crash__report_if_occurred+0x9c>)
     29c:	682b      	ldr	r3, [r5, #0]
     29e:	68d9      	ldr	r1, [r3, #12]
     2a0:	f003 ffb4 	bl	420c <fputs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:32
                    "---- WARNING: We crashed previously ----\n");

    fprintf(stderr, "  PC: 0x%08lX\n", crash_registers.pc);
     2a4:	682b      	ldr	r3, [r5, #0]
     2a6:	69a2      	ldr	r2, [r4, #24]
     2a8:	491e      	ldr	r1, [pc, #120]	; (324 <crash__report_if_occurred+0xa0>)
     2aa:	68d8      	ldr	r0, [r3, #12]
     2ac:	f003 ff36 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:33
    fprintf(stderr, "  LR: 0x%08lX\n", crash_registers.lr);
     2b0:	682b      	ldr	r3, [r5, #0]
     2b2:	69e2      	ldr	r2, [r4, #28]
     2b4:	491c      	ldr	r1, [pc, #112]	; (328 <crash__report_if_occurred+0xa4>)
     2b6:	68d8      	ldr	r0, [r3, #12]
     2b8:	f003 ff30 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:34
    fprintf(stderr, " PSR: 0x%08lX\n", crash_registers.psr);
     2bc:	682b      	ldr	r3, [r5, #0]
     2be:	6a22      	ldr	r2, [r4, #32]
     2c0:	491a      	ldr	r1, [pc, #104]	; (32c <crash__report_if_occurred+0xa8>)
     2c2:	68d8      	ldr	r0, [r3, #12]
     2c4:	f003 ff2a 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:36

    fprintf(stderr, "  R0: 0x%08lX\n", crash_registers.registers[0]);
     2c8:	682b      	ldr	r3, [r5, #0]
     2ca:	68a2      	ldr	r2, [r4, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <crash__report_if_occurred+0xac>)
     2ce:	68d8      	ldr	r0, [r3, #12]
     2d0:	f003 ff24 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:37
    fprintf(stderr, "  R1: 0x%08lX\n", crash_registers.registers[1]);
     2d4:	682b      	ldr	r3, [r5, #0]
     2d6:	68e2      	ldr	r2, [r4, #12]
     2d8:	4916      	ldr	r1, [pc, #88]	; (334 <crash__report_if_occurred+0xb0>)
     2da:	68d8      	ldr	r0, [r3, #12]
     2dc:	f003 ff1e 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:38
    fprintf(stderr, "  R2: 0x%08lX\n", crash_registers.registers[2]);
     2e0:	682b      	ldr	r3, [r5, #0]
     2e2:	6922      	ldr	r2, [r4, #16]
     2e4:	4914      	ldr	r1, [pc, #80]	; (338 <crash__report_if_occurred+0xb4>)
     2e6:	68d8      	ldr	r0, [r3, #12]
     2e8:	f003 ff18 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:39
    fprintf(stderr, "  R3: 0x%08lX\n", crash_registers.registers[3]);
     2ec:	682b      	ldr	r3, [r5, #0]
     2ee:	6962      	ldr	r2, [r4, #20]
     2f0:	4912      	ldr	r1, [pc, #72]	; (33c <crash__report_if_occurred+0xb8>)
     2f2:	68d8      	ldr	r0, [r3, #12]
     2f4:	f003 ff12 	bl	411c <fiprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:41

    fprintf(stderr, "\n"
     2f8:	682b      	ldr	r3, [r5, #0]
     2fa:	4811      	ldr	r0, [pc, #68]	; (340 <crash__report_if_occurred+0xbc>)
     2fc:	68d9      	ldr	r1, [r3, #12]
     2fe:	f003 ff85 	bl	420c <fputs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:27
    crash_occured = true;
     302:	2001      	movs	r0, #1
crash__clear_record():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:53
  crash__clear_record();
  return crash_occured;
}

static void crash__clear_record(void) {
  crash_registers.signature = 0;
     304:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:54
  crash_registers.signature_inverted = 0;
     306:	e9c4 3300 	strd	r3, r3, [r4]
crash__report_if_occurred():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:50
}
     30a:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/crash.c:24
  bool crash_occured = false;
     30c:	2000      	movs	r0, #0
     30e:	e7f9      	b.n	304 <crash__report_if_occurred+0x80>
     310:	20000000 	.word	0x20000000
     314:	deadbeef 	.word	0xdeadbeef
     318:	21524110 	.word	0x21524110
     31c:	10000180 	.word	0x10000180
     320:	0000a238 	.word	0x0000a238
     324:	0000a28b 	.word	0x0000a28b
     328:	0000a29a 	.word	0x0000a29a
     32c:	0000a2a9 	.word	0x0000a2a9
     330:	0000a2b8 	.word	0x0000a2b8
     334:	0000a2c7 	.word	0x0000a2c7
     338:	0000a2d6 	.word	0x0000a2d6
     33c:	0000a2e5 	.word	0x0000a2e5
     340:	0000a2f4 	.word	0x0000a2f4

00000344 <_sbrk>:
sbrk_ram1():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:31
  // These symbols are defined by the linker script
  extern uint32_t _heap_start;
  extern uint32_t _heap_end;

  static void *next_free_heap = (void *)&_heap_start;
  void *memory_to_return = next_free_heap;
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_sbrk+0x3c>)
     346:	6813      	ldr	r3, [r2, #0]
_sbrk():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:11
void *_sbrk(size_t requested_byte_count) {
     348:	b510      	push	{r4, lr}
sbrk_ram1():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:40
   * If our next pointer is outside our valid RAM region, then we cannot return memory back
   * In addition, we need to subtract next_free_heap because of a couple of reasons:
   *   1. Maybe we still have a small chunk we could still serve in the future
   *   2. We do not want to increment next_free_heap and go out of bounds to wrap
   */
  if (!((next_free_heap >= (void *)&_heap_start) && (next_free_heap < (void *)&_heap_end))) {
     34a:	4c0e      	ldr	r4, [pc, #56]	; (384 <_sbrk+0x40>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:32
  next_free_heap += requested_byte_count;
     34c:	1819      	adds	r1, r3, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:40
  if (!((next_free_heap >= (void *)&_heap_start) && (next_free_heap < (void *)&_heap_end))) {
     34e:	42a1      	cmp	r1, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:32
  next_free_heap += requested_byte_count;
     350:	6011      	str	r1, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:40
  if (!((next_free_heap >= (void *)&_heap_start) && (next_free_heap < (void *)&_heap_end))) {
     352:	d302      	bcc.n	35a <_sbrk+0x16>
     354:	4c0c      	ldr	r4, [pc, #48]	; (388 <_sbrk+0x44>)
     356:	42a1      	cmp	r1, r4
     358:	d30b      	bcc.n	372 <_sbrk+0x2e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:42
    memory_to_return = NULL;
    next_free_heap -= requested_byte_count;
     35a:	6013      	str	r3, [r2, #0]
sbrk_ram2():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:53
static void *sbrk_ram2(size_t requested_byte_count) {
  extern uint32_t __start_of_unused_ram64;
  extern uint32_t __end_of_unused_ram64;

  static void *next_free_heap = (void *)&__start_of_unused_ram64;
  void *memory_to_return = next_free_heap;
     35c:	4a0b      	ldr	r2, [pc, #44]	; (38c <_sbrk+0x48>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:56
  next_free_heap += requested_byte_count;

  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) && (next_free_heap < (void *)&__end_of_unused_ram64))) {
     35e:	490c      	ldr	r1, [pc, #48]	; (390 <_sbrk+0x4c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:53
  void *memory_to_return = next_free_heap;
     360:	6813      	ldr	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:54
  next_free_heap += requested_byte_count;
     362:	4418      	add	r0, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:56
  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) && (next_free_heap < (void *)&__end_of_unused_ram64))) {
     364:	4288      	cmp	r0, r1
     366:	d308      	bcc.n	37a <_sbrk+0x36>
     368:	490a      	ldr	r1, [pc, #40]	; (394 <_sbrk+0x50>)
     36a:	4288      	cmp	r0, r1
     36c:	d205      	bcs.n	37a <_sbrk+0x36>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:54
  next_free_heap += requested_byte_count;
     36e:	6010      	str	r0, [r2, #0]
     370:	e001      	b.n	376 <_sbrk+0x32>
_sbrk():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:18
  if (NULL == memory_to_return) {
     372:	2b00      	cmp	r3, #0
     374:	d0f2      	beq.n	35c <_sbrk+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:23
}
     376:	4618      	mov	r0, r3
     378:	bd10      	pop	{r4, pc}
sbrk_ram2():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:57
    memory_to_return = NULL;
     37a:	2300      	movs	r3, #0
_sbrk():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:22
  return memory_to_return;
     37c:	e7fb      	b.n	376 <_sbrk+0x32>
     37e:	bf00      	nop
     380:	10000000 	.word	0x10000000
     384:	20000028 	.word	0x20000028
     388:	20008000 	.word	0x20008000
     38c:	10000004 	.word	0x10000004
     390:	100012f0 	.word	0x100012f0
     394:	10010000 	.word	0x10010000

00000398 <startup__initialize_ram>:
startup__init_data_sram():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:58
  extern void *_bdata_vma;
  extern void *_data_end;

  uint8_t *src = (uint8_t *)&_bdata_lma;
  uint8_t *dest = (uint8_t *)&_bdata_vma;
  while (dest < (uint8_t *)&_data_end) {
     398:	4a09      	ldr	r2, [pc, #36]	; (3c0 <startup__initialize_ram+0x28>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:57
  uint8_t *dest = (uint8_t *)&_bdata_vma;
     39a:	4b0a      	ldr	r3, [pc, #40]	; (3c4 <startup__initialize_ram+0x2c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:58
  while (dest < (uint8_t *)&_data_end) {
     39c:	490a      	ldr	r1, [pc, #40]	; (3c8 <startup__initialize_ram+0x30>)
     39e:	428b      	cmp	r3, r1
     3a0:	d305      	bcc.n	3ae <startup__initialize_ram+0x16>
startup__init_bss_sram():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:69

static void startup__init_bss_sram(void) {
  extern void *_bss_start;
  extern void *_bss_end;

  uint8_t *ptr = (uint8_t *)&_bss_start;
     3a2:	4b0a      	ldr	r3, [pc, #40]	; (3cc <startup__initialize_ram+0x34>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:70
  while (ptr < (uint8_t *)&_bss_end) {
     3a4:	4a0a      	ldr	r2, [pc, #40]	; (3d0 <startup__initialize_ram+0x38>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:71
    *ptr = 0U;
     3a6:	2100      	movs	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:70
  while (ptr < (uint8_t *)&_bss_end) {
     3a8:	4293      	cmp	r3, r2
     3aa:	d305      	bcc.n	3b8 <startup__initialize_ram+0x20>
startup__initialize_ram():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:14
}
     3ac:	4770      	bx	lr
startup__init_data_sram():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:59
    *dest = *src;
     3ae:	f812 0b01 	ldrb.w	r0, [r2], #1
     3b2:	f803 0b01 	strb.w	r0, [r3], #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:61
    src++;
     3b6:	e7f2      	b.n	39e <startup__initialize_ram+0x6>
startup__init_bss_sram():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:71
    *ptr = 0U;
     3b8:	f803 1b01 	strb.w	r1, [r3], #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:72
    ptr++;
     3bc:	e7f4      	b.n	3a8 <startup__initialize_ram+0x10>
     3be:	bf00      	nop
     3c0:	0000b4dc 	.word	0x0000b4dc
     3c4:	10000000 	.word	0x10000000
     3c8:	10000354 	.word	0x10000354
     3cc:	10000358 	.word	0x10000358
     3d0:	100012f0 	.word	0x100012f0

000003d4 <startup__initialize_fpu>:
startup__initialize_fpu():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:21
  SCB->CPACR |= (0xF << 20); // Set [23:20]
     3d4:	4a03      	ldr	r2, [pc, #12]	; (3e4 <startup__initialize_fpu+0x10>)
     3d6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
     3da:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     3de:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:22
}
     3e2:	4770      	bx	lr
     3e4:	e000ed00 	.word	0xe000ed00

000003e8 <startup__initialize_interrupts>:
__NVIC_SetPriority():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     3e8:	4804      	ldr	r0, [pc, #16]	; (3fc <startup__initialize_interrupts+0x14>)
startup__initialize_interrupts():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:37
  for (int peripheral = first_peripheral; peripheral <= last_peripheral; peripheral++) {
     3ea:	2300      	movs	r3, #0
__NVIC_SetPriority():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3ec:	2120      	movs	r1, #32
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813 (discriminator 3)
     3ee:	18c2      	adds	r2, r0, r3
startup__initialize_interrupts():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:37 (discriminator 3)
     3f0:	3301      	adds	r3, #1
     3f2:	2b29      	cmp	r3, #41	; 0x29
__NVIC_SetPriority():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813 (discriminator 3)
     3f4:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
startup__initialize_interrupts():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:37 (discriminator 3)
     3f8:	d1f9      	bne.n	3ee <startup__initialize_interrupts+0x6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/startup/startup.c:49
}
     3fa:	4770      	bx	lr
     3fc:	e000e100 	.word	0xe000e100

00000400 <acceleration__init>:
acceleration__init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:14
  acceleration__memory_axis_base = 0x01,
  acceleration__memory_control = 0x2A,
  acceleration__memory_who_am_i = 0x0D,
} acceleration__memory_e;

bool acceleration__init(void) {
     400:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:16
  const uint8_t active_mode_with_100Hz = (1 << 0) | (3 << 3);
  i2c__write_single(acceleration__sensor_bus, acceleration__address, acceleration__memory_control,
     402:	222a      	movs	r2, #42	; 0x2a
     404:	2319      	movs	r3, #25
     406:	2138      	movs	r1, #56	; 0x38
     408:	2002      	movs	r0, #2
     40a:	f003 fa81 	bl	3910 <i2c__write_single>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:21
                    active_mode_with_100Hz);

  const uint8_t who_am_i_expected_value = 0x2A;
  const uint8_t who_am_i_actual_value =
      i2c__read_single(acceleration__sensor_bus, acceleration__address, acceleration__memory_who_am_i);
     40e:	220d      	movs	r2, #13
     410:	2138      	movs	r1, #56	; 0x38
     412:	2002      	movs	r0, #2
     414:	f003 fa38 	bl	3888 <i2c__read_single>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sensors/sources/acceleration.c:24

  return (who_am_i_expected_value == who_am_i_actual_value);
}
     418:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
     41c:	4258      	negs	r0, r3
     41e:	4158      	adcs	r0, r3
     420:	bd08      	pop	{r3, pc}

00000422 <sensors__init>:
sensors__init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sensors/sources/sensors.c:8
#include "acceleration.h"

bool sensors__init(void) {
  bool status = true;

  status &= acceleration__init();
     422:	f7ff bfed 	b.w	400 <acceleration__init>

00000426 <ld_dword>:
ld_dword():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:594
static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
	DWORD rv;

	rv = ptr[3];
	rv = rv << 8 | ptr[2];
     426:	8842      	ldrh	r2, [r0, #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     428:	7843      	ldrb	r3, [r0, #1]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:596
	rv = rv << 8 | ptr[0];
     42a:	7800      	ldrb	r0, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     42c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:598
	return rv;
}
     430:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
     434:	4770      	bx	lr

00000436 <mem_cmp>:
mem_cmp():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:680
}


/* Compare memory block */
static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
{
     436:	b510      	push	{r4, lr}
     438:	4402      	add	r2, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
	int r = 0;

	do {
		r = *d++ - *s++;
     43a:	f810 3b01 	ldrb.w	r3, [r0], #1
     43e:	f811 4b01 	ldrb.w	r4, [r1], #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     442:	4290      	cmp	r0, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
		r = *d++ - *s++;
     444:	eba3 0304 	sub.w	r3, r3, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     448:	d001      	beq.n	44e <mem_cmp+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 1)
     44a:	2b00      	cmp	r3, #0
     44c:	d0f5      	beq.n	43a <mem_cmp+0x4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:689

	return r;
}
     44e:	4618      	mov	r0, r3
     450:	bd10      	pop	{r4, pc}

00000452 <get_ldnumber>:
get_ldnumber():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3123
#if FF_STR_VOLUME_ID		/* Find string volume ID */
	const char *sp;
	char c;
#endif

	tt = tp = *path;
     452:	6802      	ldr	r2, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     454:	b14a      	cbz	r2, 46a <get_ldnumber+0x18>
     456:	4613      	mov	r3, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 2)
	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the path */
     458:	f813 1b01 	ldrb.w	r1, [r3], #1
     45c:	291f      	cmp	r1, #31
     45e:	d90b      	bls.n	478 <get_ldnumber+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 1)
     460:	293a      	cmp	r1, #58	; 0x3a
     462:	d1f9      	bne.n	458 <get_ldnumber+0x6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3129

	if (tc == ':') {	/* DOS/Windows style volume ID? */
		i = FF_VOLUMES;
		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
     464:	1c91      	adds	r1, r2, #2
     466:	428b      	cmp	r3, r1
     468:	d002      	beq.n	470 <get_ldnumber+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     46a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3176
	vol = CurrVol;	/* Default drive is current drive */
#else
	vol = 0;		/* Default drive is 0 */
#endif
	return vol;		/* Return the default drive */
}
     46e:	4770      	bx	lr
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3145
		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
     470:	7812      	ldrb	r2, [r2, #0]
     472:	2a30      	cmp	r2, #48	; 0x30
     474:	d1f9      	bne.n	46a <get_ldnumber+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3147
			*path = tt;		/* Snip the drive prefix off */
     476:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3175
	return vol;		/* Return the default drive */
     478:	2000      	movs	r0, #0
     47a:	4770      	bx	lr

0000047c <sync_window.part.6>:
sync_window():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     47c:	b570      	push	{r4, r5, r6, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     47e:	f100 0638 	add.w	r6, r0, #56	; 0x38
     482:	6b42      	ldr	r2, [r0, #52]	; 0x34
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     484:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     486:	2301      	movs	r3, #1
     488:	4631      	mov	r1, r6
     48a:	7840      	ldrb	r0, [r0, #1]
     48c:	f000 fa5a 	bl	944 <disk_write>
     490:	4605      	mov	r5, r0
     492:	b988      	cbnz	r0, 4b8 <sync_window.part.6+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     494:	6b61      	ldr	r1, [r4, #52]	; 0x34
     496:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     498:	6a22      	ldr	r2, [r4, #32]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1051
			fs->wflag = 0;	/* Clear window dirty flag */
     49a:	70e0      	strb	r0, [r4, #3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     49c:	1acb      	subs	r3, r1, r3
     49e:	4293      	cmp	r3, r2
     4a0:	d208      	bcs.n	4b4 <sync_window.part.6+0x38>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1053
				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
     4a2:	78a3      	ldrb	r3, [r4, #2]
     4a4:	2b02      	cmp	r3, #2
     4a6:	d105      	bne.n	4b4 <sync_window.part.6+0x38>
     4a8:	440a      	add	r2, r1
     4aa:	2301      	movs	r3, #1
     4ac:	4631      	mov	r1, r6
     4ae:	7860      	ldrb	r0, [r4, #1]
     4b0:	f000 fa48 	bl	944 <disk_write>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1060
}
     4b4:	4628      	mov	r0, r5
     4b6:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1056
			res = FR_DISK_ERR;
     4b8:	2501      	movs	r5, #1
     4ba:	e7fb      	b.n	4b4 <sync_window.part.6+0x38>

000004bc <move_window>:
move_window():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     4bc:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     4be:	6b43      	ldr	r3, [r0, #52]	; 0x34
     4c0:	428b      	cmp	r3, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1068
{
     4c2:	4604      	mov	r4, r0
     4c4:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     4c6:	d019      	beq.n	4fc <move_window+0x40>
sync_window():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     4c8:	78c3      	ldrb	r3, [r0, #3]
     4ca:	b98b      	cbnz	r3, 4f0 <move_window+0x34>
move_window():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     4cc:	2301      	movs	r3, #1
     4ce:	462a      	mov	r2, r5
     4d0:	f104 0138 	add.w	r1, r4, #56	; 0x38
     4d4:	7860      	ldrb	r0, [r4, #1]
     4d6:	f000 fa21 	bl	91c <disk_read>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     4da:	2800      	cmp	r0, #0
     4dc:	bf18      	it	ne
     4de:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     4e2:	4603      	mov	r3, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1081
			fs->winsect = sector;
     4e4:	6365      	str	r5, [r4, #52]	; 0x34
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     4e6:	bf0c      	ite	eq
     4e8:	4603      	moveq	r3, r0
     4ea:	2301      	movne	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
}
     4ec:	4618      	mov	r0, r3
     4ee:	bd38      	pop	{r3, r4, r5, pc}
sync_window():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1085
     4f0:	f7ff ffc4 	bl	47c <sync_window.part.6>
move_window():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1076
		if (res == FR_OK) {			/* Fill sector window with new data */
     4f4:	4603      	mov	r3, r0
     4f6:	2800      	cmp	r0, #0
     4f8:	d1f8      	bne.n	4ec <move_window+0x30>
     4fa:	e7e7      	b.n	4cc <move_window+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:1069
	FRESULT res = FR_OK;
     4fc:	2300      	movs	r3, #0
     4fe:	e7f5      	b.n	4ec <move_window+0x30>

00000500 <check_fs>:
check_fs():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189

static BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,			/* Filesystem object */
	DWORD sect			/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
     500:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3190
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
     502:	2300      	movs	r3, #0
     504:	70c3      	strb	r3, [r0, #3]
     506:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     50a:	6343      	str	r3, [r0, #52]	; 0x34
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3189
{
     50c:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     50e:	f7ff ffd5 	bl	4bc <move_window>
     512:	4604      	mov	r4, r0
     514:	bb18      	cbnz	r0, 55e <check_fs+0x5e>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     516:	f895 2237 	ldrb.w	r2, [r5, #567]	; 0x237
     51a:	f895 3236 	ldrb.w	r3, [r5, #566]	; 0x236
     51e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
check_fs():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     522:	f64a 2255 	movw	r2, #43605	; 0xaa55
     526:	4293      	cmp	r3, r2
     528:	d11b      	bne.n	562 <check_fs+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198

#if FF_FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR */
#endif
	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/* Valid JumpBoot code? */
     52a:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
     52e:	2beb      	cmp	r3, #235	; 0xeb
     530:	d003      	beq.n	53a <check_fs+0x3a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3198 (discriminator 2)
     532:	3318      	adds	r3, #24
     534:	b2db      	uxtb	r3, r3
     536:	2b01      	cmp	r3, #1
     538:	d815      	bhi.n	566 <check_fs+0x66>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3199
		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
     53a:	2203      	movs	r2, #3
     53c:	490b      	ldr	r1, [pc, #44]	; (56c <check_fs+0x6c>)
     53e:	f105 006e 	add.w	r0, r5, #110	; 0x6e
     542:	f7ff ff78 	bl	436 <mem_cmp>
     546:	b140      	cbz	r0, 55a <check_fs+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3200
		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
     548:	2205      	movs	r2, #5
     54a:	4909      	ldr	r1, [pc, #36]	; (570 <check_fs+0x70>)
     54c:	f105 008a 	add.w	r0, r5, #138	; 0x8a
     550:	f7ff ff71 	bl	436 <mem_cmp>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	}
	return 2;	/* Valid BS but not FAT */
     554:	2800      	cmp	r0, #0
     556:	bf18      	it	ne
     558:	2402      	movne	r4, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3203
}
     55a:	4620      	mov	r0, r4
     55c:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     55e:	2404      	movs	r4, #4
     560:	e7fb      	b.n	55a <check_fs+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3193
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     562:	2403      	movs	r4, #3
     564:	e7f9      	b.n	55a <check_fs+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3202
	return 2;	/* Valid BS but not FAT */
     566:	2402      	movs	r4, #2
     568:	e7f7      	b.n	55a <check_fs+0x5a>
     56a:	bf00      	nop
     56c:	0000a3c8 	.word	0x0000a3c8
     570:	0000a3cc 	.word	0x0000a3cc

00000574 <find_volume>:
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
static FRESULT find_volume (	/* FR_OK(0): successful, !=0: an error occurred */
	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
	BYTE mode					/* !=0: Check write protection for write access */
)
{
     574:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
     578:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     57a:	b085      	sub	sp, #20
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3228
	*rfs = 0;
     57c:	600b      	str	r3, [r1, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3217
{
     57e:	460f      	mov	r7, r1
     580:	4615      	mov	r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3229
	vol = get_ldnumber(path);
     582:	f7ff ff66 	bl	452 <get_ldnumber>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     586:	1e06      	subs	r6, r0, #0
     588:	f2c0 8139 	blt.w	7fe <find_volume+0x28a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3233

	/* Check if the filesystem object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the filesystem object */
     58c:	4ba4      	ldr	r3, [pc, #656]	; (820 <find_volume+0x2ac>)
     58e:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     592:	2c00      	cmp	r4, #0
     594:	f000 8135 	beq.w	802 <find_volume+0x28e>
lock_fs():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     598:	6920      	ldr	r0, [r4, #16]
     59a:	f000 f99e 	bl	8da <ff_req_grant>
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
#if FF_FS_REENTRANT
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     59e:	2800      	cmp	r0, #0
     5a0:	f000 8131 	beq.w	806 <find_volume+0x292>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3238
#endif
	*rfs = fs;							/* Return pointer to the filesystem object */
     5a4:	603c      	str	r4, [r7, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     5a6:	7823      	ldrb	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3240
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
     5a8:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3241
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     5ac:	b16b      	cbz	r3, 5ca <find_volume+0x56>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3242
		stat = disk_status(fs->pdrv);
     5ae:	7860      	ldrb	r0, [r4, #1]
     5b0:	f000 f9af 	bl	912 <disk_status>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3243
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
     5b4:	07c1      	lsls	r1, r0, #31
     5b6:	d408      	bmi.n	5ca <find_volume+0x56>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244
			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
     5b8:	b11d      	cbz	r5, 5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3244 (discriminator 1)
     5ba:	f010 0504 	ands.w	r5, r0, #4
     5be:	d000      	beq.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3245
				return FR_WRITE_PROTECTED;
     5c0:	250a      	movs	r5, #10
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3444
#endif
#if FF_FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
     5c2:	4628      	mov	r0, r5
     5c4:	b005      	add	sp, #20
     5c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     5ca:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     5cc:	b2f0      	uxtb	r0, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     5ce:	7023      	strb	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     5d0:	7060      	strb	r0, [r4, #1]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3256
	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
     5d2:	f000 f990 	bl	8f6 <disk_initialize>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3257
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
     5d6:	07c2      	lsls	r2, r0, #31
     5d8:	f100 8117 	bmi.w	80a <find_volume+0x296>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260
	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
     5dc:	b10d      	cbz	r5, 5e2 <find_volume+0x6e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3260 (discriminator 1)
     5de:	0743      	lsls	r3, r0, #29
     5e0:	d4ee      	bmi.n	5c0 <find_volume+0x4c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3270
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
     5e2:	2100      	movs	r1, #0
     5e4:	4620      	mov	r0, r4
     5e6:	f7ff ff8b 	bl	500 <check_fs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3271
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
     5ea:	2802      	cmp	r0, #2
     5ec:	f040 80ee 	bne.w	7cc <find_volume+0x258>
     5f0:	466f      	mov	r7, sp
     5f2:	f504 71ff 	add.w	r1, r4, #510	; 0x1fe
     5f6:	f204 263e 	addw	r6, r4, #574	; 0x23e
     5fa:	463d      	mov	r5, r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     5fc:	f811 0c04 	ldrb.w	r0, [r1, #-4]
     600:	b110      	cbz	r0, 608 <find_volume+0x94>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 1)
     602:	4608      	mov	r0, r1
     604:	f7ff ff0f 	bl	426 <ld_dword>
     608:	3110      	adds	r1, #16
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     60a:	428e      	cmp	r6, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 4)
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     60c:	f845 0b04 	str.w	r0, [r5], #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     610:	d1f4      	bne.n	5fc <find_volume+0x88>
     612:	2500      	movs	r5, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3279
			bsect = br[i];
     614:	f857 6b04 	ldr.w	r6, [r7], #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     618:	2e00      	cmp	r6, #0
     61a:	f000 80ce 	beq.w	7ba <find_volume+0x246>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280 (discriminator 1)
     61e:	4631      	mov	r1, r6
     620:	4620      	mov	r0, r4
     622:	f7ff ff6d 	bl	500 <check_fs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     626:	2801      	cmp	r0, #1
     628:	f200 80c8 	bhi.w	7bc <find_volume+0x248>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     62c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
     630:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
     634:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3352
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
     638:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     63c:	f040 80ca 	bne.w	7d4 <find_volume+0x260>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     640:	f894 304f 	ldrb.w	r3, [r4, #79]	; 0x4f
     644:	f894 504e 	ldrb.w	r5, [r4, #78]	; 0x4e
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
     648:	ea55 2503 	orrs.w	r5, r5, r3, lsl #8
     64c:	d104      	bne.n	658 <find_volume+0xe4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3355 (discriminator 1)
     64e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
     652:	f7ff fee8 	bl	426 <ld_dword>
     656:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     658:	f894 1048 	ldrb.w	r1, [r4, #72]	; 0x48
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3356
		fs->fsize = fasize;
     65c:	6225      	str	r5, [r4, #32]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     65e:	1e4b      	subs	r3, r1, #1
     660:	2b01      	cmp	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     662:	70a1      	strb	r1, [r4, #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     664:	f200 80b6 	bhi.w	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3362
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
     668:	f894 9045 	ldrb.w	r9, [r4, #69]	; 0x45
     66c:	fa1f f389 	uxth.w	r3, r9
     670:	8163      	strh	r3, [r4, #10]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
     672:	2b00      	cmp	r3, #0
     674:	f000 80ae 	beq.w	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3363 (discriminator 2)
     678:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
     67c:	ea13 0f09 	tst.w	r3, r9
     680:	f040 80a8 	bne.w	7d4 <find_volume+0x260>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     684:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
     688:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
     68c:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
     690:	b23f      	sxth	r7, r7
     692:	fa1f f887 	uxth.w	r8, r7
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     696:	f018 0f0f 	tst.w	r8, #15
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3365
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
     69a:	f8a4 8008 	strh.w	r8, [r4, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     69e:	f040 8099 	bne.w	7d4 <find_volume+0x260>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     6a2:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
     6a6:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
     6aa:	ea50 2003 	orrs.w	r0, r0, r3, lsl #8
     6ae:	d103      	bne.n	6b8 <find_volume+0x144>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3369 (discriminator 1)
     6b0:	f104 0058 	add.w	r0, r4, #88	; 0x58
     6b4:	f7ff feb7 	bl	426 <ld_dword>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     6b8:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
     6bc:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3372
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
     6c0:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     6c4:	f000 8086 	beq.w	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3360
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
     6c8:	fb05 fc01 	mul.w	ip, r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3375
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
     6cc:	eb03 1218 	add.w	r2, r3, r8, lsr #4
     6d0:	4462      	add	r2, ip
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3376
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
     6d2:	4290      	cmp	r0, r2
     6d4:	d37e      	bcc.n	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     6d6:	1a80      	subs	r0, r0, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     6d8:	4548      	cmp	r0, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     6da:	fbb0 f1f9 	udiv	r1, r0, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     6de:	d379      	bcc.n	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     6e0:	4850      	ldr	r0, [pc, #320]	; (824 <find_volume+0x2b0>)
     6e2:	4281      	cmp	r1, r0
     6e4:	d876      	bhi.n	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3381
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
     6e6:	f64f 70f5 	movw	r0, #65525	; 0xfff5
     6ea:	4281      	cmp	r1, r0
     6ec:	f240 808f 	bls.w	80e <find_volume+0x29a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     6f0:	f04f 0903 	mov.w	r9, #3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     6f4:	3102      	adds	r1, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     6f6:	4433      	add	r3, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     6f8:	4432      	add	r2, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     6fa:	f1b9 0f03 	cmp.w	r9, #3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     6fe:	61e1      	str	r1, [r4, #28]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3387
		fs->volbase = bsect;							/* Volume start sector */
     700:	6266      	str	r6, [r4, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     702:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     704:	6322      	str	r2, [r4, #48]	; 0x30
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     706:	d169      	bne.n	7dc <find_volume+0x268>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     708:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
     70c:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
     710:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3391
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
     714:	431f      	orrs	r7, r3
     716:	b23f      	sxth	r7, r7
     718:	2f00      	cmp	r7, #0
     71a:	d15b      	bne.n	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3393
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
     71c:	f104 0064 	add.w	r0, r4, #100	; 0x64
     720:	f7ff fe81 	bl	426 <ld_dword>
     724:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3394
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
     726:	0089      	lsls	r1, r1, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3401
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
     728:	f201 11ff 	addw	r1, r1, #511	; 0x1ff
     72c:	ebb5 2f51 	cmp.w	r5, r1, lsr #9
     730:	d350      	bcc.n	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3405
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
     732:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     736:	e9c4 3305 	strd	r3, r3, [r4, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     73a:	f1b9 0f03 	cmp.w	r9, #3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3406
		fs->fsi_flag = 0x80;
     73e:	f04f 0380 	mov.w	r3, #128	; 0x80
     742:	7123      	strb	r3, [r4, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     744:	d12f      	bne.n	7a6 <find_volume+0x232>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     746:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
     74a:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
     74e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3409
			&& ld_word(fs->win + BPB_FSInfo32) == 1
     752:	2b01      	cmp	r3, #1
     754:	d127      	bne.n	7a6 <find_volume+0x232>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3410
			&& move_window(fs, bsect + 1) == FR_OK)
     756:	1c71      	adds	r1, r6, #1
     758:	4620      	mov	r0, r4
     75a:	f7ff feaf 	bl	4bc <move_window>
     75e:	bb10      	cbnz	r0, 7a6 <find_volume+0x232>
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     760:	f894 2237 	ldrb.w	r2, [r4, #567]	; 0x237
     764:	f894 3236 	ldrb.w	r3, [r4, #566]	; 0x236
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3412
			fs->fsi_flag = 0;
     768:	7120      	strb	r0, [r4, #4]
ld_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     76a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3413
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
     76e:	f64a 2255 	movw	r2, #43605	; 0xaa55
     772:	4293      	cmp	r3, r2
     774:	d117      	bne.n	7a6 <find_volume+0x232>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3414
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
     776:	f104 0038 	add.w	r0, r4, #56	; 0x38
     77a:	f7ff fe54 	bl	426 <ld_dword>
     77e:	4b2a      	ldr	r3, [pc, #168]	; (828 <find_volume+0x2b4>)
     780:	4298      	cmp	r0, r3
     782:	d110      	bne.n	7a6 <find_volume+0x232>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3415
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
     784:	f504 7007 	add.w	r0, r4, #540	; 0x21c
     788:	f7ff fe4d 	bl	426 <ld_dword>
     78c:	4b27      	ldr	r3, [pc, #156]	; (82c <find_volume+0x2b8>)
     78e:	4298      	cmp	r0, r3
     790:	d109      	bne.n	7a6 <find_volume+0x232>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3418
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
     792:	f504 7008 	add.w	r0, r4, #544	; 0x220
     796:	f7ff fe46 	bl	426 <ld_dword>
     79a:	61a0      	str	r0, [r4, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3421
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
     79c:	f504 7009 	add.w	r0, r4, #548	; 0x224
     7a0:	f7ff fe41 	bl	426 <ld_dword>
     7a4:	6160      	str	r0, [r4, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     7a6:	4a22      	ldr	r2, [pc, #136]	; (830 <find_volume+0x2bc>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3429
	fs->fs_type = fmt;		/* FAT sub-type */
     7a8:	f884 9000 	strb.w	r9, [r4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     7ac:	8813      	ldrh	r3, [r2, #0]
     7ae:	3301      	adds	r3, #1
     7b0:	b29b      	uxth	r3, r3
     7b2:	8013      	strh	r3, [r2, #0]
     7b4:	80e3      	strh	r3, [r4, #6]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3443
	return FR_OK;
     7b6:	2500      	movs	r5, #0
     7b8:	e703      	b.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     7ba:	2003      	movs	r0, #3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     7bc:	3501      	adds	r5, #1
     7be:	2d04      	cmp	r5, #4
     7c0:	f47f af28 	bne.w	614 <find_volume+0xa0>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3283
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
     7c4:	2804      	cmp	r0, #4
     7c6:	d105      	bne.n	7d4 <find_volume+0x260>
     7c8:	2501      	movs	r5, #1
     7ca:	e6fa      	b.n	5c2 <find_volume+0x4e>
     7cc:	2804      	cmp	r0, #4
     7ce:	d0fb      	beq.n	7c8 <find_volume+0x254>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3284
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
     7d0:	2801      	cmp	r0, #1
     7d2:	d901      	bls.n	7d8 <find_volume+0x264>
     7d4:	250d      	movs	r5, #13
     7d6:	e6f4      	b.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3269
	bsect = 0;
     7d8:	2600      	movs	r6, #0
     7da:	e727      	b.n	62c <find_volume+0xb8>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3396
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
     7dc:	f1b8 0f00 	cmp.w	r8, #0
     7e0:	d0f8      	beq.n	7d4 <find_volume+0x260>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     7e2:	4463      	add	r3, ip
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     7e4:	f1b9 0f02 	cmp.w	r9, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     7e8:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3398
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
     7ea:	ea4f 0341 	mov.w	r3, r1, lsl #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     7ee:	bf1b      	ittet	ne
     7f0:	185b      	addne	r3, r3, r1
     7f2:	f001 0101 	andne.w	r1, r1, #1
     7f6:	4619      	moveq	r1, r3
     7f8:	eb01 0153 	addne.w	r1, r1, r3, lsr #1
     7fc:	e794      	b.n	728 <find_volume+0x1b4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     7fe:	250b      	movs	r5, #11
     800:	e6df      	b.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     802:	250c      	movs	r5, #12
     804:	e6dd      	b.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3236
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     806:	250f      	movs	r5, #15
     808:	e6db      	b.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3258
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
     80a:	2503      	movs	r5, #3
     80c:	e6d9      	b.n	5c2 <find_volume+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3382
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
     80e:	f640 79f5 	movw	r9, #4085	; 0xff5
     812:	4549      	cmp	r1, r9
     814:	bf8c      	ite	hi
     816:	f04f 0902 	movhi.w	r9, #2
     81a:	f04f 0901 	movls.w	r9, #1
     81e:	e769      	b.n	6f4 <find_volume+0x180>
     820:	10000358 	.word	0x10000358
     824:	0ffffff5 	.word	0x0ffffff5
     828:	41615252 	.word	0x41615252
     82c:	61417272 	.word	0x61417272
     830:	1000035c 	.word	0x1000035c

00000834 <unlock_fs>:
unlock_fs():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
     834:	b140      	cbz	r0, 848 <unlock_fs+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920 (discriminator 2)
     836:	f1a1 030b 	sub.w	r3, r1, #11
     83a:	2b01      	cmp	r3, #1
     83c:	d904      	bls.n	848 <unlock_fs+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:920
     83e:	290f      	cmp	r1, #15
     840:	d002      	beq.n	848 <unlock_fs+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:921
		ff_rel_grant(fs->sobj);
     842:	6900      	ldr	r0, [r0, #16]
     844:	f000 b852 	b.w	8ec <ff_rel_grant>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:923
}
     848:	4770      	bx	lr
     84a:	Address 0x000000000000084a is out of bounds.


0000084c <f_mount>:
f_mount():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
     84c:	b5f0      	push	{r4, r5, r6, r7, lr}
     84e:	b085      	sub	sp, #20
     850:	e9cd 1000 	strd	r1, r0, [sp]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
     854:	a803      	add	r0, sp, #12
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3502
{
     856:	4614      	mov	r4, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3506
	const TCHAR *rp = path;
     858:	9103      	str	r1, [sp, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3510
	vol = get_ldnumber(&rp);
     85a:	f7ff fdfa 	bl	452 <get_ldnumber>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
     85e:	1e05      	subs	r5, r0, #0
     860:	db28      	blt.n	8b4 <f_mount+0x68>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3512
	cfs = FatFs[vol];					/* Pointer to fs object */
     862:	4f15      	ldr	r7, [pc, #84]	; (8b8 <f_mount+0x6c>)
     864:	f857 6025 	ldr.w	r6, [r7, r5, lsl #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3514

	if (cfs) {
     868:	b14e      	cbz	r6, 87e <f_mount+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3519
#if FF_FS_LOCK != 0
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
     86a:	6930      	ldr	r0, [r6, #16]
     86c:	f000 f830 	bl	8d0 <ff_del_syncobj>
     870:	b918      	cbnz	r0, 87a <f_mount+0x2e>
     872:	2402      	movs	r4, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3536 (discriminator 1)

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
     874:	4620      	mov	r0, r4
     876:	b005      	add	sp, #20
     878:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3521
		cfs->fs_type = 0;				/* Clear old fs object */
     87a:	2300      	movs	r3, #0
     87c:	7033      	strb	r3, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3524
	if (fs) {
     87e:	9901      	ldr	r1, [sp, #4]
     880:	b979      	cbnz	r1, 8a2 <f_mount+0x56>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3530
	FatFs[vol] = fs;					/* Register new fs object */
     882:	9b01      	ldr	r3, [sp, #4]
     884:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3532
	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
     888:	2c00      	cmp	r4, #0
     88a:	d0f3      	beq.n	874 <f_mount+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3534
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
     88c:	a901      	add	r1, sp, #4
     88e:	2200      	movs	r2, #0
     890:	4668      	mov	r0, sp
     892:	f7ff fe6f 	bl	574 <find_volume>
     896:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3535
	LEAVE_FF(fs, res);
     898:	4601      	mov	r1, r0
     89a:	9801      	ldr	r0, [sp, #4]
     89c:	f7ff ffca 	bl	834 <unlock_fs>
     8a0:	e7e8      	b.n	874 <f_mount+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3525
		fs->fs_type = 0;				/* Clear new fs object */
     8a2:	2300      	movs	r3, #0
     8a4:	f801 3b10 	strb.w	r3, [r1], #16
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3527
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
     8a8:	b2e8      	uxtb	r0, r5
     8aa:	f000 f807 	bl	8bc <ff_cre_syncobj>
     8ae:	2800      	cmp	r0, #0
     8b0:	d1e7      	bne.n	882 <f_mount+0x36>
     8b2:	e7de      	b.n	872 <f_mount+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
     8b4:	240b      	movs	r4, #11
     8b6:	e7dd      	b.n	874 <f_mount+0x28>
     8b8:	10000358 	.word	0x10000358

000008bc <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:58

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	FF_SYNC_t* sobj		/* Pointer to return the created sync object */
)
{
     8bc:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:74
//	OS_ERR err;
//	*sobj = OSMutexCreate(0, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	*sobj = xSemaphoreCreateMutex();
     8be:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:58
{
     8c0:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:74
	*sobj = xSemaphoreCreateMutex();
     8c2:	f001 fcf6 	bl	22b2 <xQueueCreateMutex>
     8c6:	6020      	str	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:81
	return (int)(*sobj != NULL);

	/* CMSIS-RTOS */
//	*sobj = osMutexCreate(&Mutex[vol]);
//	return (int)(*sobj != NULL);
}
     8c8:	3000      	adds	r0, #0
     8ca:	bf18      	it	ne
     8cc:	2001      	movne	r0, #1
     8ce:	bd10      	pop	{r4, pc}

000008d0 <ff_del_syncobj>:
ff_del_syncobj():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:95
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to an error */
	FF_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
     8d0:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:108
//	OS_ERR err;
//	OSMutexDel(sobj, OS_DEL_ALWAYS, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
    vSemaphoreDelete(sobj);
     8d2:	f001 ff5d 	bl	2790 <vQueueDelete>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:113
	return 1;

	/* CMSIS-RTOS */
//	return (int)(osMutexDelete(sobj) == osOK);
}
     8d6:	2001      	movs	r0, #1
     8d8:	bd08      	pop	{r3, pc}

000008da <ff_req_grant>:
ff_req_grant():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:126
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	FF_SYNC_t sobj	/* Sync object to wait */
)
{
     8da:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:139
//	OS_ERR err;
//	OSMutexPend(sobj, FF_FS_TIMEOUT, &err));
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	return (int)(xSemaphoreTake(sobj, FF_FS_TIMEOUT) == pdTRUE);
     8dc:	f640 31b8 	movw	r1, #3000	; 0xbb8
     8e0:	f001 fe48 	bl	2574 <xQueueSemaphoreTake>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:143

	/* CMSIS-RTOS */
//	return (int)(osMutexWait(sobj, FF_FS_TIMEOUT) == osOK);
}
     8e4:	1e43      	subs	r3, r0, #1
     8e6:	4258      	negs	r0, r3
     8e8:	4158      	adcs	r0, r3
     8ea:	bd08      	pop	{r3, pc}

000008ec <ff_rel_grant>:
ff_rel_grant():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/ff13c/source/ffsystem.c:166

	/* uC/OS-II */
//	OSMutexPost(sobj);

	/* FreeRTOS */
	xSemaphoreGive(sobj);
     8ec:	2300      	movs	r3, #0
     8ee:	461a      	mov	r2, r3
     8f0:	4619      	mov	r1, r3
     8f2:	f001 bc1b 	b.w	212c <xQueueGenericSend>

000008f6 <disk_initialize>:
disk_initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:19
 */
typedef enum {
  DRIVE__SD_CARD = 0,
} drive_e;

DSTATUS disk_initialize(BYTE drv) {
     8f6:	b510      	push	{r4, lr}
     8f8:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:22
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
     8fa:	f000 fde3 	bl	14c4 <spi2_mutex__acquire>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:24
  {
    switch (drv) {
     8fe:	b934      	cbnz	r4, 90e <disk_initialize+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:26
    case DRIVE__SD_CARD:
      status = sd_card__initialize();
     900:	f000 f8fa 	bl	af8 <sd_card__initialize>
     904:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:33
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
     906:	f000 fdf7 	bl	14f8 <spi2_mutex__release>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:36

  return status;
}
     90a:	4620      	mov	r0, r4
     90c:	bd10      	pop	{r4, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:29
      status = RES_PARERR;
     90e:	2404      	movs	r4, #4
     910:	e7f9      	b.n	906 <disk_initialize+0x10>

00000912 <disk_status>:
disk_status():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:43
DSTATUS disk_status(BYTE drv) {
  DSTATUS status = RES_PARERR;

  // No mutex needed here
  {
    switch (drv) {
     912:	b908      	cbnz	r0, 918 <disk_status+0x6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:45
    case DRIVE__SD_CARD:
      status = sd_card__status();
     914:	f000 b98e 	b.w	c34 <sd_card__status>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:54
      break;
    }
  }

  return status;
}
     918:	2004      	movs	r0, #4
     91a:	4770      	bx	lr

0000091c <disk_read>:
disk_read():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:56

DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, UINT count) {
     91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     91e:	4607      	mov	r7, r0
     920:	460c      	mov	r4, r1
     922:	4615      	mov	r5, r2
     924:	461e      	mov	r6, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:59
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
     926:	f000 fdcd 	bl	14c4 <spi2_mutex__acquire>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:61
  {
    switch (drv) {
     92a:	b94f      	cbnz	r7, 940 <disk_read+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:63
    case DRIVE__SD_CARD:
      status = sd_card__read(buff, sector, count);
     92c:	4620      	mov	r0, r4
     92e:	b2f2      	uxtb	r2, r6
     930:	4629      	mov	r1, r5
     932:	f000 f987 	bl	c44 <sd_card__read>
     936:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:70
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
     938:	f000 fdde 	bl	14f8 <spi2_mutex__release>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:73

  return status;
}
     93c:	4620      	mov	r0, r4
     93e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:66
      status = RES_PARERR;
     940:	2404      	movs	r4, #4
     942:	e7f9      	b.n	938 <disk_read+0x1c>

00000944 <disk_write>:
disk_write():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:75

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, UINT count) {
     944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     946:	4607      	mov	r7, r0
     948:	460c      	mov	r4, r1
     94a:	4615      	mov	r5, r2
     94c:	461e      	mov	r6, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:78
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
     94e:	f000 fdb9 	bl	14c4 <spi2_mutex__acquire>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:80
  {
    switch (drv) {
     952:	b94f      	cbnz	r7, 968 <disk_write+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:82
    case DRIVE__SD_CARD:
      status = sd_card__write(buff, sector, count);
     954:	4620      	mov	r0, r4
     956:	b2f2      	uxtb	r2, r6
     958:	4629      	mov	r1, r5
     95a:	f000 f9b9 	bl	cd0 <sd_card__write>
     95e:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:89
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
     960:	f000 fdca 	bl	14f8 <spi2_mutex__release>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:92

  return status;
}
     964:	4620      	mov	r0, r4
     966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:85
      status = RES_PARERR;
     968:	2404      	movs	r4, #4
     96a:	e7f9      	b.n	960 <disk_write+0x1c>

0000096c <sd_card__wait_for_ready>:
sd_card__wait_for_ready():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:56
#endif

static volatile DSTATUS g_disk_status = STA_NOINIT; ///< Disk status
static BYTE g_card_type;                            ///< Card type flags

static BYTE sd_card__wait_for_ready(void) {
     96c:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:60
  BYTE res;

  /* Wait for ready in timeout of 500ms */
  const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 500;
     96e:	f000 fe13 	bl	1598 <sys_time__get_uptime_ms>
     972:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:61
  SD_CARD__RECEIVE_BYTE();
     976:	20ff      	movs	r0, #255	; 0xff
     978:	f003 f8b2 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)

  do {
    res = SD_CARD__RECEIVE_BYTE();
     97c:	20ff      	movs	r0, #255	; 0xff
     97e:	f003 f8af 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
     982:	28ff      	cmp	r0, #255	; 0xff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)
    res = SD_CARD__RECEIVE_BYTE();
     984:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
     986:	d003      	beq.n	990 <sd_card__wait_for_ready+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 1)
     988:	f000 fe06 	bl	1598 <sys_time__get_uptime_ms>
     98c:	4285      	cmp	r5, r0
     98e:	d8f5      	bhi.n	97c <sd_card__wait_for_ready+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:68

  return res;
}
     990:	4620      	mov	r0, r4
     992:	bd38      	pop	{r3, r4, r5, pc}

00000994 <sd_card__power_off>:
sd_card__power_off():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:74

static void sd_card__power_on(void) {
  // Power on the SD-Card Socket if hardware allows
}

static void sd_card__power_off(void) {
     994:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:75
  SD_CARD__SELECT();
     996:	f002 fcc5 	bl	3324 <board_io__sd_card_cs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:76
  sd_card__wait_for_ready();
     99a:	f7ff ffe7 	bl	96c <sd_card__wait_for_ready>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:77
  SD_CARD__DESELECT();
     99e:	f002 fcc9 	bl	3334 <board_io__sd_card_ds>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:80

  // Power off the SD-Card Socket if hardware allows
  g_disk_status |= STA_NOINIT; // Set STA_NOINIT
     9a2:	4a03      	ldr	r2, [pc, #12]	; (9b0 <sd_card__power_off+0x1c>)
     9a4:	7813      	ldrb	r3, [r2, #0]
     9a6:	f043 0301 	orr.w	r3, r3, #1
     9aa:	7013      	strb	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:81
}
     9ac:	bd08      	pop	{r3, pc}
     9ae:	bf00      	nop
     9b0:	10000008 	.word	0x10000008

000009b4 <sd_card__transmit_datablock>:
sd_card__transmit_datablock():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:129
}

#if SD_CARD__READONLY == 0
static int sd_card__transmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
                                       BYTE token        /* Data/Stop token */
) {
     9b4:	b538      	push	{r3, r4, r5, lr}
     9b6:	4605      	mov	r5, r0
     9b8:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:132
  BYTE resp;

  if (sd_card__wait_for_ready() != 0xFF) {
     9ba:	f7ff ffd7 	bl	96c <sd_card__wait_for_ready>
     9be:	28ff      	cmp	r0, #255	; 0xff
     9c0:	d121      	bne.n	a06 <sd_card__transmit_datablock+0x52>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:136
    return 0;
  }

  SD_CARD__TRANSMIT_BYTE(token);
     9c2:	4620      	mov	r0, r4
     9c4:	f003 f88c 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:138
  /* Xmit data token */
  if (token != 0xFD) { /* Is data token */
     9c8:	2cfd      	cmp	r4, #253	; 0xfd
     9ca:	d01e      	beq.n	a0a <sd_card__transmit_datablock+0x56>
     9cc:	1cac      	adds	r4, r5, #2
     9ce:	f205 2502 	addw	r5, r5, #514	; 0x202
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:144 (discriminator 1)
#if OPTIMIZE_SSP_SPI_WRITE
    SD_CARD__WRITE_BLOCK(buff, 512);
#else
    unsigned char wc = 0;
    do { /* Xmit the 512 byte data block to MMC */
      SD_CARD__TRANSMIT_BYTE(*buff++);
     9d2:	f814 0c02 	ldrb.w	r0, [r4, #-2]
     9d6:	f003 f883 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:145 (discriminator 1)
      SD_CARD__TRANSMIT_BYTE(*buff++);
     9da:	3402      	adds	r4, #2
     9dc:	f814 0c03 	ldrb.w	r0, [r4, #-3]
     9e0:	f003 f87e 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:146 (discriminator 1)
    } while (--wc);
     9e4:	42ac      	cmp	r4, r5
     9e6:	d1f4      	bne.n	9d2 <sd_card__transmit_datablock+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:149
#endif

    SD_CARD__TRANSMIT_BYTE(0xFF);
     9e8:	20ff      	movs	r0, #255	; 0xff
     9ea:	f003 f879 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:151
    /* CRC (Dummy) */
    SD_CARD__TRANSMIT_BYTE(0xFF);
     9ee:	20ff      	movs	r0, #255	; 0xff
     9f0:	f003 f876 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:152
    resp = SD_CARD__RECEIVE_BYTE(); /* Reveive data response */
     9f4:	20ff      	movs	r0, #255	; 0xff
     9f6:	f003 f873 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:153
    if ((resp & 0x1F) != 0x05) {      /* If not accepted, return with error */
     9fa:	f000 001f 	and.w	r0, r0, #31
     9fe:	1f43      	subs	r3, r0, #5
     a00:	4258      	negs	r0, r3
     a02:	4158      	adcs	r0, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:159
      return 0;
    }
  }

  return 1;
}
     a04:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:133
    return 0;
     a06:	2000      	movs	r0, #0
     a08:	e7fc      	b.n	a04 <sd_card__transmit_datablock+0x50>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:158
  return 1;
     a0a:	2001      	movs	r0, #1
     a0c:	e7fa      	b.n	a04 <sd_card__transmit_datablock+0x50>

00000a0e <sd_card__send_command>:
sd_card__send_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
#endif /* SD_CARD__READONLY */

static BYTE sd_card__send_command(BYTE cmd, /* Command byte */
                                  DWORD arg /* Argument */
) {
     a0e:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  BYTE n, res;

  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
     a10:	0602      	lsls	r2, r0, #24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:164
) {
     a12:	4604      	mov	r4, r0
     a14:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:167
  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
     a16:	d507      	bpl.n	a28 <sd_card__send_command+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:169
    cmd &= 0x7F;
    res = sd_card__send_command(CMD55, 0);
     a18:	2100      	movs	r1, #0
     a1a:	2077      	movs	r0, #119	; 0x77
     a1c:	f7ff fff7 	bl	a0e <sd_card__send_command>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:170
    if (res > 1) {
     a20:	2801      	cmp	r0, #1
     a22:	d831      	bhi.n	a88 <sd_card__send_command+0x7a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:168
    cmd &= 0x7F;
     a24:	f004 047f 	and.w	r4, r4, #127	; 0x7f
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:177
      return res;
    }
  }

  /* Select the card and wait for ready */
  SD_CARD__DESELECT();
     a28:	f002 fc84 	bl	3334 <board_io__sd_card_ds>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:178
  SD_CARD__SELECT(); // Wait for card ready
     a2c:	f002 fc7a 	bl	3324 <board_io__sd_card_cs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:180

  if (sd_card__wait_for_ready() != 0xFF) {
     a30:	f7ff ff9c 	bl	96c <sd_card__wait_for_ready>
     a34:	28ff      	cmp	r0, #255	; 0xff
     a36:	d12b      	bne.n	a90 <sd_card__send_command+0x82>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:185
    SD_CARD__DEBUG_PRINTF("ERROR: sd_card__wait_for_ready() did not return 0xFF\n");
    return 0xFF;
  }

  if (cmd == CMD0) {
     a38:	2c40      	cmp	r4, #64	; 0x40
     a3a:	d027      	beq.n	a8c <sd_card__send_command+0x7e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x95; /* Valid CRC for CMD0(0) */
  }
  else if (cmd == CMD8) {
    n = 0x87; /* Valid CRC for CMD8(0x1AA) */
  } else {
    n = 0x01; /* Dummy CRC + Stop */
     a3c:	2c48      	cmp	r4, #72	; 0x48
     a3e:	bf0c      	ite	eq
     a40:	2387      	moveq	r3, #135	; 0x87
     a42:	2301      	movne	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  }

  /* Start + Command index + 32-bit arguments */
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
     a44:	0e2a      	lsrs	r2, r5, #24
     a46:	f88d 2001 	strb.w	r2, [sp, #1]
     a4a:	0c2a      	lsrs	r2, r5, #16
     a4c:	f88d 2002 	strb.w	r2, [sp, #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
     a50:	2106      	movs	r1, #6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
     a52:	0a2a      	lsrs	r2, r5, #8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
     a54:	4668      	mov	r0, sp
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
     a56:	f88d 4000 	strb.w	r4, [sp]
     a5a:	f88d 2003 	strb.w	r2, [sp, #3]
     a5e:	f88d 5004 	strb.w	r5, [sp, #4]
     a62:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
     a66:	f003 f845 	bl	3af4 <ssp2__dma_write_block>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:199

  /* Receive command response */
  if (cmd == CMD12) {
     a6a:	2c4c      	cmp	r4, #76	; 0x4c
     a6c:	d102      	bne.n	a74 <sd_card__send_command+0x66>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:200
    SD_CARD__RECEIVE_BYTE(); /* Skip a stuff byte when stop reading */
     a6e:	20ff      	movs	r0, #255	; 0xff
     a70:	f003 f836 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x01; /* Dummy CRC + Stop */
     a74:	240a      	movs	r4, #10
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:205
  }
  
  n = 10; /* Wait for a valid response in timeout of 10 attempts */
  do {
    res = SD_CARD__RECEIVE_BYTE();
     a76:	20ff      	movs	r0, #255	; 0xff
     a78:	f003 f832 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:206
  } while ((res & 0x80) && --n);
     a7c:	0603      	lsls	r3, r0, #24
     a7e:	d503      	bpl.n	a88 <sd_card__send_command+0x7a>
     a80:	3c01      	subs	r4, #1
     a82:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
     a86:	d1f6      	bne.n	a76 <sd_card__send_command+0x68>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:213
  if (n == 0) {
    SD_CARD__DEBUG_PRINTF("Timeout during card read\n");
  }

  return res; /* Return with the response value */
}
     a88:	b003      	add	sp, #12
     a8a:	bd30      	pop	{r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:186
    n = 0x95; /* Valid CRC for CMD0(0) */
     a8c:	2395      	movs	r3, #149	; 0x95
     a8e:	e7d9      	b.n	a44 <sd_card__send_command+0x36>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:182
    return 0xFF;
     a90:	20ff      	movs	r0, #255	; 0xff
     a92:	e7f9      	b.n	a88 <sd_card__send_command+0x7a>

00000a94 <sd_card__read_datablock>:
sd_card__read_datablock():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:85
) {
     a94:	b570      	push	{r4, r5, r6, lr}
     a96:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:87
  const uint32_t time_now = SD_CARD__PLATFORM_GET_MS();
     a98:	f000 fd7e 	bl	1598 <sys_time__get_uptime_ms>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:88
  const uint32_t timeout = time_now + 100;
     a9c:	f100 0664 	add.w	r6, r0, #100	; 0x64
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:92
    token = SD_CARD__RECEIVE_BYTE();
     aa0:	20ff      	movs	r0, #255	; 0xff
     aa2:	f003 f81d 	bl	3ae0 <ssp2__exchange_byte>
     aa6:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:95
    if (SD_CARD__PLATFORM_GET_MS() > timeout) {
     aa8:	f000 fd76 	bl	1598 <sys_time__get_uptime_ms>
     aac:	4286      	cmp	r6, r0
     aae:	d301      	bcc.n	ab4 <sd_card__read_datablock+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:98
  } while (token == 0xFF);
     ab0:	2cff      	cmp	r4, #255	; 0xff
     ab2:	d0f5      	beq.n	aa0 <sd_card__read_datablock+0xc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:100
  if (token != 0xFE) {
     ab4:	2cfe      	cmp	r4, #254	; 0xfe
     ab6:	d10c      	bne.n	ad2 <sd_card__read_datablock+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:109
    SD_CARD__READ_BLOCK(buff, 512);
     ab8:	f44f 7100 	mov.w	r1, #512	; 0x200
     abc:	4628      	mov	r0, r5
     abe:	f003 f81c 	bl	3afa <ssp2__dma_read_block>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:120
  SD_CARD__RECEIVE_BYTE(); /* Discard CRC */
     ac2:	20ff      	movs	r0, #255	; 0xff
     ac4:	f003 f80c 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:121
  SD_CARD__RECEIVE_BYTE();
     ac8:	20ff      	movs	r0, #255	; 0xff
     aca:	f003 f809 	bl	3ae0 <ssp2__exchange_byte>
     ace:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:124
}
     ad0:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:102
    return 0; /* If not valid data token, return with error */
     ad2:	2000      	movs	r0, #0
     ad4:	e7fc      	b.n	ad0 <sd_card__read_datablock+0x3c>
     ad6:	Address 0x0000000000000ad6 is out of bounds.


00000ad8 <sd_card__update_status>:
sd_card__update_status():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:527

  return res;
}
#endif /* SD_CARD__USE_IOCTL != 0 */

void sd_card__update_status(void) {
     ad8:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:528
  BYTE s = g_disk_status;
     ada:	4d06      	ldr	r5, [pc, #24]	; (af4 <sd_card__update_status+0x1c>)
     adc:	782c      	ldrb	r4, [r5, #0]
     ade:	b2e4      	uxtb	r4, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:530

  if (SD_CARD__IS_PRESENT()) {
     ae0:	f002 fc30 	bl	3344 <board_io__sd_card_is_present>
     ae4:	b118      	cbz	r0, aee <sd_card__update_status+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:531
    s &= ~STA_NODISK;
     ae6:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:536
  } else {
    s |= (STA_NODISK | STA_NOINIT);
  }

  g_disk_status = s;
     aea:	702c      	strb	r4, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:537
}
     aec:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:533
    s |= (STA_NODISK | STA_NOINIT);
     aee:	f044 0403 	orr.w	r4, r4, #3
     af2:	e7fa      	b.n	aea <sd_card__update_status+0x12>
     af4:	10000008 	.word	0x10000008

00000af8 <sd_card__initialize>:
sd_card__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:215
DSTATUS sd_card__initialize() {
     af8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:218
  sd_card__update_status();
     afc:	f7ff ffec 	bl	ad8 <sd_card__update_status>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:220
  if (g_disk_status & STA_NODISK) {
     b00:	4b4a      	ldr	r3, [pc, #296]	; (c2c <sd_card__initialize+0x134>)
     b02:	781a      	ldrb	r2, [r3, #0]
     b04:	f012 0f02 	tst.w	r2, #2
     b08:	461e      	mov	r6, r3
     b0a:	d004      	beq.n	b16 <sd_card__initialize+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:221
    return g_disk_status; /* No card in the socket */
     b0c:	7818      	ldrb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
     b0e:	b2c0      	uxtb	r0, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:293
}
     b10:	b002      	add	sp, #8
     b12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:225
  SD_CARD__SET_SLOW_SPEED();
     b16:	20c8      	movs	r0, #200	; 0xc8
     b18:	f002 ffaa 	bl	3a70 <ssp2__set_max_clock>
     b1c:	250a      	movs	r5, #10
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:227 (discriminator 3)
    SD_CARD__RECEIVE_BYTE(); /* 80 dummy clocks */
     b1e:	20ff      	movs	r0, #255	; 0xff
     b20:	3d01      	subs	r5, #1
     b22:	f002 ffdd 	bl	3ae0 <ssp2__exchange_byte>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:226 (discriminator 3)
  for (n = 10; n; n--) {
     b26:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
     b2a:	d1f8      	bne.n	b1e <sd_card__initialize+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:230
  SD_CARD__SELECT();
     b2c:	f002 fbfa 	bl	3324 <board_io__sd_card_cs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:233
  if (sd_card__send_command(CMD0, 0) == 1) { /* Enter Idle state */
     b30:	4629      	mov	r1, r5
     b32:	2040      	movs	r0, #64	; 0x40
     b34:	f7ff ff6b 	bl	a0e <sd_card__send_command>
     b38:	2801      	cmp	r0, #1
     b3a:	4604      	mov	r4, r0
     b3c:	d171      	bne.n	c22 <sd_card__initialize+0x12a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
     b3e:	f000 fd2b 	bl	1598 <sys_time__get_uptime_ms>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
     b42:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
     b46:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
     b4a:	2048      	movs	r0, #72	; 0x48
     b4c:	f7ff ff5f 	bl	a0e <sd_card__send_command>
     b50:	2801      	cmp	r0, #1
     b52:	d148      	bne.n	be6 <sd_card__initialize+0xee>
     b54:	ad01      	add	r5, sp, #4
     b56:	46a8      	mov	r8, r5
     b58:	2404      	movs	r4, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
     b5a:	20ff      	movs	r0, #255	; 0xff
     b5c:	f002 ffc0 	bl	3ae0 <ssp2__exchange_byte>
     b60:	3c01      	subs	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
     b62:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
     b66:	f808 0b01 	strb.w	r0, [r8], #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
     b6a:	d1f6      	bne.n	b5a <sd_card__initialize+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240
      if (ocr[2] == 0x01 && ocr[3] == 0xAA) { /* The card can work at vdd range of 2.7-3.6V */
     b6c:	f89d 3006 	ldrb.w	r3, [sp, #6]
     b70:	2b01      	cmp	r3, #1
     b72:	d156      	bne.n	c22 <sd_card__initialize+0x12a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:240 (discriminator 1)
     b74:	f89d 3007 	ldrb.w	r3, [sp, #7]
     b78:	2baa      	cmp	r3, #170	; 0xaa
     b7a:	d152      	bne.n	c22 <sd_card__initialize+0x12a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 2)
        while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(ACMD41, 1UL << 30)) {
     b7c:	f000 fd0c 	bl	1598 <sys_time__get_uptime_ms>
     b80:	4287      	cmp	r7, r0
     b82:	d906      	bls.n	b92 <sd_card__initialize+0x9a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 1)
     b84:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
     b88:	20e9      	movs	r0, #233	; 0xe9
     b8a:	f7ff ff40 	bl	a0e <sd_card__send_command>
     b8e:	2800      	cmp	r0, #0
     b90:	d1f4      	bne.n	b7c <sd_card__initialize+0x84>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
     b92:	f000 fd01 	bl	1598 <sys_time__get_uptime_ms>
     b96:	4287      	cmp	r7, r0
     b98:	d943      	bls.n	c22 <sd_card__initialize+0x12a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:248 (discriminator 1)
            sd_card__send_command(CMD58, 0) == 0) { /* Check CCS bit in the OCR */
     b9a:	2100      	movs	r1, #0
     b9c:	207a      	movs	r0, #122	; 0x7a
     b9e:	f7ff ff36 	bl	a0e <sd_card__send_command>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:247 (discriminator 1)
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
     ba2:	2800      	cmp	r0, #0
     ba4:	d13d      	bne.n	c22 <sd_card__initialize+0x12a>
     ba6:	2404      	movs	r4, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
     ba8:	20ff      	movs	r0, #255	; 0xff
     baa:	f002 ff99 	bl	3ae0 <ssp2__exchange_byte>
     bae:	3c01      	subs	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
     bb0:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
     bb4:	f805 0b01 	strb.w	r0, [r5], #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
     bb8:	d1f6      	bne.n	ba8 <sd_card__initialize+0xb0>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:252
          ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
     bba:	f89d 3004 	ldrb.w	r3, [sp, #4]
     bbe:	f013 0f40 	tst.w	r3, #64	; 0x40
     bc2:	bf14      	ite	ne
     bc4:	240c      	movne	r4, #12
     bc6:	2404      	moveq	r4, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:282
  g_card_type = ty;
     bc8:	4b19      	ldr	r3, [pc, #100]	; (c30 <sd_card__initialize+0x138>)
     bca:	701c      	strb	r4, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:283
  SD_CARD__DESELECT();
     bcc:	f002 fbb2 	bl	3334 <board_io__sd_card_ds>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:285
  if (ty) {                       /* Initialization succeded */
     bd0:	b34c      	cbz	r4, c26 <sd_card__initialize+0x12e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
     bd2:	7833      	ldrb	r3, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
     bd4:	f645 50c0 	movw	r0, #24000	; 0x5dc0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
     bd8:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
     bdc:	7033      	strb	r3, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
     bde:	f002 ff47 	bl	3a70 <ssp2__set_max_clock>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
     be2:	7830      	ldrb	r0, [r6, #0]
     be4:	e793      	b.n	b0e <sd_card__initialize+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:260
      if (sd_card__send_command(ACMD41, 0) <= 1) {
     be6:	4629      	mov	r1, r5
     be8:	20e9      	movs	r0, #233	; 0xe9
     bea:	f7ff ff10 	bl	a0e <sd_card__send_command>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:265
        cmd = CMD1; /* MMC */
     bee:	2802      	cmp	r0, #2
     bf0:	bf36      	itet	cc
     bf2:	25e9      	movcc	r5, #233	; 0xe9
     bf4:	2541      	movcs	r5, #65	; 0x41
     bf6:	2402      	movcc	r4, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 2)
      while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(cmd, 0)) {
     bf8:	f000 fcce 	bl	1598 <sys_time__get_uptime_ms>
     bfc:	4287      	cmp	r7, r0
     bfe:	d905      	bls.n	c0c <sd_card__initialize+0x114>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 1)
     c00:	2100      	movs	r1, #0
     c02:	4628      	mov	r0, r5
     c04:	f7ff ff03 	bl	a0e <sd_card__send_command>
     c08:	2800      	cmp	r0, #0
     c0a:	d1f5      	bne.n	bf8 <sd_card__initialize+0x100>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
     c0c:	f000 fcc4 	bl	1598 <sys_time__get_uptime_ms>
     c10:	4287      	cmp	r7, r0
     c12:	d806      	bhi.n	c22 <sd_card__initialize+0x12a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:272 (discriminator 1)
          sd_card__send_command(CMD16, 512) != 0) /* Set R/W block length to 512 */
     c14:	f44f 7100 	mov.w	r1, #512	; 0x200
     c18:	2050      	movs	r0, #80	; 0x50
     c1a:	f7ff fef8 	bl	a0e <sd_card__send_command>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:271 (discriminator 1)
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
     c1e:	2800      	cmp	r0, #0
     c20:	d0d2      	beq.n	bc8 <sd_card__initialize+0xd0>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:275
        ty = 0;
     c22:	2400      	movs	r4, #0
     c24:	e7d0      	b.n	bc8 <sd_card__initialize+0xd0>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:289
    sd_card__power_off();
     c26:	f7ff feb5 	bl	994 <sd_card__power_off>
     c2a:	e7da      	b.n	be2 <sd_card__initialize+0xea>
     c2c:	10000008 	.word	0x10000008
     c30:	1000035e 	.word	0x1000035e

00000c34 <sd_card__status>:
sd_card__status():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:295
DSTATUS sd_card__status() {
     c34:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:296
  sd_card__update_status();
     c36:	f7ff ff4f 	bl	ad8 <sd_card__update_status>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:297
  return g_disk_status;
     c3a:	4b01      	ldr	r3, [pc, #4]	; (c40 <sd_card__status+0xc>)
     c3c:	7818      	ldrb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:298
}
     c3e:	bd08      	pop	{r3, pc}
     c40:	10000008 	.word	0x10000008

00000c44 <sd_card__read>:
sd_card__read():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:303
) {
     c44:	b570      	push	{r4, r5, r6, lr}
     c46:	4614      	mov	r4, r2
     c48:	4605      	mov	r5, r0
     c4a:	460e      	mov	r6, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:304
  sd_card__update_status();
     c4c:	f7ff ff44 	bl	ad8 <sd_card__update_status>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:306
  if (!count) {
     c50:	2c00      	cmp	r4, #0
     c52:	d035      	beq.n	cc0 <sd_card__read+0x7c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:310
  if (g_disk_status & STA_NOINIT) {
     c54:	4b1c      	ldr	r3, [pc, #112]	; (cc8 <sd_card__read+0x84>)
     c56:	781b      	ldrb	r3, [r3, #0]
     c58:	07da      	lsls	r2, r3, #31
     c5a:	d433      	bmi.n	cc4 <sd_card__read+0x80>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:315
  SD_CARD__SELECT();
     c5c:	f002 fb62 	bl	3324 <board_io__sd_card_cs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:316
  if (!(g_card_type & CT_BLOCK)) {
     c60:	4b1a      	ldr	r3, [pc, #104]	; (ccc <sd_card__read+0x88>)
     c62:	781b      	ldrb	r3, [r3, #0]
     c64:	071b      	lsls	r3, r3, #28
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:317
    sector *= 512; /* Convert to byte address if needed */
     c66:	bf58      	it	pl
     c68:	0276      	lslpl	r6, r6, #9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
     c6a:	2c01      	cmp	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
     c6c:	4631      	mov	r1, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
     c6e:	d111      	bne.n	c94 <sd_card__read+0x50>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
     c70:	2051      	movs	r0, #81	; 0x51
     c72:	f7ff fecc 	bl	a0e <sd_card__send_command>
     c76:	b938      	cbnz	r0, c88 <sd_card__read+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:322
      if (sd_card__read_datablock(buff, 512)) {
     c78:	f44f 7100 	mov.w	r1, #512	; 0x200
     c7c:	4628      	mov	r0, r5
     c7e:	f7ff ff09 	bl	a94 <sd_card__read_datablock>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:323
        count = 0;
     c82:	fab0 f480 	clz	r4, r0
     c86:	0964      	lsrs	r4, r4, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:340
  SD_CARD__DESELECT();
     c88:	f002 fb54 	bl	3334 <board_io__sd_card_ds>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:342
  return count ? RES_ERROR : RES_OK;
     c8c:	1c20      	adds	r0, r4, #0
     c8e:	bf18      	it	ne
     c90:	2001      	movne	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:343
}
     c92:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:331
    if (sd_card__send_command(CMD18, sector) == 0) { /* READ_MULTIPLE_BLOCK */
     c94:	2052      	movs	r0, #82	; 0x52
     c96:	f7ff feba 	bl	a0e <sd_card__send_command>
     c9a:	2800      	cmp	r0, #0
     c9c:	d1f4      	bne.n	c88 <sd_card__read+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:333
        if (!sd_card__read_datablock(buff, 512))
     c9e:	f44f 7100 	mov.w	r1, #512	; 0x200
     ca2:	4628      	mov	r0, r5
     ca4:	f7ff fef6 	bl	a94 <sd_card__read_datablock>
     ca8:	b128      	cbz	r0, cb6 <sd_card__read+0x72>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
     caa:	3c01      	subs	r4, #1
     cac:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:335
        buff += 512;
     cb0:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
     cb4:	d1f3      	bne.n	c9e <sd_card__read+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:337
      sd_card__send_command(CMD12, 0); /* STOP_TRANSMISSION */
     cb6:	2100      	movs	r1, #0
     cb8:	204c      	movs	r0, #76	; 0x4c
     cba:	f7ff fea8 	bl	a0e <sd_card__send_command>
     cbe:	e7e3      	b.n	c88 <sd_card__read+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:308
    return RES_PARERR;
     cc0:	2004      	movs	r0, #4
     cc2:	e7e6      	b.n	c92 <sd_card__read+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:312
    return RES_NOTRDY;
     cc4:	2003      	movs	r0, #3
     cc6:	e7e4      	b.n	c92 <sd_card__read+0x4e>
     cc8:	10000008 	.word	0x10000008
     ccc:	1000035e 	.word	0x1000035e

00000cd0 <sd_card__write>:
sd_card__write():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:349
) {
     cd0:	b570      	push	{r4, r5, r6, lr}
     cd2:	4614      	mov	r4, r2
     cd4:	4605      	mov	r5, r0
     cd6:	460e      	mov	r6, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:350
  sd_card__update_status();
     cd8:	f7ff fefe 	bl	ad8 <sd_card__update_status>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:352
  if (!count) {
     cdc:	2c00      	cmp	r4, #0
     cde:	d041      	beq.n	d64 <sd_card__write+0x94>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:355
  if (g_disk_status & STA_NOINIT) {
     ce0:	4b23      	ldr	r3, [pc, #140]	; (d70 <sd_card__write+0xa0>)
     ce2:	781a      	ldrb	r2, [r3, #0]
     ce4:	07d0      	lsls	r0, r2, #31
     ce6:	d43f      	bmi.n	d68 <sd_card__write+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:358
  if (g_disk_status & STA_PROTECT) {
     ce8:	781b      	ldrb	r3, [r3, #0]
     cea:	0759      	lsls	r1, r3, #29
     cec:	d43e      	bmi.n	d6c <sd_card__write+0x9c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:362
  SD_CARD__SELECT();
     cee:	f002 fb19 	bl	3324 <board_io__sd_card_cs>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:363
  if (!(g_card_type & CT_BLOCK)) {
     cf2:	4b20      	ldr	r3, [pc, #128]	; (d74 <sd_card__write+0xa4>)
     cf4:	781b      	ldrb	r3, [r3, #0]
     cf6:	071a      	lsls	r2, r3, #28
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:364
    sector *= 512; /* Convert to byte address if needed */
     cf8:	bf58      	it	pl
     cfa:	0276      	lslpl	r6, r6, #9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:367
  if (count == 1) { /* Single block write */
     cfc:	2c01      	cmp	r4, #1
     cfe:	d111      	bne.n	d24 <sd_card__write+0x54>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368
    if ((sd_card__send_command(CMD24, sector) == 0) && sd_card__transmit_datablock(buff, 0xFE)) {
     d00:	4631      	mov	r1, r6
     d02:	2058      	movs	r0, #88	; 0x58
     d04:	f7ff fe83 	bl	a0e <sd_card__send_command>
     d08:	bb50      	cbnz	r0, d60 <sd_card__write+0x90>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:368 (discriminator 1)
     d0a:	21fe      	movs	r1, #254	; 0xfe
     d0c:	4628      	mov	r0, r5
     d0e:	f7ff fe51 	bl	9b4 <sd_card__transmit_datablock>
     d12:	fab0 f480 	clz	r4, r0
     d16:	0964      	lsrs	r4, r4, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:388
  SD_CARD__DESELECT();
     d18:	f002 fb0c 	bl	3334 <board_io__sd_card_ds>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:390
  return count ? RES_ERROR : RES_OK;
     d1c:	1c20      	adds	r0, r4, #0
     d1e:	bf18      	it	ne
     d20:	2001      	movne	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:391
}
     d22:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:372
    if (g_card_type & CT_SDC) {
     d24:	f013 0f06 	tst.w	r3, #6
     d28:	d003      	beq.n	d32 <sd_card__write+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:373
      sd_card__send_command(ACMD23, count);
     d2a:	4621      	mov	r1, r4
     d2c:	20d7      	movs	r0, #215	; 0xd7
     d2e:	f7ff fe6e 	bl	a0e <sd_card__send_command>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:376
    if (sd_card__send_command(CMD25, sector) == 0) { /* WRITE_MULTIPLE_BLOCK */
     d32:	4631      	mov	r1, r6
     d34:	2059      	movs	r0, #89	; 0x59
     d36:	f7ff fe6a 	bl	a0e <sd_card__send_command>
     d3a:	2800      	cmp	r0, #0
     d3c:	d1ec      	bne.n	d18 <sd_card__write+0x48>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:378
        if (!sd_card__transmit_datablock(buff, 0xFC)) {
     d3e:	21fc      	movs	r1, #252	; 0xfc
     d40:	4628      	mov	r0, r5
     d42:	f7ff fe37 	bl	9b4 <sd_card__transmit_datablock>
     d46:	b128      	cbz	r0, d54 <sd_card__write+0x84>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
     d48:	3c01      	subs	r4, #1
     d4a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:381
        buff += 512;
     d4e:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
     d52:	d1f4      	bne.n	d3e <sd_card__write+0x6e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:383
      if (!sd_card__transmit_datablock(0, 0xFD)) {/* STOP_TRAN token */
     d54:	21fd      	movs	r1, #253	; 0xfd
     d56:	2000      	movs	r0, #0
     d58:	f7ff fe2c 	bl	9b4 <sd_card__transmit_datablock>
     d5c:	2800      	cmp	r0, #0
     d5e:	d1db      	bne.n	d18 <sd_card__write+0x48>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:384
        count = 1;
     d60:	2401      	movs	r4, #1
     d62:	e7d9      	b.n	d18 <sd_card__write+0x48>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:353
    return RES_PARERR;
     d64:	2004      	movs	r0, #4
     d66:	e7dc      	b.n	d22 <sd_card__write+0x52>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:356
    return RES_NOTRDY;
     d68:	2003      	movs	r0, #3
     d6a:	e7da      	b.n	d22 <sd_card__write+0x52>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/fatfs/fatfs_glue/sd_card.c:359
    return RES_WRPRT;
     d6c:	2002      	movs	r0, #2
     d6e:	e7d8      	b.n	d22 <sd_card__write+0x52>
     d70:	10000008 	.word	0x10000008
     d74:	1000035e 	.word	0x1000035e

00000d78 <system_calls__print_and_halt>:
system_calls__print_and_halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:45
  for (int i = 0; i < len; i++) {
    uart__polled_put(system_calls__uart_type, ptr[i]);
  }
}

static void system_calls__print_and_halt(const char *string) {
     d78:	b508      	push	{r3, lr}
     d7a:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:46
  system_calls__polled_put(string, strlen(string));
     d7c:	f004 fc85 	bl	568a <strlen>
system_calls__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     d80:	2400      	movs	r4, #0
system_calls__print_and_halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:46
  system_calls__polled_put(string, strlen(string));
     d82:	4605      	mov	r5, r0
system_calls__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     d84:	42a5      	cmp	r5, r4
     d86:	dc00      	bgt.n	d8a <system_calls__print_and_halt+0x12>
system_calls__print_and_halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:48 (discriminator 1)
  while (1) {
  }
     d88:	e7fe      	b.n	d88 <system_calls__print_and_halt+0x10>
system_calls__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
    uart__polled_put(system_calls__uart_type, ptr[i]);
     d8a:	5d31      	ldrb	r1, [r6, r4]
     d8c:	2000      	movs	r0, #0
     d8e:	f002 ff9f 	bl	3cd0 <uart__polled_put>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     d92:	3401      	adds	r4, #1
     d94:	e7f6      	b.n	d84 <system_calls__print_and_halt+0xc>
system_calls__print_and_halt():
     d96:	Address 0x0000000000000d96 is out of bounds.


00000d98 <_isatty>:
_isatty():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:84
 * libc.pdf: 'Query whether output stream is a terminal'
 */
int _isatty(int file_descriptor) {
  int is_atty = 0;

  switch (file_descriptor) {
     d98:	2802      	cmp	r0, #2
     d9a:	d90c      	bls.n	db6 <_isatty+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:94
    is_atty = 1;
    break;

  // Pointer based values defined by <stdio.h>
  default:
    if ((int)stdin == file_descriptor || (int)stdout == file_descriptor || (int)stderr == file_descriptor) {
     d9c:	4b07      	ldr	r3, [pc, #28]	; (dbc <_isatty+0x24>)
     d9e:	681b      	ldr	r3, [r3, #0]
     da0:	685a      	ldr	r2, [r3, #4]
     da2:	4282      	cmp	r2, r0
     da4:	d007      	beq.n	db6 <_isatty+0x1e>
     da6:	689a      	ldr	r2, [r3, #8]
     da8:	4282      	cmp	r2, r0
     daa:	d004      	beq.n	db6 <_isatty+0x1e>
     dac:	68db      	ldr	r3, [r3, #12]
     dae:	1a1b      	subs	r3, r3, r0
     db0:	4258      	negs	r0, r3
     db2:	4158      	adcs	r0, r3
     db4:	4770      	bx	lr
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:95
      is_atty = 1;
     db6:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:100
    }
  }

  return is_atty;
}
     db8:	4770      	bx	lr
     dba:	bf00      	nop
     dbc:	10000180 	.word	0x10000180

00000dc0 <_write>:
_write():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:113
}

/**
 * Low level write routine used by standard output (printf) and also file writes after fopen() has been called
 */
int _write(int file_descriptor, const char *ptr, int bytes_to_write) {
     dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     dc2:	4604      	mov	r4, r0
     dc4:	460e      	mov	r6, r1
     dc6:	4615      	mov	r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:114
  if (_isatty(file_descriptor)) {
     dc8:	f7ff ffe6 	bl	d98 <_isatty>
     dcc:	b348      	cbz	r0, e22 <_write+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:115
    const bool is_standard_error = ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
     dce:	4b16      	ldr	r3, [pc, #88]	; (e28 <_write+0x68>)
     dd0:	681b      	ldr	r3, [r3, #0]
     dd2:	68db      	ldr	r3, [r3, #12]
     dd4:	42a3      	cmp	r3, r4
     dd6:	d010      	beq.n	dfa <_write+0x3a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:115 (discriminator 2)
     dd8:	1ea3      	subs	r3, r4, #2
     dda:	425c      	negs	r4, r3
     ddc:	415c      	adcs	r4, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:116 (discriminator 6)
    const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
     dde:	f002 f8ef 	bl	2fc0 <xTaskGetSchedulerState>
     de2:	4607      	mov	r7, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:117 (discriminator 6)
    const bool transmit_queue_enabled = uart__is_transmit_queue_initialized(system_calls__uart_type);
     de4:	2000      	movs	r0, #0
     de6:	f002 ff2d 	bl	3c44 <uart__is_transmit_queue_initialized>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:122 (discriminator 6)

    /* If the RTOS is running with the UART queue enabled, AND it is not an error printf, then queue
     * the output and return quickly, otherwise there is no choice but to use system_calls__polled_put()
     */
    if (rtos_is_running && transmit_queue_enabled && !is_standard_error) {
     dea:	2f02      	cmp	r7, #2
     dec:	d117      	bne.n	e1e <_write+0x5e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:122 (discriminator 1)
     dee:	b1b0      	cbz	r0, e1e <_write+0x5e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:122 (discriminator 2)
     df0:	b9ac      	cbnz	r4, e1e <_write+0x5e>
system_calls__queued_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
     df2:	42a5      	cmp	r5, r4
     df4:	dc03      	bgt.n	dfe <_write+0x3e>
_write():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:132
  } else {
    system_calls__print_and_halt("ERROR: Call to _write() with an unsupported handle");
  }

  return bytes_to_write;
}
     df6:	4628      	mov	r0, r5
     df8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:115
    const bool is_standard_error = ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
     dfa:	2401      	movs	r4, #1
     dfc:	e7ef      	b.n	dde <_write+0x1e>
system_calls__queued_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:34
    uart__put(system_calls__uart_type, ptr[i], forever_timeout);
     dfe:	5d31      	ldrb	r1, [r6, r4]
     e00:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     e04:	2000      	movs	r0, #0
     e06:	f002 ffc5 	bl	3d94 <uart__put>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
     e0a:	3401      	adds	r4, #1
     e0c:	e7f1      	b.n	df2 <_write+0x32>
system_calls__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:41
    uart__polled_put(system_calls__uart_type, ptr[i]);
     e0e:	5d31      	ldrb	r1, [r6, r4]
     e10:	2000      	movs	r0, #0
     e12:	f002 ff5d 	bl	3cd0 <uart__polled_put>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
  for (int i = 0; i < len; i++) {
     e16:	3401      	adds	r4, #1
     e18:	42a5      	cmp	r5, r4
     e1a:	dcf8      	bgt.n	e0e <_write+0x4e>
     e1c:	e7eb      	b.n	df6 <_write+0x36>
_write():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:40
     e1e:	2400      	movs	r4, #0
     e20:	e7fa      	b.n	e18 <_write+0x58>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:128
    system_calls__print_and_halt("ERROR: Call to _write() with an unsupported handle");
     e22:	4802      	ldr	r0, [pc, #8]	; (e2c <_write+0x6c>)
     e24:	f7ff ffa8 	bl	d78 <system_calls__print_and_halt>
     e28:	10000180 	.word	0x10000180
     e2c:	0000a404 	.word	0x0000a404

00000e30 <_read>:
_read():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:137

/**
 * Low level read routine used by standard input (scanf) and also file reads after fopen() has been called
 */
int _read(int file_descriptor, char *ptr, int len) {
     e30:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:140
  int bytes_read = 0;

  if (_isatty(file_descriptor)) {
     e32:	f7ff ffb1 	bl	d98 <_isatty>
     e36:	b118      	cbz	r0, e40 <_read+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:142
    // This is a little awkward but uart__polled_get() will not poll if RTOS is running with UART RX queue enabled
    if (uart__polled_get(system_calls__uart_type, &ptr[0])) {
     e38:	2000      	movs	r0, #0
     e3a:	f002 ff81 	bl	3d40 <uart__polled_get>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:151
  } else {
    system_calls__print_and_halt("ERROR: Call to _read() with an unsupported handle");
  }

  return bytes_read;
}
     e3e:	bd08      	pop	{r3, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/newlib/system_calls.c:147
    system_calls__print_and_halt("ERROR: Call to _read() with an unsupported handle");
     e40:	4801      	ldr	r0, [pc, #4]	; (e48 <_read+0x18>)
     e42:	f7ff ff99 	bl	d78 <system_calls__print_and_halt>
     e46:	bf00      	nop
     e48:	0000a3d2 	.word	0x0000a3d2

00000e4c <app_cli__private_print_list_of_all_commands>:
app_cli__private_print_list_of_all_commands():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:79
    cli->output_function(cli_argument, output_string);
  }
}

static void app_cli__private_print_list_of_all_commands(const app_cli_s *cli, app_cli__argument_t cli_argument,
                                                        sl_string_t output) {
     e4c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     e50:	4606      	mov	r6, r0
     e52:	4614      	mov	r4, r2
     e54:	4688      	mov	r8, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:80
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to get full help if you see ...): \r\n");
     e56:	4610      	mov	r0, r2
     e58:	491b      	ldr	r1, [pc, #108]	; (ec8 <app_cli__private_print_list_of_all_commands+0x7c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:90

  while (NULL != iterator) {
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
    } else {
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name, iterator->help_message_for_command);
     e5a:	f8df 907c 	ldr.w	r9, [pc, #124]	; ed8 <app_cli__private_print_list_of_all_commands+0x8c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:88
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
     e5e:	f8df a07c 	ldr.w	sl, [pc, #124]	; edc <app_cli__private_print_list_of_all_commands+0x90>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:94
    }

    // If a command's help is multi-line, truncate it at that position and add "...." to indicate 'see more help'
    const bool ends_with_carriage_return = sl_string__erase_at_substring(output, "\r");
     e62:	f8df b07c 	ldr.w	fp, [pc, #124]	; ee0 <app_cli__private_print_list_of_all_commands+0x94>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:80
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to get full help if you see ...): \r\n");
     e66:	f000 fc90 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:81
  cli->output_function(cli_argument, output);
     e6a:	68b3      	ldr	r3, [r6, #8]
     e6c:	4621      	mov	r1, r4
     e6e:	4640      	mov	r0, r8
     e70:	4798      	blx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:84
  app_cli__command_s *iterator = cli->commands_head_pointer;
     e72:	6835      	ldr	r5, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:86
  while (NULL != iterator) {
     e74:	b90d      	cbnz	r5, e7a <app_cli__private_print_list_of_all_commands+0x2e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:105
    (void)sl_string__append(output, "\r\n");
    cli->output_function(cli_argument, output);

    iterator = iterator->pointer_of_next_command;
  }
}
     e76:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:87
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
     e7a:	686f      	ldr	r7, [r5, #4]
     e7c:	4638      	mov	r0, r7
     e7e:	f004 fc04 	bl	568a <strlen>
     e82:	2832      	cmp	r0, #50	; 0x32
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:88
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
     e84:	bf8c      	ite	hi
     e86:	4651      	movhi	r1, sl
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:90
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name, iterator->help_message_for_command);
     e88:	4649      	movls	r1, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:88
      (void)sl_string__printf(output, "  %16s : %.50s ...", iterator->command_name, iterator->help_message_for_command);
     e8a:	463b      	mov	r3, r7
     e8c:	682a      	ldr	r2, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:90
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name, iterator->help_message_for_command);
     e8e:	4620      	mov	r0, r4
     e90:	f000 fc7b 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:94
    const bool ends_with_carriage_return = sl_string__erase_at_substring(output, "\r");
     e94:	4659      	mov	r1, fp
     e96:	4620      	mov	r0, r4
     e98:	f000 fda2 	bl	19e0 <sl_string__erase_at_substring>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:95
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
     e9c:	490b      	ldr	r1, [pc, #44]	; (ecc <app_cli__private_print_list_of_all_commands+0x80>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:94
    const bool ends_with_carriage_return = sl_string__erase_at_substring(output, "\r");
     e9e:	4607      	mov	r7, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:95
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
     ea0:	4620      	mov	r0, r4
     ea2:	f000 fd9d 	bl	19e0 <sl_string__erase_at_substring>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:96
    if (ends_with_carriage_return || ends_with_newline) {
     ea6:	b907      	cbnz	r7, eaa <app_cli__private_print_list_of_all_commands+0x5e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:96 (discriminator 1)
     ea8:	b118      	cbz	r0, eb2 <app_cli__private_print_list_of_all_commands+0x66>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:97
      (void)sl_string__append(output, "...");
     eaa:	4909      	ldr	r1, [pc, #36]	; (ed0 <app_cli__private_print_list_of_all_commands+0x84>)
     eac:	4620      	mov	r0, r4
     eae:	f000 fcd6 	bl	185e <sl_string__append>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:100
    (void)sl_string__append(output, "\r\n");
     eb2:	4908      	ldr	r1, [pc, #32]	; (ed4 <app_cli__private_print_list_of_all_commands+0x88>)
     eb4:	4620      	mov	r0, r4
     eb6:	f000 fcd2 	bl	185e <sl_string__append>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:101
    cli->output_function(cli_argument, output);
     eba:	68b3      	ldr	r3, [r6, #8]
     ebc:	4621      	mov	r1, r4
     ebe:	4640      	mov	r0, r8
     ec0:	4798      	blx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:103
    iterator = iterator->pointer_of_next_command;
     ec2:	68ed      	ldr	r5, [r5, #12]
     ec4:	e7d6      	b.n	e74 <app_cli__private_print_list_of_all_commands+0x28>
     ec6:	bf00      	nop
     ec8:	0000a437 	.word	0x0000a437
     ecc:	0000a47e 	.word	0x0000a47e
     ed0:	0000a608 	.word	0x0000a608
     ed4:	0000a47d 	.word	0x0000a47d
     ed8:	0000a493 	.word	0x0000a493
     edc:	0000a480 	.word	0x0000a480
     ee0:	0000a49f 	.word	0x0000a49f

00000ee4 <app_cli__initialize>:
app_cli__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:164
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

app_cli_s app_cli__initialize(size_t minimum_command_chars_to_match, app_cli__print_string_function output_function,
                              const char *terminal_string) {
     ee4:	b530      	push	{r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:169
  static const size_t minimum_number_of_chars_to_match = 4;

  app_cli_s cli = {
      .commands_head_pointer = NULL,
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match, minimum_command_chars_to_match),
     ee6:	2904      	cmp	r1, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:174
      .output_function = output_function,
      .terminal_string = terminal_string,
  };

  return cli;
     ee8:	f04f 0500 	mov.w	r5, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:169
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match, minimum_command_chars_to_match),
     eec:	bf38      	it	cc
     eee:	2104      	movcc	r1, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:174
  return cli;
     ef0:	6005      	str	r5, [r0, #0]
     ef2:	e9c0 1201 	strd	r1, r2, [r0, #4]
     ef6:	60c3      	str	r3, [r0, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:175
}
     ef8:	bd30      	pop	{r4, r5, pc}

00000efa <app_cli__add_command_handler>:
app_cli__add_command_handler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:178

void app_cli__add_command_handler(app_cli_s *cli, app_cli__command_s *app_cli_command_static_memory) {
  if (NULL != app_cli_command_static_memory) {
     efa:	b111      	cbz	r1, f02 <app_cli__add_command_handler+0x8>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:179
    app_cli_command_static_memory->pointer_of_next_command = cli->commands_head_pointer;
     efc:	6803      	ldr	r3, [r0, #0]
     efe:	60cb      	str	r3, [r1, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:180
    cli->commands_head_pointer = app_cli_command_static_memory;
     f00:	6001      	str	r1, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:182
  }
}
     f02:	4770      	bx	lr

00000f04 <app_cli__process_input>:
app_cli__process_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:184

void app_cli__process_input(app_cli_s *cli, app_cli__argument_t cli_argument, sl_string_t input_string) {
     f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     f08:	4614      	mov	r4, r2
     f0a:	4605      	mov	r5, r0
     f0c:	460f      	mov	r7, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:185
  (void)sl_string__trim_end(input_string, "\r\n");
     f0e:	4610      	mov	r0, r2
     f10:	4942      	ldr	r1, [pc, #264]	; (101c <app_cli__process_input+0x118>)
     f12:	f000 fda9 	bl	1a68 <sl_string__trim_end>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:187

  if (sl_string__begins_with_ignore_case(input_string, "help")) {
     f16:	4942      	ldr	r1, [pc, #264]	; (1020 <app_cli__process_input+0x11c>)
     f18:	4620      	mov	r0, r4
     f1a:	f000 fce6 	bl	18ea <sl_string__begins_with_ignore_case>
     f1e:	2800      	cmp	r0, #0
     f20:	d033      	beq.n	f8a <app_cli__process_input+0x86>
app_cli__private_handle_help():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:110
  if (sl_string__equals_to_ignore_case(command_string, "help")) {
     f22:	493f      	ldr	r1, [pc, #252]	; (1020 <app_cli__process_input+0x11c>)
     f24:	4620      	mov	r0, r4
     f26:	f000 fcc2 	bl	18ae <sl_string__equals_to_ignore_case>
     f2a:	b128      	cbz	r0, f38 <app_cli__process_input+0x34>
app_cli__private_handle_unmatched_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:139
  app_cli__private_print_list_of_all_commands(cli, cli_argument, output_string);
     f2c:	4622      	mov	r2, r4
     f2e:	4639      	mov	r1, r7
     f30:	4628      	mov	r0, r5
     f32:	f7ff ff8b 	bl	e4c <app_cli__private_print_list_of_all_commands>
     f36:	e068      	b.n	100a <app_cli__process_input+0x106>
app_cli__private_handle_help():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:116
    (void)sl_string__erase_first_word(command_string, ' ');
     f38:	2120      	movs	r1, #32
     f3a:	4620      	mov	r0, r4
     f3c:	f000 fd5e 	bl	19fc <sl_string__erase_first_word>
app_cli__private_find_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f40:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 1034 <app_cli__process_input+0x130>
app_cli__private_handle_help():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:117
    const app_cli__command_s *cli_command = app_cli__private_find_command(cli, command_string);
     f44:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:31
  while (NULL != iterator) {
     f46:	b90e      	cbnz	r6, f4c <app_cli__process_input+0x48>
app_cli__private_find_short_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:44
  app_cli__command_s *iterator = cli->commands_head_pointer;
     f48:	682e      	ldr	r6, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     f4a:	e010      	b.n	f6e <app_cli__process_input+0x6a>
app_cli__private_find_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f4c:	4642      	mov	r2, r8
     f4e:	6831      	ldr	r1, [r6, #0]
     f50:	4620      	mov	r0, r4
     f52:	f000 fce1 	bl	1918 <sl_string__begins_with_whole_word>
     f56:	2800      	cmp	r0, #0
     f58:	d138      	bne.n	fcc <app_cli__process_input+0xc8>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    iterator = iterator->pointer_of_next_command;
     f5a:	68f6      	ldr	r6, [r6, #12]
     f5c:	e7f3      	b.n	f46 <app_cli__process_input+0x42>
app_cli__private_find_short_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:51
    if (sl_string__begins_with_limited_chars(input_string, iterator->command_name,
     f5e:	686a      	ldr	r2, [r5, #4]
     f60:	6831      	ldr	r1, [r6, #0]
     f62:	4620      	mov	r0, r4
     f64:	f000 fcad 	bl	18c2 <sl_string__begins_with_limited_chars>
     f68:	2800      	cmp	r0, #0
     f6a:	d12f      	bne.n	fcc <app_cli__process_input+0xc8>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:56
    iterator = iterator->pointer_of_next_command;
     f6c:	68f6      	ldr	r6, [r6, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     f6e:	2e00      	cmp	r6, #0
     f70:	d1f5      	bne.n	f5e <app_cli__process_input+0x5a>
app_cli__private_handle_help():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:123
      (void)sl_string__insert_at(command_string, 0, "ERROR: Could not find help for command: ");
     f72:	4631      	mov	r1, r6
     f74:	4a2b      	ldr	r2, [pc, #172]	; (1024 <app_cli__process_input+0x120>)
     f76:	4620      	mov	r0, r4
     f78:	f000 fc47 	bl	180a <sl_string__insert_at>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:124
      cli->output_function(cli_argument, command_string);
     f7c:	68ab      	ldr	r3, [r5, #8]
     f7e:	4621      	mov	r1, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:126
      cli->output_function(cli_argument, cli_command->help_message_for_command);
     f80:	4638      	mov	r0, r7
     f82:	4798      	blx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:128
    cli->output_function(cli_argument, "\r\n");
     f84:	68ab      	ldr	r3, [r5, #8]
     f86:	4925      	ldr	r1, [pc, #148]	; (101c <app_cli__process_input+0x118>)
     f88:	e03d      	b.n	1006 <app_cli__process_input+0x102>
app_cli__private_process_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:143
  const app_cli__command_s *command = app_cli__private_find_command(cli, input_string);
     f8a:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f8c:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 1034 <app_cli__process_input+0x130>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:31
  while (NULL != iterator) {
     f90:	b90e      	cbnz	r6, f96 <app_cli__process_input+0x92>
app_cli__private_find_short_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:44
  app_cli__command_s *iterator = cli->commands_head_pointer;
     f92:	682e      	ldr	r6, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     f94:	e00e      	b.n	fb4 <app_cli__process_input+0xb0>
app_cli__private_find_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:32
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name, " ")) {
     f96:	4642      	mov	r2, r8
     f98:	6831      	ldr	r1, [r6, #0]
     f9a:	4620      	mov	r0, r4
     f9c:	f000 fcbc 	bl	1918 <sl_string__begins_with_whole_word>
     fa0:	b9b8      	cbnz	r0, fd2 <app_cli__process_input+0xce>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:36
    iterator = iterator->pointer_of_next_command;
     fa2:	68f6      	ldr	r6, [r6, #12]
     fa4:	e7f4      	b.n	f90 <app_cli__process_input+0x8c>
app_cli__private_find_short_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:51
    if (sl_string__begins_with_limited_chars(input_string, iterator->command_name,
     fa6:	686a      	ldr	r2, [r5, #4]
     fa8:	6831      	ldr	r1, [r6, #0]
     faa:	4620      	mov	r0, r4
     fac:	f000 fc89 	bl	18c2 <sl_string__begins_with_limited_chars>
     fb0:	b978      	cbnz	r0, fd2 <app_cli__process_input+0xce>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:56
    iterator = iterator->pointer_of_next_command;
     fb2:	68f6      	ldr	r6, [r6, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:46
  while (NULL != iterator) {
     fb4:	2e00      	cmp	r6, #0
     fb6:	d1f6      	bne.n	fa6 <app_cli__process_input+0xa2>
app_cli__private_handle_unmatched_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:136
  (void)sl_string__insert_at(output_string, 0, "Unable to match any registered CLI command for: ");
     fb8:	4631      	mov	r1, r6
     fba:	4a1b      	ldr	r2, [pc, #108]	; (1028 <app_cli__process_input+0x124>)
     fbc:	4620      	mov	r0, r4
     fbe:	f000 fc24 	bl	180a <sl_string__insert_at>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:137
  cli->output_function(cli_argument, output_string);
     fc2:	68ab      	ldr	r3, [r5, #8]
     fc4:	4621      	mov	r1, r4
     fc6:	4638      	mov	r0, r7
     fc8:	4798      	blx	r3
     fca:	e7af      	b.n	f2c <app_cli__process_input+0x28>
app_cli__private_handle_help():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:126
      cli->output_function(cli_argument, cli_command->help_message_for_command);
     fcc:	68ab      	ldr	r3, [r5, #8]
     fce:	6871      	ldr	r1, [r6, #4]
     fd0:	e7d6      	b.n	f80 <app_cli__process_input+0x7c>
app_cli__private_handle_command():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:64
  (void)sl_string__erase_first_word(input_string, ' ');
     fd2:	2120      	movs	r1, #32
     fd4:	4620      	mov	r0, r4
     fd6:	f000 fd11 	bl	19fc <sl_string__erase_first_word>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:65
  const app_cli_status_e command_status = command->app_cli_handler(cli_argument, input_string, cli->output_function);
     fda:	68b3      	ldr	r3, [r6, #8]
     fdc:	68aa      	ldr	r2, [r5, #8]
     fde:	4621      	mov	r1, r4
     fe0:	4638      	mov	r0, r7
     fe2:	4798      	blx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:67
  if (APP_CLI_STATUS__SUCCESS != command_status) {
     fe4:	b188      	cbz	r0, 100a <app_cli__process_input+0x106>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:70
    (void)sl_string__insert_at(output_string, 0, "Command failed: ");
     fe6:	4a11      	ldr	r2, [pc, #68]	; (102c <app_cli__process_input+0x128>)
     fe8:	2100      	movs	r1, #0
     fea:	4620      	mov	r0, r4
     fec:	f000 fc0d 	bl	180a <sl_string__insert_at>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:71
    cli->output_function(cli_argument, output_string);
     ff0:	68ab      	ldr	r3, [r5, #8]
     ff2:	4621      	mov	r1, r4
     ff4:	4638      	mov	r0, r7
     ff6:	4798      	blx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:73
    (void)sl_string__printf(output_string, "\r\nCommand help message: %s\r\n", command->help_message_for_command);
     ff8:	490d      	ldr	r1, [pc, #52]	; (1030 <app_cli__process_input+0x12c>)
     ffa:	6872      	ldr	r2, [r6, #4]
     ffc:	4620      	mov	r0, r4
     ffe:	f000 fbc4 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:74
    cli->output_function(cli_argument, output_string);
    1002:	68ab      	ldr	r3, [r5, #8]
    1004:	4621      	mov	r1, r4
    1006:	4638      	mov	r0, r7
    1008:	4798      	blx	r3
app_cli__process_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:194
  } else {
    app_cli__private_process_input(cli, cli_argument, input_string);
  }

  // Send a terminator to signal to any receiver that we are done outputting all output from our handlers
  if (NULL != cli->terminal_string) {
    100a:	68e9      	ldr	r1, [r5, #12]
    100c:	b121      	cbz	r1, 1018 <app_cli__process_input+0x114>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:195
    cli->output_function(cli_argument, cli->terminal_string);
    100e:	68ab      	ldr	r3, [r5, #8]
    1010:	4638      	mov	r0, r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:197
  }
}
    1012:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:195
    cli->output_function(cli_argument, cli->terminal_string);
    1016:	4718      	bx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/app_cli.c:197
}
    1018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    101c:	0000a47d 	.word	0x0000a47d
    1020:	0000a4a1 	.word	0x0000a4a1
    1024:	0000a4d4 	.word	0x0000a4d4
    1028:	0000a4fd 	.word	0x0000a4fd
    102c:	0000a4a6 	.word	0x0000a4a6
    1030:	0000a4b7 	.word	0x0000a4b7
    1034:	0000b294 	.word	0x0000b294

00001038 <sj2_cli__output_function>:
sj2_cli__output_function():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:50
  static StaticTask_t task_struct;
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack), &sj2_cli_struct, PRIORITY_HIGH, task_stack,
                    &task_struct);
}

static void sj2_cli__output_function(app_cli__argument_t argument, const char *string) {
    1038:	b510      	push	{r4, lr}
    103a:	1e4c      	subs	r4, r1, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:51
  while (*string != '\0') {
    103c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    1040:	b900      	cbnz	r0, 1044 <sj2_cli__output_function+0xc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:55
    putchar(*string);
    ++string;
  }
}
    1042:	bd10      	pop	{r4, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:52
    putchar(*string);
    1044:	f004 f976 	bl	5334 <putchar>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:53
    ++string;
    1048:	e7f8      	b.n	103c <sj2_cli__output_function+0x4>
    104a:	Address 0x000000000000104a is out of bounds.


0000104c <sj2_cli__task>:
sj2_cli__task():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:57

static void sj2_cli__task(void *task_parameter) {
    104c:	b570      	push	{r4, r5, r6, lr}
    104e:	b0a0      	sub	sp, #128	; 0x80
    1050:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:63
  app_cli_s *sj2_cli_struct = (app_cli_s *)task_parameter;
  void *unused_cli_param = NULL;
  char string_memory[128];

  // Start by greeting the use with the 'help' command
  sl_string_t user_input = sl_string__initialize_from(string_memory, sizeof(string_memory), "help");
    1052:	4a1b      	ldr	r2, [pc, #108]	; (10c0 <sj2_cli__task+0x74>)
    1054:	2180      	movs	r1, #128	; 0x80
    1056:	4668      	mov	r0, sp
    1058:	f000 fbcc 	bl	17f4 <sl_string__initialize_from>
    105c:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:66 (discriminator 1)

  while (true) {
    app_cli__process_input(sj2_cli_struct, unused_cli_param, user_input);
    105e:	4630      	mov	r0, r6
    1060:	4622      	mov	r2, r4
    1062:	2100      	movs	r1, #0
    1064:	f7ff ff4e 	bl	f04 <app_cli__process_input>
sj2_cli__get_line():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:72 (discriminator 1)
    sj2_cli__get_line(user_input);
  }
}

static void sj2_cli__get_line(sl_string_t input_line) {
  sl_string__clear(input_line);
    1068:	4620      	mov	r0, r4
    106a:	f000 fb7d 	bl	1768 <sl_string__clear>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:75

  // As long as user does not enter a full line, continue to get input
  while (!sl_string__ends_with_newline(input_line)) {
    106e:	4620      	mov	r0, r4
    1070:	f000 fc74 	bl	195c <sl_string__ends_with_newline>
    1074:	2800      	cmp	r0, #0
    1076:	d1f2      	bne.n	105e <sj2_cli__task+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:76
    const char input_byte = getchar();
    1078:	f003 f8d0 	bl	421c <getchar>
    107c:	b2c5      	uxtb	r5, r0
sj2_cli__handle_backspace_logic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:88
}

static void sj2_cli__handle_backspace_logic(sl_string_t input_line, char input_byte) {
  const char backspace = '\b';

  if (backspace == input_byte) {
    107e:	2d08      	cmp	r5, #8
    1080:	d116      	bne.n	10b0 <sj2_cli__task+0x64>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:89
    if (sl_string__get_length(input_line) > 0) {
    1082:	4620      	mov	r0, r4
    1084:	f000 fb5d 	bl	1742 <sl_string__get_length>
    1088:	b160      	cbz	r0, 10a4 <sj2_cli__task+0x58>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:90
      sl_string__erase_last(input_line, 1);
    108a:	2101      	movs	r1, #1
    108c:	4620      	mov	r0, r4
    108e:	f000 fc96 	bl	19be <sl_string__erase_last>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:91
      putchar(backspace);
    1092:	4628      	mov	r0, r5
    1094:	f004 f94e 	bl	5334 <putchar>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:92
      putchar(' ');
    1098:	2020      	movs	r0, #32
    109a:	f004 f94b 	bl	5334 <putchar>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:93
      putchar(backspace);
    109e:	4628      	mov	r0, r5
    10a0:	f004 f948 	bl	5334 <putchar>
sj2_cli__get_line():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:79
    if (sl_string__is_full(input_line)) {
    10a4:	4620      	mov	r0, r4
    10a6:	f000 fb52 	bl	174e <sl_string__is_full>
    10aa:	2800      	cmp	r0, #0
    10ac:	d0df      	beq.n	106e <sj2_cli__task+0x22>
    10ae:	e7d6      	b.n	105e <sj2_cli__task+0x12>
sj2_cli__handle_backspace_logic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:96
    }
  } else {
    putchar(input_byte);
    10b0:	4628      	mov	r0, r5
    10b2:	f004 f93f 	bl	5334 <putchar>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:97
    sl_string__append_char(input_line, input_byte);
    10b6:	4629      	mov	r1, r5
    10b8:	4620      	mov	r0, r4
    10ba:	f000 fbec 	bl	1896 <sl_string__append_char>
    10be:	e7f1      	b.n	10a4 <sj2_cli__task+0x58>
    10c0:	0000a4a1 	.word	0x0000a4a1

000010c4 <sj2_cli__init>:
sj2_cli__init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:16
void sj2_cli__init(void) {
    10c4:	b530      	push	{r4, r5, lr}
    10c6:	b089      	sub	sp, #36	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:20
  sj2_cli_struct = app_cli__initialize(4, sj2_cli__output_function, separator);
    10c8:	ad04      	add	r5, sp, #16
    10ca:	4628      	mov	r0, r5
    10cc:	4b12      	ldr	r3, [pc, #72]	; (1118 <sj2_cli__init+0x54>)
    10ce:	4a13      	ldr	r2, [pc, #76]	; (111c <sj2_cli__init+0x58>)
    10d0:	4c13      	ldr	r4, [pc, #76]	; (1120 <sj2_cli__init+0x5c>)
    10d2:	2104      	movs	r1, #4
    10d4:	f7ff ff06 	bl	ee4 <app_cli__initialize>
    10d8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    10dc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:38
  app_cli__add_command_handler(&sj2_cli_struct, &task_list);
    10e0:	4620      	mov	r0, r4
    10e2:	4910      	ldr	r1, [pc, #64]	; (1124 <sj2_cli__init+0x60>)
    10e4:	f7ff ff09 	bl	efa <app_cli__add_command_handler>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:39
  app_cli__add_command_handler(&sj2_cli_struct, &i2c);
    10e8:	4620      	mov	r0, r4
    10ea:	490f      	ldr	r1, [pc, #60]	; (1128 <sj2_cli__init+0x64>)
    10ec:	f7ff ff05 	bl	efa <app_cli__add_command_handler>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:40
  app_cli__add_command_handler(&sj2_cli_struct, &crash);
    10f0:	4620      	mov	r0, r4
    10f2:	490e      	ldr	r1, [pc, #56]	; (112c <sj2_cli__init+0x68>)
    10f4:	f7ff ff01 	bl	efa <app_cli__add_command_handler>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:46
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack), &sj2_cli_struct, PRIORITY_HIGH, task_stack,
    10f8:	4b0d      	ldr	r3, [pc, #52]	; (1130 <sj2_cli__init+0x6c>)
    10fa:	9302      	str	r3, [sp, #8]
    10fc:	4b0d      	ldr	r3, [pc, #52]	; (1134 <sj2_cli__init+0x70>)
    10fe:	9301      	str	r3, [sp, #4]
    1100:	2303      	movs	r3, #3
    1102:	9300      	str	r3, [sp, #0]
    1104:	f44f 7200 	mov.w	r2, #512	; 0x200
    1108:	4623      	mov	r3, r4
    110a:	490b      	ldr	r1, [pc, #44]	; (1138 <sj2_cli__init+0x74>)
    110c:	480b      	ldr	r0, [pc, #44]	; (113c <sj2_cli__init+0x78>)
    110e:	f001 fc83 	bl	2a18 <xTaskCreateStatic>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/sj2_cli.c:48
}
    1112:	b009      	add	sp, #36	; 0x24
    1114:	bd30      	pop	{r4, r5, pc}
    1116:	bf00      	nop
    1118:	0000a52e 	.word	0x0000a52e
    111c:	00001039 	.word	0x00001039
    1120:	10000360 	.word	0x10000360
    1124:	1000002c 	.word	0x1000002c
    1128:	1000001c 	.word	0x1000001c
    112c:	1000000c 	.word	0x1000000c
    1130:	10000b70 	.word	0x10000b70
    1134:	10000370 	.word	0x10000370
    1138:	0000a581 	.word	0x0000a581
    113c:	0000104d 	.word	0x0000104d

00001140 <cli__i2c_read>:
cli__i2c_read():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:36
  }

  return command_status;
}

static void cli__i2c_read(const sl_string_t command_params, app_cli__print_string_function cli_output) {
    1140:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1144:	b0e7      	sub	sp, #412	; 0x19c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:37
  uint8_t buffer[256] = {0};
    1146:	f10d 0898 	add.w	r8, sp, #152	; 0x98
    114a:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:36
static void cli__i2c_read(const sl_string_t command_params, app_cli__print_string_function cli_output) {
    114e:	4681      	mov	r9, r0
    1150:	460e      	mov	r6, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:37
  uint8_t buffer[256] = {0};
    1152:	4640      	mov	r0, r8
    1154:	2100      	movs	r1, #0
    1156:	f003 f8af 	bl	42b8 <memset>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:41
  void *unused_cli_argument = NULL;

  char string_memory[128];
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    115a:	2180      	movs	r1, #128	; 0x80
    115c:	a806      	add	r0, sp, #24
    115e:	f000 facd 	bl	16fc <sl_string__initialize>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43

  unsigned slave_address = 0, slave_register = 0, count = 1;
    1162:	af05      	add	r7, sp, #20
    1164:	2301      	movs	r3, #1
    1166:	603b      	str	r3, [r7, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:41
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    1168:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  unsigned slave_address = 0, slave_register = 0, count = 1;
    116a:	2400      	movs	r4, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:45

  if (sl_string__scanf(command_params, "0x%x 0x%x %u", &slave_address, &slave_register, &count) >= 2) {
    116c:	9700      	str	r7, [sp, #0]
    116e:	ab04      	add	r3, sp, #16
    1170:	aa03      	add	r2, sp, #12
    1172:	4920      	ldr	r1, [pc, #128]	; (11f4 <cli__i2c_read+0xb4>)
    1174:	4648      	mov	r0, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:43
  unsigned slave_address = 0, slave_register = 0, count = 1;
    1176:	e9cd 4403 	strd	r4, r4, [sp, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:45
  if (sl_string__scanf(command_params, "0x%x 0x%x %u", &slave_address, &slave_register, &count) >= 2) {
    117a:	f000 fb13 	bl	17a4 <sl_string__scanf>
    117e:	2801      	cmp	r0, #1
    1180:	d931      	bls.n	11e6 <cli__i2c_read+0xa6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:46
    if (i2c__read_slave_data(i2c_bus, slave_address, slave_register, &buffer[0], count)) {
    1182:	683b      	ldr	r3, [r7, #0]
    1184:	9300      	str	r3, [sp, #0]
    1186:	f89d 2010 	ldrb.w	r2, [sp, #16]
    118a:	f89d 100c 	ldrb.w	r1, [sp, #12]
    118e:	4643      	mov	r3, r8
    1190:	2002      	movs	r0, #2
    1192:	f002 fb4f 	bl	3834 <i2c__read_slave_data>
    1196:	4681      	mov	r9, r0
    1198:	b1e8      	cbz	r0, 11d6 <cli__i2c_read+0x96>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:47
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    119a:	9a03      	ldr	r2, [sp, #12]
    119c:	4916      	ldr	r1, [pc, #88]	; (11f8 <cli__i2c_read+0xb8>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:51
      cli_output(unused_cli_argument, output);

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    119e:	f8df 9064 	ldr.w	r9, [pc, #100]	; 1204 <cli__i2c_read+0xc4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:47
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    11a2:	4628      	mov	r0, r5
    11a4:	f000 faf1 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:48
      cli_output(unused_cli_argument, output);
    11a8:	4629      	mov	r1, r5
    11aa:	4620      	mov	r0, r4
    11ac:	47b0      	blx	r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    11ae:	683b      	ldr	r3, [r7, #0]
    11b0:	42a3      	cmp	r3, r4
    11b2:	d802      	bhi.n	11ba <cli__i2c_read+0x7a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:62
    }
  } else {
    sl_string__set(output, "Command error: Read command should be 'i2c read 0xDD 0xRR <n>'\n");
    cli_output(unused_cli_argument, output);
  }
}
    11b4:	b067      	add	sp, #412	; 0x19c
    11b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:51 (discriminator 3)
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    11ba:	9a04      	ldr	r2, [sp, #16]
    11bc:	f818 3004 	ldrb.w	r3, [r8, r4]
    11c0:	9300      	str	r3, [sp, #0]
    11c2:	4422      	add	r2, r4
    11c4:	4649      	mov	r1, r9
    11c6:	4628      	mov	r0, r5
    11c8:	f000 fadf 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:52 (discriminator 3)
        cli_output(unused_cli_argument, output);
    11cc:	4629      	mov	r1, r5
    11ce:	2000      	movs	r0, #0
    11d0:	47b0      	blx	r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:50 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    11d2:	3401      	adds	r4, #1
    11d4:	e7eb      	b.n	11ae <cli__i2c_read+0x6e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:55
      sl_string__set(output, "I2C bus error during i2c__read_slave_data()\n");
    11d6:	4909      	ldr	r1, [pc, #36]	; (11fc <cli__i2c_read+0xbc>)
    11d8:	4628      	mov	r0, r5
    11da:	f000 faf4 	bl	17c6 <sl_string__set>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:56
      cli_output(unused_cli_argument, output);
    11de:	4629      	mov	r1, r5
    11e0:	4648      	mov	r0, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:60
    cli_output(unused_cli_argument, output);
    11e2:	47b0      	blx	r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:62
}
    11e4:	e7e6      	b.n	11b4 <cli__i2c_read+0x74>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:59
    sl_string__set(output, "Command error: Read command should be 'i2c read 0xDD 0xRR <n>'\n");
    11e6:	4906      	ldr	r1, [pc, #24]	; (1200 <cli__i2c_read+0xc0>)
    11e8:	4628      	mov	r0, r5
    11ea:	f000 faec 	bl	17c6 <sl_string__set>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:60
    cli_output(unused_cli_argument, output);
    11ee:	4629      	mov	r1, r5
    11f0:	4620      	mov	r0, r4
    11f2:	e7f6      	b.n	11e2 <cli__i2c_read+0xa2>
    11f4:	0000a698 	.word	0x0000a698
    11f8:	0000a6a5 	.word	0x0000a6a5
    11fc:	0000a6d6 	.word	0x0000a6d6
    1200:	0000a703 	.word	0x0000a703
    1204:	0000a6bf 	.word	0x0000a6bf

00001208 <cli__i2c_write>:
cli__i2c_write():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:64

static void cli__i2c_write(sl_string_t command_params, app_cli__print_string_function cli_output) {
    1208:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    120c:	b0e7      	sub	sp, #412	; 0x19c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:65
  unsigned slave_address = 0, slave_register = 0;
    120e:	2400      	movs	r4, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
  void *unused_cli_argument = NULL;
  uint8_t buffer[256] = {0};
    1210:	f10d 0898 	add.w	r8, sp, #152	; 0x98
    1214:	f44f 7280 	mov.w	r2, #256	; 0x100
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:64
static void cli__i2c_write(sl_string_t command_params, app_cli__print_string_function cli_output) {
    1218:	4681      	mov	r9, r0
    121a:	460f      	mov	r7, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
  uint8_t buffer[256] = {0};
    121c:	4640      	mov	r0, r8
    121e:	4621      	mov	r1, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:65
  unsigned slave_address = 0, slave_register = 0;
    1220:	e9cd 4403 	strd	r4, r4, [sp, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:67
  uint8_t buffer[256] = {0};
    1224:	f003 f848 	bl	42b8 <memset>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:70

  char string_memory[128];
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    1228:	2180      	movs	r1, #128	; 0x80
    122a:	a806      	add	r0, sp, #24
    122c:	f000 fa66 	bl	16fc <sl_string__initialize>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:73

  // i2c write 0xDD 0xRR <value> <value> ...
  if (2 == sl_string__scanf(command_params, "0x%x 0x%x", &slave_address, &slave_register)) {
    1230:	ab04      	add	r3, sp, #16
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:70
  sl_string_t output = sl_string__initialize(string_memory, sizeof(string_memory));
    1232:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:73
  if (2 == sl_string__scanf(command_params, "0x%x 0x%x", &slave_address, &slave_register)) {
    1234:	aa03      	add	r2, sp, #12
    1236:	4929      	ldr	r1, [pc, #164]	; (12dc <cli__i2c_write+0xd4>)
    1238:	4648      	mov	r0, r9
    123a:	f000 fab3 	bl	17a4 <sl_string__scanf>
    123e:	2802      	cmp	r0, #2
    1240:	d144      	bne.n	12cc <cli__i2c_write+0xc4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:74
    sl_string__erase_first_word(command_params, ' ');
    1242:	2120      	movs	r1, #32
    1244:	4648      	mov	r0, r9
    1246:	f000 fbd9 	bl	19fc <sl_string__erase_first_word>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:75
    sl_string__erase_first_word(command_params, ' ');
    124a:	2120      	movs	r1, #32
    124c:	4648      	mov	r0, r9
    124e:	f000 fbd5 	bl	19fc <sl_string__erase_first_word>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:78

    // Store one or more write <value> parameters to buffer as specified by the user
    int value_to_write = 0;
    1252:	9405      	str	r4, [sp, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:80
    size_t count = 0;
    while (sl_string__erase_int(command_params, &value_to_write)) {
    1254:	a905      	add	r1, sp, #20
    1256:	4648      	mov	r0, r9
    1258:	f000 fbde 	bl	1a18 <sl_string__erase_int>
    125c:	4605      	mov	r5, r0
    125e:	b9d0      	cbnz	r0, 1296 <cli__i2c_write+0x8e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:85
      buffer[count] = (uint8_t)value_to_write;
      ++count;
    }

    if (i2c__write_slave_data(i2c_bus, slave_address, slave_register, &buffer[0], count)) {
    1260:	9400      	str	r4, [sp, #0]
    1262:	4643      	mov	r3, r8
    1264:	f89d 2010 	ldrb.w	r2, [sp, #16]
    1268:	f89d 100c 	ldrb.w	r1, [sp, #12]
    126c:	2002      	movs	r0, #2
    126e:	f002 fb1b 	bl	38a8 <i2c__write_slave_data>
    1272:	4681      	mov	r9, r0
    1274:	b310      	cbz	r0, 12bc <cli__i2c_write+0xb4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:86
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count, slave_address);
    1276:	9b03      	ldr	r3, [sp, #12]
    1278:	4919      	ldr	r1, [pc, #100]	; (12e0 <cli__i2c_write+0xd8>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:90
      cli_output(unused_cli_argument, output);

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    127a:	f8df 9070 	ldr.w	r9, [pc, #112]	; 12ec <cli__i2c_write+0xe4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:86
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count, slave_address);
    127e:	4622      	mov	r2, r4
    1280:	4630      	mov	r0, r6
    1282:	f000 fa82 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:87
      cli_output(unused_cli_argument, output);
    1286:	4631      	mov	r1, r6
    1288:	4628      	mov	r0, r5
    128a:	47b8      	blx	r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:89 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    128c:	42ac      	cmp	r4, r5
    128e:	d107      	bne.n	12a0 <cli__i2c_write+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:101
    }
  } else {
    sl_string__set(output, "Command error: Write command should be 'i2c write 0xDD 0xRR <value> <value> ...'\n");
    cli_output(unused_cli_argument, output);
  }
    1290:	b067      	add	sp, #412	; 0x19c
    1292:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:81
      buffer[count] = (uint8_t)value_to_write;
    1296:	9b05      	ldr	r3, [sp, #20]
    1298:	f808 3004 	strb.w	r3, [r8, r4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:82
      ++count;
    129c:	3401      	adds	r4, #1
    129e:	e7d9      	b.n	1254 <cli__i2c_write+0x4c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:90 (discriminator 3)
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n", (slave_register + index), buffer[index], buffer[index]);
    12a0:	9a04      	ldr	r2, [sp, #16]
    12a2:	f818 3005 	ldrb.w	r3, [r8, r5]
    12a6:	9300      	str	r3, [sp, #0]
    12a8:	442a      	add	r2, r5
    12aa:	4649      	mov	r1, r9
    12ac:	4630      	mov	r0, r6
    12ae:	f000 fa6c 	bl	178a <sl_string__printf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:91 (discriminator 3)
        cli_output(unused_cli_argument, output);
    12b2:	4631      	mov	r1, r6
    12b4:	2000      	movs	r0, #0
    12b6:	47b8      	blx	r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:89 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    12b8:	3501      	adds	r5, #1
    12ba:	e7e7      	b.n	128c <cli__i2c_write+0x84>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:94
      sl_string__set(output, "I2C bus error during i2c__write_slave_data()\n");
    12bc:	4909      	ldr	r1, [pc, #36]	; (12e4 <cli__i2c_write+0xdc>)
    12be:	4630      	mov	r0, r6
    12c0:	f000 fa81 	bl	17c6 <sl_string__set>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:95
      cli_output(unused_cli_argument, output);
    12c4:	4631      	mov	r1, r6
    12c6:	4648      	mov	r0, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:99
    cli_output(unused_cli_argument, output);
    12c8:	47b8      	blx	r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:101
    12ca:	e7e1      	b.n	1290 <cli__i2c_write+0x88>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:98
    sl_string__set(output, "Command error: Write command should be 'i2c write 0xDD 0xRR <value> <value> ...'\n");
    12cc:	4906      	ldr	r1, [pc, #24]	; (12e8 <cli__i2c_write+0xe0>)
    12ce:	4630      	mov	r0, r6
    12d0:	f000 fa79 	bl	17c6 <sl_string__set>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:99
    cli_output(unused_cli_argument, output);
    12d4:	4631      	mov	r1, r6
    12d6:	4620      	mov	r0, r4
    12d8:	e7f6      	b.n	12c8 <cli__i2c_write+0xc0>
    12da:	bf00      	nop
    12dc:	0000a743 	.word	0x0000a743
    12e0:	0000a74d 	.word	0x0000a74d
    12e4:	0000a784 	.word	0x0000a784
    12e8:	0000a7b2 	.word	0x0000a7b2
    12ec:	0000a76d 	.word	0x0000a76d

000012f0 <cli__i2c>:
cli__i2c():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:12
                          app_cli__print_string_function cli_output) {
    12f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    12f2:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
  const bool read = sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    12f4:	4628      	mov	r0, r5
    12f6:	490e      	ldr	r1, [pc, #56]	; (1330 <cli__i2c+0x40>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:12
                          app_cli__print_string_function cli_output) {
    12f8:	4616      	mov	r6, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
  const bool read = sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    12fa:	f000 faf6 	bl	18ea <sl_string__begins_with_ignore_case>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:16
  const bool write = sl_string__begins_with_ignore_case(user_input_minus_command_name, "write");
    12fe:	490d      	ldr	r1, [pc, #52]	; (1334 <cli__i2c+0x44>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:15
  const bool read = sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    1300:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:16
  const bool write = sl_string__begins_with_ignore_case(user_input_minus_command_name, "write");
    1302:	4628      	mov	r0, r5
    1304:	f000 faf1 	bl	18ea <sl_string__begins_with_ignore_case>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:17
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    1308:	2120      	movs	r1, #32
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:16
  const bool write = sl_string__begins_with_ignore_case(user_input_minus_command_name, "write");
    130a:	4607      	mov	r7, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:17
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    130c:	4628      	mov	r0, r5
    130e:	f000 fb75 	bl	19fc <sl_string__erase_first_word>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:21
  if (read) {
    1312:	b12c      	cbz	r4, 1320 <cli__i2c+0x30>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:22
    cli__i2c_read(command_params, cli_output);
    1314:	4631      	mov	r1, r6
    1316:	4628      	mov	r0, r5
    1318:	f7ff ff12 	bl	1140 <cli__i2c_read>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:23
    command_status = APP_CLI_STATUS__SUCCESS;
    131c:	2000      	movs	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:34
}
    131e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:26
  else if (write) {
    1320:	b127      	cbz	r7, 132c <cli__i2c+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:27
    cli__i2c_write(command_params, cli_output);
    1322:	4631      	mov	r1, r6
    1324:	4628      	mov	r0, r5
    1326:	f7ff ff6f 	bl	1208 <cli__i2c_write>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:28
    command_status = APP_CLI_STATUS__SUCCESS;
    132a:	e7f7      	b.n	131c <cli__i2c+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handler_i2c.c:30
    command_status = APP_CLI_STATUS__HANDLER_FAILURE;
    132c:	2001      	movs	r0, #1
    132e:	e7f6      	b.n	131e <cli__i2c+0x2e>
    1330:	0000a68d 	.word	0x0000a68d
    1334:	0000a692 	.word	0x0000a692

00001338 <cli__crash_me>:
cli__crash_me():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:13
#endif

app_cli_status_e cli__crash_me(app_cli__argument_t argument, sl_string_t user_input_minus_command_name,
                               app_cli__print_string_function cli_output) {
  uint32_t *bad_pointer = (uint32_t *)0x00000001;
  *bad_pointer = 0xDEADBEEF;
    1338:	2301      	movs	r3, #1
    133a:	4a02      	ldr	r2, [pc, #8]	; (1344 <cli__crash_me+0xc>)
    133c:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:15
  return APP_CLI_STATUS__SUCCESS;
}
    133e:	2000      	movs	r0, #0
    1340:	4770      	bx	lr
    1342:	bf00      	nop
    1344:	deadbeef 	.word	0xdeadbeef

00001348 <cli__task_list>:
cli__task_list():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:74
  sl_string__printf(output_string, "Overhead: %u uS\n", (unsigned)(total_run_time - total_tasks_runtime));
  cli_output(unused_cli_param, output_string);
}
#else
app_cli_status_e cli__task_list(app_cli__argument_t argument, sl_string_t user_input_minus_command_name,
                                app_cli__print_string_function cli_output) {
    1348:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:75
  cli_output(argument, "ERROR: configUSE_TRACE_FACILITY needs to be enabled at FreeRTOSConfig.h\n");
    134a:	4902      	ldr	r1, [pc, #8]	; (1354 <cli__task_list+0xc>)
    134c:	4790      	blx	r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/cli/handlers/handlers_general.c:77
  return APP_CLI_STATUS__SUCCESS;
}
    134e:	2000      	movs	r0, #0
    1350:	bd08      	pop	{r3, pc}
    1352:	bf00      	nop
    1354:	0000a804 	.word	0x0000a804

00001358 <delay__us>:
delay__us():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:15
void delay__ms(uint32_t ms) {
  const uint64_t us = UINT64_C(1000) * ms;
  delay__us(us);
}

void delay__us(uint64_t us) {
    1358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    135a:	4604      	mov	r4, r0
    135c:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:16
  const uint64_t time_now_us = sys_time__get_uptime_us();
    135e:	f000 f905 	bl	156c <sys_time__get_uptime_us>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:17
  const uint64_t time_to_wait_us = time_now_us + us;
    1362:	1906      	adds	r6, r0, r4
    1364:	eb41 0705 	adc.w	r7, r1, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:20

  // Use the RTOS for the larger delay period in milliseconds since this will sleep the CPU
  const bool rtos_is_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    1368:	f001 fe2a 	bl	2fc0 <xTaskGetSchedulerState>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:23

  // TODO: This assumes 1Khz OS tick rate
  if (rtos_is_running && us > 1000) {
    136c:	2802      	cmp	r0, #2
    136e:	d10c      	bne.n	138a <delay__us+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:23 (discriminator 1)
    1370:	2300      	movs	r3, #0
    1372:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    1376:	42ab      	cmp	r3, r5
    1378:	bf08      	it	eq
    137a:	42a2      	cmpeq	r2, r4
    137c:	d205      	bcs.n	138a <delay__us+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:24
    const uint32_t ms = us / 1000;
    137e:	4620      	mov	r0, r4
    1380:	4629      	mov	r1, r5
    1382:	f002 fd45 	bl	3e10 <__aeabi_uldivmod>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:25
    vTaskDelay(ms);
    1386:	f001 fcf5 	bl	2d74 <vTaskDelay>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:29 (discriminator 1)
  }

  // Eat the CPU for the remaining microseconds
  while (sys_time__get_uptime_us() < time_to_wait_us) {
    138a:	f000 f8ef 	bl	156c <sys_time__get_uptime_us>
    138e:	42b9      	cmp	r1, r7
    1390:	bf08      	it	eq
    1392:	42b0      	cmpeq	r0, r6
    1394:	d3f9      	bcc.n	138a <delay__us+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:31
  }
}
    1396:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00001398 <delay__ms>:
delay__ms():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/delay.c:12
  delay__us(us);
    1398:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    139c:	fba0 0103 	umull	r0, r1, r0, r3
    13a0:	f7ff bfda 	b.w	1358 <delay__us>

000013a4 <peripherals_init>:
peripherals_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:17
static void peripherals_init__startup_sequence(void);
static const char *peripherals_init__mount_sd_card(void);
static void peripherals_init__uart0_init(void);
static void peripherals_init__i2c_init(void);

void peripherals_init(void) {
    13a4:	b530      	push	{r4, r5, lr}
    13a6:	b085      	sub	sp, #20
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:18
  board_io__initialize();
    13a8:	f001 ff3a 	bl	3220 <board_io__initialize>
peripherals_init__startup_sequence():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:36

  peripherals_init__i2c_init();
}

static void peripherals_init__startup_sequence(void) {
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(), board_io__get_led2(), board_io__get_led3()};
    13ac:	f001 ffd4 	bl	3358 <board_io__get_led0>
    13b0:	f88d 000c 	strb.w	r0, [sp, #12]
    13b4:	f001 ffd6 	bl	3364 <board_io__get_led1>
    13b8:	f88d 000d 	strb.w	r0, [sp, #13]
    13bc:	f001 ffd8 	bl	3370 <board_io__get_led2>
    13c0:	f88d 000e 	strb.w	r0, [sp, #14]
    13c4:	f001 ffda 	bl	337c <board_io__get_led3>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:37
  for (size_t number = 0; number < 32; number++) {
    13c8:	2400      	movs	r4, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:36
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(), board_io__get_led2(), board_io__get_led3()};
    13ca:	f88d 000f 	strb.w	r0, [sp, #15]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:38
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    13ce:	aa04      	add	r2, sp, #16
    13d0:	f004 0303 	and.w	r3, r4, #3
    13d4:	4413      	add	r3, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:37
  for (size_t number = 0; number < 32; number++) {
    13d6:	3401      	adds	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:38
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    13d8:	f813 0c04 	ldrb.w	r0, [r3, #-4]
    13dc:	f002 f89a 	bl	3514 <gpio__toggle>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:39
    delay__ms(50);
    13e0:	2032      	movs	r0, #50	; 0x32
    13e2:	f7ff ffd9 	bl	1398 <delay__ms>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:37
  for (size_t number = 0; number < 32; number++) {
    13e6:	2c20      	cmp	r4, #32
    13e8:	d1f1      	bne.n	13ce <peripherals_init+0x2a>
peripherals_init__uart0_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:62
  return mount_info;
}

static void peripherals_init__uart0_init(void) {
  // Do not do any bufferring for standard input otherwise getchar(), scanf() may not work
  setvbuf(stdin, 0, _IONBF, 0);
    13ea:	4b28      	ldr	r3, [pc, #160]	; (148c <peripherals_init+0xe8>)
    13ec:	6818      	ldr	r0, [r3, #0]
    13ee:	2300      	movs	r3, #0
    13f0:	4619      	mov	r1, r3
    13f2:	2202      	movs	r2, #2
    13f4:	6840      	ldr	r0, [r0, #4]
    13f6:	f004 f837 	bl	5468 <setvbuf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:65

  // Note: PIN functions are initialized by board_io__initialize() for P0.2(Tx) and P0.3(Rx)
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    13fa:	f7fe ff13 	bl	224 <clock__get_peripheral_clock_hz>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:79
  // Memory where the queue actually stores the data
  static uint8_t rxq_storage[32];
  static uint8_t txq_storage[128];

  // Make UART more efficient by backing it with RTOS queues (optional but highly recommended with RTOS)
  QueueHandle_t rxq_handle = xQueueCreateStatic(sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
    13fe:	2500      	movs	r5, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:65
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    1400:	4601      	mov	r1, r0
    1402:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    1406:	2000      	movs	r0, #0
    1408:	f002 fbdc 	bl	3bc4 <uart__init>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:79
  QueueHandle_t rxq_handle = xQueueCreateStatic(sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
    140c:	9500      	str	r5, [sp, #0]
    140e:	4b20      	ldr	r3, [pc, #128]	; (1490 <peripherals_init+0xec>)
    1410:	4a20      	ldr	r2, [pc, #128]	; (1494 <peripherals_init+0xf0>)
    1412:	2101      	movs	r1, #1
    1414:	4620      	mov	r0, r4
    1416:	f000 fe1f 	bl	2058 <xQueueGenericCreateStatic>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:80
  QueueHandle_t txq_handle = xQueueCreateStatic(sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);
    141a:	4b1f      	ldr	r3, [pc, #124]	; (1498 <peripherals_init+0xf4>)
    141c:	9500      	str	r5, [sp, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:79
  QueueHandle_t rxq_handle = xQueueCreateStatic(sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
    141e:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:80
  QueueHandle_t txq_handle = xQueueCreateStatic(sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);
    1420:	4a1e      	ldr	r2, [pc, #120]	; (149c <peripherals_init+0xf8>)
    1422:	2101      	movs	r1, #1
    1424:	2080      	movs	r0, #128	; 0x80
    1426:	f000 fe17 	bl	2058 <xQueueGenericCreateStatic>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:82

  uart__enable_queues(UART__0, txq_handle, rxq_handle);
    142a:	4622      	mov	r2, r4
    142c:	4601      	mov	r1, r0
    142e:	4628      	mov	r0, r5
    1430:	f002 fc12 	bl	3c58 <uart__enable_queues>
peripherals_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:25
  ssp2__initialize(spi_sd_max_speed_khz);
    1434:	f645 50c0 	movw	r0, #24000	; 0x5dc0
    1438:	f002 fb30 	bl	3a9c <ssp2__initialize>
peripherals_init__mount_sd_card():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:51
  if (FR_OK == f_mount(&sd_card_drive, default_drive, option_mount_now)) {
    143c:	2201      	movs	r2, #1
    143e:	4918      	ldr	r1, [pc, #96]	; (14a0 <peripherals_init+0xfc>)
    1440:	4818      	ldr	r0, [pc, #96]	; (14a4 <peripherals_init+0x100>)
    1442:	f7ff fa03 	bl	84c <f_mount>
peripherals_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:30
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    1446:	4a18      	ldr	r2, [pc, #96]	; (14a8 <peripherals_init+0x104>)
    1448:	4b18      	ldr	r3, [pc, #96]	; (14ac <peripherals_init+0x108>)
    144a:	4919      	ldr	r1, [pc, #100]	; (14b0 <peripherals_init+0x10c>)
    144c:	42a8      	cmp	r0, r5
    144e:	bf08      	it	eq
    1450:	4613      	moveq	r3, r2
    1452:	4a18      	ldr	r2, [pc, #96]	; (14b4 <peripherals_init+0x110>)
    1454:	4818      	ldr	r0, [pc, #96]	; (14b8 <peripherals_init+0x114>)
peripherals_init__i2c_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:91
  const uint32_t i2c_speed_hz = UINT32_C(400) * 1000;
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());

  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    if (i2c__detect(I2C__2, slave_address)) {
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    1456:	4d19      	ldr	r5, [pc, #100]	; (14bc <peripherals_init+0x118>)
peripherals_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:30
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    1458:	f003 ff54 	bl	5304 <iprintf>
peripherals_init__i2c_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:87
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());
    145c:	f7fe fee2 	bl	224 <clock__get_peripheral_clock_hz>
    1460:	4917      	ldr	r1, [pc, #92]	; (14c0 <peripherals_init+0x11c>)
    1462:	4602      	mov	r2, r0
    1464:	2002      	movs	r0, #2
    1466:	f002 f98d 	bl	3784 <i2c__initialize>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:89
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    146a:	2402      	movs	r4, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:90
    if (i2c__detect(I2C__2, slave_address)) {
    146c:	b2e1      	uxtb	r1, r4
    146e:	2002      	movs	r0, #2
    1470:	f002 fa42 	bl	38f8 <i2c__detect>
    1474:	b118      	cbz	r0, 147e <peripherals_init+0xda>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:91
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    1476:	4621      	mov	r1, r4
    1478:	4628      	mov	r0, r5
    147a:	f003 ff43 	bl	5304 <iprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:89
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    147e:	3402      	adds	r4, #2
    1480:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    1484:	d1f2      	bne.n	146c <peripherals_init+0xc8>
peripherals_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/peripherals_init.c:33
}
    1486:	b005      	add	sp, #20
    1488:	bd30      	pop	{r4, r5, pc}
    148a:	bf00      	nop
    148c:	10000180 	.word	0x10000180
    1490:	10000be4 	.word	0x10000be4
    1494:	10000bc4 	.word	0x10000bc4
    1498:	10000ee4 	.word	0x10000ee4
    149c:	10000e64 	.word	0x10000e64
    14a0:	0000a47f 	.word	0x0000a47f
    14a4:	10000c2c 	.word	0x10000c2c
    14a8:	0000a85e 	.word	0x0000a85e
    14ac:	0000a87c 	.word	0x0000a87c
    14b0:	0000a8a3 	.word	0x0000a8a3
    14b4:	0000a84d 	.word	0x0000a84d
    14b8:	0000a8f4 	.word	0x0000a8f4
    14bc:	0000a914 	.word	0x0000a914
    14c0:	00061a80 	.word	0x00061a80

000014c4 <spi2_mutex__acquire>:
spi2_mutex__acquire():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:10
#include "task.h"

static StaticSemaphore_t spi2_mutex_memory;
static SemaphoreHandle_t spi2_mutex_handle;

void spi2_mutex__acquire(void) {
    14c4:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:11
  if (!spi2_mutex_handle) {
    14c6:	4c0a      	ldr	r4, [pc, #40]	; (14f0 <spi2_mutex__acquire+0x2c>)
    14c8:	6823      	ldr	r3, [r4, #0]
    14ca:	b923      	cbnz	r3, 14d6 <spi2_mutex__acquire+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:12
    spi2_mutex_handle = xSemaphoreCreateMutexStatic(&spi2_mutex_memory);
    14cc:	4909      	ldr	r1, [pc, #36]	; (14f4 <spi2_mutex__acquire+0x30>)
    14ce:	2001      	movs	r0, #1
    14d0:	f000 feda 	bl	2288 <xQueueCreateMutexStatic>
    14d4:	6020      	str	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:17
    vTraceSetMutexName(spi2_mutex_handle, "spi2_mutex");
  }

  // Only acquire the mutex if the FreeRTOS is running
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    14d6:	f001 fd73 	bl	2fc0 <xTaskGetSchedulerState>
    14da:	2802      	cmp	r0, #2
    14dc:	d106      	bne.n	14ec <spi2_mutex__acquire+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    14de:	6820      	ldr	r0, [r4, #0]
    14e0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:20
  }
}
    14e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    14e8:	f001 b844 	b.w	2574 <xQueueSemaphoreTake>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:20
}
    14ec:	bd10      	pop	{r4, pc}
    14ee:	bf00      	nop
    14f0:	10000f2c 	.word	0x10000f2c
    14f4:	10000f30 	.word	0x10000f30

000014f8 <spi2_mutex__release>:
spi2_mutex__release():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:22

void spi2_mutex__release(void) {
    14f8:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:23
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    14fa:	f001 fd61 	bl	2fc0 <xTaskGetSchedulerState>
    14fe:	2802      	cmp	r0, #2
    1500:	d108      	bne.n	1514 <spi2_mutex__release+0x1c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    1502:	4805      	ldr	r0, [pc, #20]	; (1518 <spi2_mutex__release+0x20>)
    1504:	2300      	movs	r3, #0
    1506:	461a      	mov	r2, r3
    1508:	4619      	mov	r1, r3
    150a:	6800      	ldr	r0, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:26
  }
}
    150c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    1510:	f000 be0c 	b.w	212c <xQueueGenericSend>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/ssp2_mutex.c:26
}
    1514:	bd10      	pop	{r4, pc}
    1516:	bf00      	nop
    1518:	10000f2c 	.word	0x10000f2c

0000151c <sys_time__one_minute_isr>:
sys_time__one_minute_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static volatile uint32_t sys_time__one_minute_counter = 0;

static void sys_time__one_minute_isr(void) {
  ++sys_time__one_minute_counter;
    151c:	4a07      	ldr	r2, [pc, #28]	; (153c <sys_time__one_minute_isr+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:12
static void sys_time__one_minute_isr(void) {
    151e:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    1520:	6813      	ldr	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16

  // Reset the HW timer manually and then clear the interrupt
  hw_timer__set_value(sys_time__hw_timer, 0);
    1522:	2100      	movs	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    1524:	3301      	adds	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    1526:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    1528:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    152a:	f002 f84d 	bl	35c8 <hw_timer__set_value>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    152e:	2100      	movs	r1, #0
    1530:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:18
}
    1532:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    1536:	f002 b833 	b.w	35a0 <hw_timer__acknowledge_interrupt>
    153a:	bf00      	nop
    153c:	10000f78 	.word	0x10000f78

00001540 <sys_time__init>:
sys_time__init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:26
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t peripheral_clock_hz) {
    1540:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:31
  const uint32_t prescalar_for_1us = (peripheral_clock_hz / sys_time__us_per_sec) - 1;
  const uint32_t one_minute_in_us = UINT32_C(60) * 1000 * 1000;

  // Enable the timer with 1uS resolution with an interrupt
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__one_minute_isr);
    1542:	4a07      	ldr	r2, [pc, #28]	; (1560 <sys_time__init+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:27
  const uint32_t prescalar_for_1us = (peripheral_clock_hz / sys_time__us_per_sec) - 1;
    1544:	4907      	ldr	r1, [pc, #28]	; (1564 <sys_time__init+0x24>)
    1546:	fbb0 f1f1 	udiv	r1, r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:31
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__one_minute_isr);
    154a:	2000      	movs	r0, #0
    154c:	3901      	subs	r1, #1
    154e:	f001 fff1 	bl	3534 <hw_timer__enable>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr, one_minute_in_us);
    1552:	2100      	movs	r1, #0
    1554:	4a04      	ldr	r2, [pc, #16]	; (1568 <sys_time__init+0x28>)
    1556:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:33
}
    1558:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:32
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr, one_minute_in_us);
    155c:	f002 b80e 	b.w	357c <hw_timer__enable_match_isr>
    1560:	0000151d 	.word	0x0000151d
    1564:	000f4240 	.word	0x000f4240
    1568:	03938700 	.word	0x03938700

0000156c <sys_time__get_uptime_us>:
sys_time__get_uptime_us():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:35

uint64_t sys_time__get_uptime_us(void) {
    156c:	b570      	push	{r4, r5, r6, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:48
   * value in which case, we will loop again and pick up the new rollover count.  This avoid critical section and
   * simplifies the logic of reading sys_time__sec_counter and the 32-bit HW timer value.
   */
  do {
    before_us = hw_timer__get_value(sys_time__hw_timer);
    minutes = sys_time__one_minute_counter;
    156e:	4e08      	ldr	r6, [pc, #32]	; (1590 <sys_time__get_uptime_us+0x24>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:47 (discriminator 1)
    before_us = hw_timer__get_value(sys_time__hw_timer);
    1570:	2000      	movs	r0, #0
    1572:	f002 f821 	bl	35b8 <hw_timer__get_value>
    1576:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:49 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    1578:	2000      	movs	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:48 (discriminator 1)
    minutes = sys_time__one_minute_counter;
    157a:	6834      	ldr	r4, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:49 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    157c:	f002 f81c 	bl	35b8 <hw_timer__get_value>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:50 (discriminator 1)
  } while (after_us < before_us);
    1580:	4285      	cmp	r5, r0
    1582:	d8f5      	bhi.n	1570 <sys_time__get_uptime_us+0x4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:56

  uint64_t uptime_us = after_us;
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);

  return uptime_us;
}
    1584:	4b03      	ldr	r3, [pc, #12]	; (1594 <sys_time__get_uptime_us+0x28>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:53
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);
    1586:	2100      	movs	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:56
}
    1588:	fbe3 0104 	umlal	r0, r1, r3, r4
    158c:	bd70      	pop	{r4, r5, r6, pc}
    158e:	bf00      	nop
    1590:	10000f78 	.word	0x10000f78
    1594:	03938700 	.word	0x03938700

00001598 <sys_time__get_uptime_ms>:
sys_time__get_uptime_ms():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:58

uint64_t sys_time__get_uptime_ms(void) {
    1598:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:59
  const uint64_t us = sys_time__get_uptime_us();
    159a:	f7ff ffe7 	bl	156c <sys_time__get_uptime_us>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:60
  return (us / 1000);
    159e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    15a2:	2300      	movs	r3, #0
    15a4:	f002 fc34 	bl	3e10 <__aeabi_uldivmod>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/sys_time.c:61
}
    15a8:	bd08      	pop	{r3, pc}

000015aa <uart_puts__polled>:
uart_puts__polled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:51
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    15aa:	b570      	push	{r4, r5, r6, lr}
    15ac:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:52
  const size_t message_length = strlen(message);
    15ae:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:51
void uart_puts__polled(uart_e uart, const char *message) {
    15b0:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:52
  const size_t message_length = strlen(message);
    15b2:	f004 f86a 	bl	568a <strlen>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:53
  for (size_t byte = 0; byte < message_length; byte++) {
    15b6:	1826      	adds	r6, r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:53 (discriminator 1)
    15b8:	42b4      	cmp	r4, r6
    15ba:	d105      	bne.n	15c8 <uart_puts__polled+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    15bc:	4628      	mov	r0, r5
    15be:	210a      	movs	r1, #10
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:57
    15c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:56
  uart__polled_put(uart, '\n');
    15c4:	f002 bb84 	b.w	3cd0 <uart__polled_put>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l4_io/sources/uart_printf.c:54 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    15c8:	f814 1b01 	ldrb.w	r1, [r4], #1
    15cc:	4628      	mov	r0, r5
    15ce:	f002 fb7f 	bl	3cd0 <uart__polled_put>
    15d2:	e7f1      	b.n	15b8 <uart_puts__polled+0xe>

000015d4 <blink_task>:
blink_task():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:61
  sj2_cli__init();
  UNUSED(uart_task); // uart_task is un-used in if we are doing cli init()
#endif
}

static void blink_task(void *params) {
    15d4:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:62
  const gpio_s led = *((gpio_s *)params); // Parameter was input while calling xTaskCreate()
    15d6:	7804      	ldrb	r4, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:66 (discriminator 1)

  // Warning: This task starts with very minimal stack, so do not use printf() API here to avoid stack overflow
  while (true) {
    gpio__toggle(led);
    15d8:	4620      	mov	r0, r4
    15da:	f001 ff9b 	bl	3514 <gpio__toggle>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:67 (discriminator 1)
    vTaskDelay(500);
    15de:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
    15e2:	f001 fbc7 	bl	2d74 <vTaskDelay>
    15e6:	e7f7      	b.n	15d8 <blink_task+0x4>

000015e8 <main>:
main():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:17
int main(void) {
    15e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
create_blinky_tasks():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:36
  led0 = board_io__get_led0();
    15ec:	f001 feb4 	bl	3358 <board_io__get_led0>
    15f0:	f8df 805c 	ldr.w	r8, [pc, #92]	; 1650 <main+0x68>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:37
  led1 = board_io__get_led1();
    15f4:	4e11      	ldr	r6, [pc, #68]	; (163c <main+0x54>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:36
  led0 = board_io__get_led0();
    15f6:	f888 0000 	strb.w	r0, [r8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:37
  led1 = board_io__get_led1();
    15fa:	f001 feb3 	bl	3364 <board_io__get_led1>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:39
  xTaskCreate(blink_task, "led0", configMINIMAL_STACK_SIZE, (void *)&led0, PRIORITY_LOW, NULL);
    15fe:	4d10      	ldr	r5, [pc, #64]	; (1640 <main+0x58>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:37
  led1 = board_io__get_led1();
    1600:	7030      	strb	r0, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:39
  xTaskCreate(blink_task, "led0", configMINIMAL_STACK_SIZE, (void *)&led0, PRIORITY_LOW, NULL);
    1602:	2400      	movs	r4, #0
    1604:	2701      	movs	r7, #1
    1606:	4643      	mov	r3, r8
    1608:	e9cd 7400 	strd	r7, r4, [sp]
    160c:	2264      	movs	r2, #100	; 0x64
    160e:	490d      	ldr	r1, [pc, #52]	; (1644 <main+0x5c>)
    1610:	4628      	mov	r0, r5
    1612:	f001 fa37 	bl	2a84 <xTaskCreate>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:40
  xTaskCreate(blink_task, "led1", configMINIMAL_STACK_SIZE, (void *)&led1, PRIORITY_LOW, NULL);
    1616:	4633      	mov	r3, r6
    1618:	2264      	movs	r2, #100	; 0x64
    161a:	490b      	ldr	r1, [pc, #44]	; (1648 <main+0x60>)
    161c:	e9cd 7400 	strd	r7, r4, [sp]
    1620:	4628      	mov	r0, r5
    1622:	f001 fa2f 	bl	2a84 <xTaskCreate>
create_uart_task():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:56
  sj2_cli__init();
    1626:	f7ff fd4d 	bl	10c4 <sj2_cli__init>
main():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:21
  puts("Starting RTOS");
    162a:	4808      	ldr	r0, [pc, #32]	; (164c <main+0x64>)
    162c:	f003 ff04 	bl	5438 <puts>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:22
  vTaskStartScheduler(); // This function never returns unless RTOS scheduler runs out of memory and fails
    1630:	f001 fa56 	bl	2ae0 <vTaskStartScheduler>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/main.c:25
}
    1634:	4620      	mov	r0, r4
    1636:	b002      	add	sp, #8
    1638:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    163c:	10000f7d 	.word	0x10000f7d
    1640:	000015d5 	.word	0x000015d5
    1644:	0000a93b 	.word	0x0000a93b
    1648:	0000a940 	.word	0x0000a940
    164c:	0000a945 	.word	0x0000a945
    1650:	10000f7c 	.word	0x10000f7c

00001654 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:24
  while (1) {
  }
}

/// Invoked by FreeRTOS when it detects stack overflow: #if (0 != configCHECK_FOR_STACK_OVERFLOW)
void vApplicationStackOverflowHook(TaskHandle_t task_handle, signed char *task_name) {
    1654:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:25
  uart_puts__polled(UART__0, "stack overflow by this task:");
    1656:	2000      	movs	r0, #0
    1658:	4904      	ldr	r1, [pc, #16]	; (166c <vApplicationStackOverflowHook+0x18>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:24
void vApplicationStackOverflowHook(TaskHandle_t task_handle, signed char *task_name) {
    165a:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:25
  uart_puts__polled(UART__0, "stack overflow by this task:");
    165c:	f7ff ffa5 	bl	15aa <uart_puts__polled>
halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:18
  uart_puts__polled(UART__0, message);
    1660:	4621      	mov	r1, r4
    1662:	2000      	movs	r0, #0
    1664:	f7ff ffa1 	bl	15aa <uart_puts__polled>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:20
  }
    1668:	e7fe      	b.n	1668 <vApplicationStackOverflowHook+0x14>
    166a:	bf00      	nop
    166c:	0000aa85 	.word	0x0000aa85

00001670 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:31
  halt((const char *)task_name);
}

// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL pointer to memory request
// #if (0 != configUSE_MALLOC_FAILED_HOOK)
void vApplicationMallocFailedHook(void) { halt("vApplicationMallocFailedHook() called; no more RAM memory"); }
    1670:	b508      	push	{r3, lr}
halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:18
  uart_puts__polled(UART__0, message);
    1672:	4902      	ldr	r1, [pc, #8]	; (167c <vApplicationMallocFailedHook+0xc>)
    1674:	2000      	movs	r0, #0
    1676:	f7ff ff98 	bl	15aa <uart_puts__polled>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:20
  }
    167a:	e7fe      	b.n	167a <vApplicationMallocFailedHook+0xa>
    167c:	0000aa4b 	.word	0x0000aa4b

00001680 <vApplicationIdleHook>:
vApplicationIdleHook():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:39
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION THAT MIGHT BLOCK
 * #if (0 != configUSE_IDLE_HOOK)
 */
void vApplicationIdleHook(void) {
  LPC_SC->PCON = 0; // Enter sleep mode
    1680:	4b02      	ldr	r3, [pc, #8]	; (168c <vApplicationIdleHook+0xc>)
    1682:	2200      	movs	r2, #0
    1684:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:40
  __asm__("WFI");   // Wait for interrupt
    1688:	bf30      	wfi
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:41
}
    168a:	4770      	bx	lr
    168c:	400fc000 	.word	0x400fc000

00001690 <configASSERT_callback>:
configASSERT_callback():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:49
void vApplicationTickHook(void) {
  ; // This code is invoked during each RTOS tick interrupt
}

// This is needed when we use '#ifdef configASSERT'
void configASSERT_callback(unsigned line, const char *message) {
    1690:	b508      	push	{r3, lr}
    1692:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:50
  uart_puts__polled(UART__0, "FreeRTOS ASSERT() occurred indicating an error condition that should NEVER happen");
    1694:	2000      	movs	r0, #0
    1696:	490a      	ldr	r1, [pc, #40]	; (16c0 <configASSERT_callback+0x30>)
    1698:	f7ff ff87 	bl	15aa <uart_puts__polled>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:51
  uart_puts__polled(UART__0, " - Did you call a blocking API or non FromISR() API inside an ISR?");
    169c:	4909      	ldr	r1, [pc, #36]	; (16c4 <configASSERT_callback+0x34>)
    169e:	2000      	movs	r0, #0
    16a0:	f7ff ff83 	bl	15aa <uart_puts__polled>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:52
  uart_puts__polled(UART__0, " - Did you forget to use fprintf(stderr) in an ISR?");
    16a4:	4908      	ldr	r1, [pc, #32]	; (16c8 <configASSERT_callback+0x38>)
    16a6:	2000      	movs	r0, #0
    16a8:	f7ff ff7f 	bl	15aa <uart_puts__polled>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:53
  uart_puts__polled(UART__0, "Here is the line of code that halted the CPU: ");
    16ac:	4907      	ldr	r1, [pc, #28]	; (16cc <configASSERT_callback+0x3c>)
    16ae:	2000      	movs	r0, #0
    16b0:	f7ff ff7b 	bl	15aa <uart_puts__polled>
halt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:18
  uart_puts__polled(UART__0, message);
    16b4:	4621      	mov	r1, r4
    16b6:	2000      	movs	r0, #0
    16b8:	f7ff ff77 	bl	15aa <uart_puts__polled>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:20
  }
    16bc:	e7fe      	b.n	16bc <configASSERT_callback+0x2c>
    16be:	bf00      	nop
    16c0:	0000a953 	.word	0x0000a953
    16c4:	0000a9a5 	.word	0x0000a9a5
    16c8:	0000a9e8 	.word	0x0000a9e8
    16cc:	0000aa1c 	.word	0x0000aa1c

000016d0 <vApplicationGetIdleTaskMemory>:
vApplicationGetIdleTaskMemory():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:63
void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer,
                                   uint32_t *pulIdleTaskStackSize) {
  static StaticTask_t xIdleTaskTCB;
  static StackType_t uxIdleTaskStack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;            // memory for the idle task
    16d0:	4b03      	ldr	r3, [pc, #12]	; (16e0 <vApplicationGetIdleTaskMemory+0x10>)
    16d2:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:64
  *ppxIdleTaskStackBuffer = uxIdleTaskStack;        // stack memory for the idle task
    16d4:	4b03      	ldr	r3, [pc, #12]	; (16e4 <vApplicationGetIdleTaskMemory+0x14>)
    16d6:	600b      	str	r3, [r1, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:65
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE; // stack memory size
    16d8:	2364      	movs	r3, #100	; 0x64
    16da:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:66
}
    16dc:	4770      	bx	lr
    16de:	bf00      	nop
    16e0:	10001118 	.word	0x10001118
    16e4:	10000f88 	.word	0x10000f88

000016e8 <freertos_hooks__get_run_time_counter_value>:
freertos_hooks__get_run_time_counter_value():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:69

// #if (0 != configGENERATE_RUN_TIME_STATS)
uint32_t freertos_hooks__get_run_time_counter_value(void) {
    16e8:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:70
  return (uint32_t)(sys_time__get_uptime_us() - freertos_run_time_counter_offset);
    16ea:	f7ff ff3f 	bl	156c <sys_time__get_uptime_us>
    16ee:	4b02      	ldr	r3, [pc, #8]	; (16f8 <freertos_hooks__get_run_time_counter_value+0x10>)
    16f0:	681b      	ldr	r3, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l5_application/rtos_hooks.c:71
}
    16f2:	1ac0      	subs	r0, r0, r3
    16f4:	bd08      	pop	{r3, pc}
    16f6:	bf00      	nop
    16f8:	10000f80 	.word	0x10000f80

000016fc <sl_string__initialize>:
sl_string__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:93
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

sl_string_t sl_string__initialize(void *memory, sl_string_size_t memory_size_max) {
    16fc:	b538      	push	{r3, r4, r5, lr}
    16fe:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:97
  sl_string_t string = NULL;

  // We need memory to hold sizeof(sl_string_size_t) plus 1 char for a meaningful string and 1 char for NULL
  if ((NULL != memory) && (memory_size_max >= (sizeof(sl_string_size_t) + 2U))) {
    1700:	4604      	mov	r4, r0
    1702:	b158      	cbz	r0, 171c <sl_string__initialize+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:97 (discriminator 1)
    1704:	2903      	cmp	r1, #3
    1706:	d90b      	bls.n	1720 <sl_string__initialize+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:98
    memset(memory, 0, memory_size_max);
    1708:	460a      	mov	r2, r1
    170a:	2100      	movs	r1, #0
    170c:	f002 fdd4 	bl	42b8 <memset>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:101

    void *header = memory;
    void *string_start = (memory + sizeof(sl_string_size_t));
    1710:	4623      	mov	r3, r4
sl_byte_convert__to_network_from_uint16():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:33
  bytes[0] = (uint8_t)(source_value >> 8);
    1712:	0a2a      	lsrs	r2, r5, #8
    1714:	f803 2b02 	strb.w	r2, [r3], #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:34
  bytes[1] = (uint8_t)(source_value >> 0);
    1718:	7065      	strb	r5, [r4, #1]
    171a:	461c      	mov	r4, r3
sl_string__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:109

    string = (sl_string_t)string_start;
  }

  return string;
}
    171c:	4620      	mov	r0, r4
    171e:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:94
  sl_string_t string = NULL;
    1720:	2400      	movs	r4, #0
    1722:	e7fb      	b.n	171c <sl_string__initialize+0x20>

00001724 <sl_string__get_capacity>:
sl_byte_convert__from_network_to_uint16():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:38
  return (((uint16_t)bytes[0] << 8) | (uint16_t)bytes[1]);
    1724:	f810 3c02 	ldrb.w	r3, [r0, #-2]
    1728:	f810 0c01 	ldrb.w	r0, [r0, #-1]
    172c:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
sl_string__get_capacity():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:127
  const sl_string_size_t capacity =
      sl_byte_convert__from_network_to_uint16((const uint8_t *)(string - sizeof(sl_string_size_t)));

  // It is okay to to subtract (sizeof() + 1U) from capacity as we
  // check to ensure the memory meets a minimum value during initialization.
  return (sl_string_size_t)(capacity - sizeof(sl_string_size_t) - 1U);
    1730:	3803      	subs	r0, #3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:128
}
    1732:	b280      	uxth	r0, r0
    1734:	4770      	bx	lr

00001736 <sl_string__get_capacity_including_null_char>:
sl_string__get_capacity_including_null_char():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:130

sl_string_size_t sl_string__get_capacity_including_null_char(const sl_string_t string) {
    1736:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:131
  return sl_string__get_capacity(string) + 1U;
    1738:	f7ff fff4 	bl	1724 <sl_string__get_capacity>
    173c:	3001      	adds	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:132
}
    173e:	b280      	uxth	r0, r0
    1740:	bd08      	pop	{r3, pc}

00001742 <sl_string__get_length>:
sl_string__get_length():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:134

sl_string_size_t sl_string__get_length(const sl_string_t string) {
    1742:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:135
  return (NULL == string) ? 0U : (sl_string_size_t)strlen(string);
    1744:	b110      	cbz	r0, 174c <sl_string__get_length+0xa>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:135 (discriminator 1)
    1746:	f003 ffa0 	bl	568a <strlen>
    174a:	b280      	uxth	r0, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:136 (discriminator 4)
}
    174c:	bd08      	pop	{r3, pc}

0000174e <sl_string__is_full>:
sl_string__is_full():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:138

bool sl_string__is_full(const sl_string_t string) {
    174e:	b510      	push	{r4, lr}
    1750:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:139
  const sl_string_size_t length = sl_string__get_length(string);
    1752:	f7ff fff6 	bl	1742 <sl_string__get_length>
    1756:	4602      	mov	r2, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:140
  const sl_string_size_t capacity = sl_string__get_capacity(string);
    1758:	4620      	mov	r0, r4
    175a:	f7ff ffe3 	bl	1724 <sl_string__get_capacity>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:142
  return (length >= capacity);
}
    175e:	4282      	cmp	r2, r0
    1760:	bf34      	ite	cc
    1762:	2000      	movcc	r0, #0
    1764:	2001      	movcs	r0, #1
    1766:	bd10      	pop	{r4, pc}

00001768 <sl_string__clear>:
sl_string__clear():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:178
  }

  return is_alpha_num;
}

void sl_string__clear(sl_string_t string) { *string = '\0'; }
    1768:	2300      	movs	r3, #0
    176a:	7003      	strb	r3, [r0, #0]
    176c:	4770      	bx	lr

0000176e <sl_string__vprintf>:
sl_string__vprintf():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:207
  va_end(args);

  return chars_printed;
}

sl_string_size_t sl_string__vprintf(sl_string_t string, const char *format, va_list args) {
    176e:	b510      	push	{r4, lr}
    1770:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:208
  const sl_string_size_t capacity = sl_string__get_capacity_including_null_char(string);
    1772:	f7ff ffe0 	bl	1736 <sl_string__get_capacity_including_null_char>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:209
  const int chars_printed = vsnprintf(string, capacity, format, args);
    1776:	4613      	mov	r3, r2
    1778:	460a      	mov	r2, r1
    177a:	4601      	mov	r1, r0
    177c:	4620      	mov	r0, r4
    177e:	f004 fe89 	bl	6494 <vsniprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:210
  return sl_string__private_return_positive_or_zero(chars_printed);
    1782:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:211
}
    1786:	b280      	uxth	r0, r0
    1788:	bd10      	pop	{r4, pc}

0000178a <sl_string__printf>:
sl_string__printf():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:198
sl_string_size_t sl_string__printf(sl_string_t string, const char *format, ...) {
    178a:	b40e      	push	{r1, r2, r3}
    178c:	b503      	push	{r0, r1, lr}
    178e:	aa03      	add	r2, sp, #12
    1790:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:200
  va_start(args, format);
    1794:	9201      	str	r2, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:201
  const sl_string_size_t chars_printed = sl_string__vprintf(string, format, args);
    1796:	f7ff ffea 	bl	176e <sl_string__vprintf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:205
}
    179a:	b002      	add	sp, #8
    179c:	f85d eb04 	ldr.w	lr, [sp], #4
    17a0:	b003      	add	sp, #12
    17a2:	4770      	bx	lr

000017a4 <sl_string__scanf>:
sl_string__scanf():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:230
  const int chars_printed = vsnprintf(string + existing_length, remaining_capacity, format, args);

  return sl_string__private_return_positive_or_zero(chars_printed);
}

size_t sl_string__scanf(const sl_string_t string, const char *format, ...) {
    17a4:	b40e      	push	{r1, r2, r3}
    17a6:	b503      	push	{r0, r1, lr}
    17a8:	aa03      	add	r2, sp, #12
    17aa:	f852 1b04 	ldr.w	r1, [r2], #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:232
  va_list args;
  va_start(args, format);
    17ae:	9201      	str	r2, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:234

  const int number_of_parsed_params = vsscanf(string, format, args);
    17b0:	f004 fea2 	bl	64f8 <vsiscanf>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:237
  va_end(args);

  return (number_of_parsed_params > 0) ? (sl_string_size_t)number_of_parsed_params : 0U;
    17b4:	2800      	cmp	r0, #0
    17b6:	bfcc      	ite	gt
    17b8:	b280      	uxthgt	r0, r0
    17ba:	2000      	movle	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:238
}
    17bc:	b002      	add	sp, #8
    17be:	f85d eb04 	ldr.w	lr, [sp], #4
    17c2:	b003      	add	sp, #12
    17c4:	4770      	bx	lr

000017c6 <sl_string__set>:
sl_string__set():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:268
  }

  return token_count;
}

bool sl_string__set(sl_string_t string, const char *source) {
    17c6:	b538      	push	{r3, r4, r5, lr}
    17c8:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:271
  bool result = false;

  if (NULL != source) {
    17ca:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:272
    const sl_string_size_t source_length = (sl_string_size_t)strlen(source);
    17cc:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:271
  if (NULL != source) {
    17ce:	b171      	cbz	r1, 17ee <sl_string__set+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:272
    const sl_string_size_t source_length = (sl_string_size_t)strlen(source);
    17d0:	f003 ff5b 	bl	568a <strlen>
    17d4:	4601      	mov	r1, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:273
    const sl_string_size_t destination_length = sl_string__get_capacity(string);
    17d6:	4628      	mov	r0, r5
    17d8:	f7ff ffa4 	bl	1724 <sl_string__get_capacity>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:274
    if (destination_length >= source_length) {
    17dc:	b289      	uxth	r1, r1
    17de:	4281      	cmp	r1, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:273
    const sl_string_size_t destination_length = sl_string__get_capacity(string);
    17e0:	4602      	mov	r2, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:274
    if (destination_length >= source_length) {
    17e2:	d805      	bhi.n	17f0 <sl_string__set+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:275
      strncpy(string, source, destination_length);
    17e4:	4621      	mov	r1, r4
    17e6:	4628      	mov	r0, r5
    17e8:	f003 ff8c 	bl	5704 <strncpy>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:276
      result = true;
    17ec:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:281
    }
  }

  return result;
}
    17ee:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:269
  bool result = false;
    17f0:	2000      	movs	r0, #0
    17f2:	e7fc      	b.n	17ee <sl_string__set+0x28>

000017f4 <sl_string__initialize_from>:
sl_string__initialize_from():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:111
sl_string_t sl_string__initialize_from(void *memory, sl_string_size_t memory_size_max, const char *copy_from) {
    17f4:	b538      	push	{r3, r4, r5, lr}
    17f6:	4615      	mov	r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:112
  sl_string_t string = sl_string__initialize(memory, memory_size_max);
    17f8:	f7ff ff80 	bl	16fc <sl_string__initialize>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:114
  if (NULL != string) {
    17fc:	4604      	mov	r4, r0
    17fe:	b110      	cbz	r0, 1806 <sl_string__initialize_from+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:115
    (void)sl_string__set(string, copy_from);
    1800:	4629      	mov	r1, r5
    1802:	f7ff ffe0 	bl	17c6 <sl_string__set>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:119
}
    1806:	4620      	mov	r0, r4
    1808:	bd38      	pop	{r3, r4, r5, pc}

0000180a <sl_string__insert_at>:
sl_string__insert_at():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:283

bool sl_string__insert_at(sl_string_t string, sl_string_size_t index_position, const char *insert) {
    180a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    180e:	4605      	mov	r5, r0
    1810:	460f      	mov	r7, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:286
  bool result = false;

  if (NULL != insert) {
    1812:	4614      	mov	r4, r2
    1814:	b30a      	cbz	r2, 185a <sl_string__insert_at+0x50>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:287
    if (index_position <= sl_string__get_length(string)) {
    1816:	f7ff ff94 	bl	1742 <sl_string__get_length>
    181a:	42b8      	cmp	r0, r7
    181c:	4606      	mov	r6, r0
    181e:	d31c      	bcc.n	185a <sl_string__insert_at+0x50>
sl_string__private_ensure_enough_memory_for_insertion():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:50
  const sl_string_size_t length_of_insertion_string = (sl_string_size_t)strlen(insertion_string);
    1820:	4620      	mov	r0, r4
    1822:	f003 ff32 	bl	568a <strlen>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:51
  const sl_string_size_t memory_required = length_of_original_string + length_of_insertion_string;
    1826:	1832      	adds	r2, r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:50
  const sl_string_size_t length_of_insertion_string = (sl_string_size_t)strlen(insertion_string);
    1828:	4680      	mov	r8, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:53
  return memory_required <= sl_string__get_capacity(string);
    182a:	4628      	mov	r0, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:51
  const sl_string_size_t memory_required = length_of_original_string + length_of_insertion_string;
    182c:	b292      	uxth	r2, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:53
  return memory_required <= sl_string__get_capacity(string);
    182e:	f7ff ff79 	bl	1724 <sl_string__get_capacity>
sl_string__insert_at():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:288
      if (sl_string__private_ensure_enough_memory_for_insertion(string, insert)) {
    1832:	4282      	cmp	r2, r0
    1834:	d811      	bhi.n	185a <sl_string__insert_at+0x50>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:293
        const size_t length_of_insertion_string = strlen(insert);

        char *position_of_insertion = string + index_position;
        char *destination_of_substring = position_of_insertion + length_of_insertion_string;
        const sl_string_size_t length_to_be_moved =
    1836:	f1c7 0201 	rsb	r2, r7, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:291
        char *position_of_insertion = string + index_position;
    183a:	443d      	add	r5, r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:293
        const sl_string_size_t length_to_be_moved =
    183c:	4432      	add	r2, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:296
            sl_string__get_length(string) - index_position + 1U; // Plus 1 for the null term

        memmove(destination_of_substring, position_of_insertion, length_to_be_moved);
    183e:	b292      	uxth	r2, r2
    1840:	4629      	mov	r1, r5
    1842:	eb05 0008 	add.w	r0, r5, r8
    1846:	f002 fd1d 	bl	4284 <memmove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:297
        strncpy(position_of_insertion, insert, length_of_insertion_string);
    184a:	4642      	mov	r2, r8
    184c:	4621      	mov	r1, r4
    184e:	4628      	mov	r0, r5
    1850:	f003 ff58 	bl	5704 <strncpy>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:299

        result = true;
    1854:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:305
      }
    }
  }

  return result;
}
    1856:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:284
  bool result = false;
    185a:	2000      	movs	r0, #0
    185c:	e7fb      	b.n	1856 <sl_string__insert_at+0x4c>

0000185e <sl_string__append>:
sl_string__append():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:307

bool sl_string__append(sl_string_t string, const char *append) {
    185e:	b570      	push	{r4, r5, r6, lr}
    1860:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:310
  bool result = false;

  if (NULL != append) {
    1862:	460c      	mov	r4, r1
    1864:	b1a9      	cbz	r1, 1892 <sl_string__append+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:311
    const sl_string_size_t length_of_original_string = sl_string__get_length(string);
    1866:	f7ff ff6c 	bl	1742 <sl_string__get_length>
    186a:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:312
    const sl_string_size_t length_of_insertion_string = (sl_string_size_t)strlen(append);
    186c:	4620      	mov	r0, r4
    186e:	f003 ff0c 	bl	568a <strlen>
    1872:	b282      	uxth	r2, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:313
    const sl_string_size_t total_length = length_of_original_string + length_of_insertion_string;
    1874:	18a9      	adds	r1, r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:315

    if (total_length <= sl_string__get_capacity(string)) {
    1876:	4630      	mov	r0, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:313
    const sl_string_size_t total_length = length_of_original_string + length_of_insertion_string;
    1878:	b289      	uxth	r1, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:315
    if (total_length <= sl_string__get_capacity(string)) {
    187a:	f7ff ff53 	bl	1724 <sl_string__get_capacity>
    187e:	4288      	cmp	r0, r1
    1880:	d307      	bcc.n	1892 <sl_string__append+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:316
      const sl_string_size_t length_to_copy_including_null = (1U + length_of_insertion_string);
    1882:	3201      	adds	r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:317
      memcpy((string + length_of_original_string), append, length_to_copy_including_null);
    1884:	b292      	uxth	r2, r2
    1886:	4621      	mov	r1, r4
    1888:	1970      	adds	r0, r6, r5
    188a:	f002 fced 	bl	4268 <memcpy>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:318
      result = true;
    188e:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:323
    }
  }

  return result;
}
    1890:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:308
  bool result = false;
    1892:	2000      	movs	r0, #0
    1894:	e7fc      	b.n	1890 <sl_string__append+0x32>

00001896 <sl_string__append_char>:
sl_string__append_char():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:325

bool sl_string__append_char(sl_string_t string, char append) {
    1896:	b507      	push	{r0, r1, r2, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:326
  const char string_to_append[] = {append, '\0'};
    1898:	2300      	movs	r3, #0
    189a:	f88d 1004 	strb.w	r1, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:327
  return sl_string__append(string, string_to_append);
    189e:	a901      	add	r1, sp, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:326
  const char string_to_append[] = {append, '\0'};
    18a0:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:327
  return sl_string__append(string, string_to_append);
    18a4:	f7ff ffdb 	bl	185e <sl_string__append>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:328
}
    18a8:	b003      	add	sp, #12
    18aa:	f85d fb04 	ldr.w	pc, [sp], #4

000018ae <sl_string__equals_to_ignore_case>:
sl_string__equals_to_ignore_case():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:353
  }

  return equal;
}

bool sl_string__equals_to_ignore_case(const sl_string_t string, const char *compare_with_case_ignored) {
    18ae:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:356
  bool equal = false;

  if (NULL != compare_with_case_ignored) {
    18b0:	b129      	cbz	r1, 18be <sl_string__equals_to_ignore_case+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:357
    equal = (0 == strcasecmp(string, compare_with_case_ignored));
    18b2:	f003 fec1 	bl	5638 <strcasecmp>
    18b6:	fab0 f080 	clz	r0, r0
    18ba:	0940      	lsrs	r0, r0, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:361
  }

  return equal;
}
    18bc:	bd08      	pop	{r3, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:354
  bool equal = false;
    18be:	4608      	mov	r0, r1
    18c0:	e7fc      	b.n	18bc <sl_string__equals_to_ignore_case+0xe>

000018c2 <sl_string__begins_with_limited_chars>:
sl_string__begins_with_limited_chars():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:487
  const size_t substring_length = (NULL == begin_with) ? 0U : strlen(begin_with);
  return sl_string__begins_with_limited_chars(string, begin_with, substring_length);
}

bool sl_string__begins_with_limited_chars(const sl_string_t string, const char *begin_with,
                                          size_t max_chars_of_begin_with_to_compare) {
    18c2:	b570      	push	{r4, r5, r6, lr}
    18c4:	4606      	mov	r6, r0
    18c6:	4615      	mov	r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:490
  bool result = false;

  if (NULL != begin_with) {
    18c8:	460c      	mov	r4, r1
    18ca:	b161      	cbz	r1, 18e6 <sl_string__begins_with_limited_chars+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:491
    const sl_string_size_t string_length = sl_string__get_length(string);
    18cc:	f7ff ff39 	bl	1742 <sl_string__get_length>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:495

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= max_chars_of_begin_with_to_compare) {
    18d0:	42a8      	cmp	r0, r5
    18d2:	d308      	bcc.n	18e6 <sl_string__begins_with_limited_chars+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:496
      if (0 == strncmp(string, begin_with, max_chars_of_begin_with_to_compare)) {
    18d4:	462a      	mov	r2, r5
    18d6:	4621      	mov	r1, r4
    18d8:	4630      	mov	r0, r6
    18da:	f003 ff01 	bl	56e0 <strncmp>
    18de:	fab0 f080 	clz	r0, r0
    18e2:	0940      	lsrs	r0, r0, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:503
      }
    }
  }

  return result;
}
    18e4:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:488
  bool result = false;
    18e6:	2000      	movs	r0, #0
    18e8:	e7fc      	b.n	18e4 <sl_string__begins_with_limited_chars+0x22>

000018ea <sl_string__begins_with_ignore_case>:
sl_string__begins_with_ignore_case():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:505

bool sl_string__begins_with_ignore_case(const sl_string_t string, const char *begin_with_case_ignored) {
    18ea:	b570      	push	{r4, r5, r6, lr}
    18ec:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:508
  bool result = false;

  if (NULL != begin_with_case_ignored) {
    18ee:	460c      	mov	r4, r1
    18f0:	b181      	cbz	r1, 1914 <sl_string__begins_with_ignore_case+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:509
    const sl_string_size_t string_length = sl_string__get_length(string);
    18f2:	f7ff ff26 	bl	1742 <sl_string__get_length>
    18f6:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:510
    const size_t substring_length = strlen(begin_with_case_ignored);
    18f8:	4620      	mov	r0, r4
    18fa:	f003 fec6 	bl	568a <strlen>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:514

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= substring_length) {
    18fe:	4286      	cmp	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:510
    const size_t substring_length = strlen(begin_with_case_ignored);
    1900:	4602      	mov	r2, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:514
    if (string_length >= substring_length) {
    1902:	d307      	bcc.n	1914 <sl_string__begins_with_ignore_case+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:515
      if (0 == strncasecmp(string, begin_with_case_ignored, substring_length)) {
    1904:	4621      	mov	r1, r4
    1906:	4628      	mov	r0, r5
    1908:	f003 fec8 	bl	569c <strncasecmp>
    190c:	fab0 f080 	clz	r0, r0
    1910:	0940      	lsrs	r0, r0, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:522
      }
    }
  }

  return result;
}
    1912:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:506
  bool result = false;
    1914:	2000      	movs	r0, #0
    1916:	e7fc      	b.n	1912 <sl_string__begins_with_ignore_case+0x28>

00001918 <sl_string__begins_with_whole_word>:
sl_string__begins_with_whole_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:524

bool sl_string__begins_with_whole_word(const sl_string_t string, const char *begin_with, const char *delimiter_string) {
    1918:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    191c:	4607      	mov	r7, r0
    191e:	4614      	mov	r4, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:527
  bool result = false;

  if ((NULL != begin_with) && (NULL != delimiter_string)) {
    1920:	460d      	mov	r5, r1
    1922:	b1c9      	cbz	r1, 1958 <sl_string__begins_with_whole_word+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:527 (discriminator 1)
    1924:	b1c2      	cbz	r2, 1958 <sl_string__begins_with_whole_word+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:528
    const sl_string_size_t string_length = sl_string__get_length(string);
    1926:	f7ff ff0c 	bl	1742 <sl_string__get_length>
    192a:	4680      	mov	r8, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:529
    const size_t substring_length = strlen(begin_with);
    192c:	4628      	mov	r0, r5
    192e:	f003 feac 	bl	568a <strlen>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:533

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= substring_length) {
    1932:	4580      	cmp	r8, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:529
    const size_t substring_length = strlen(begin_with);
    1934:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:533
    if (string_length >= substring_length) {
    1936:	d30f      	bcc.n	1958 <sl_string__begins_with_whole_word+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:534
      if (0 == strncmp(string, begin_with, substring_length)) {
    1938:	4602      	mov	r2, r0
    193a:	4629      	mov	r1, r5
    193c:	4638      	mov	r0, r7
    193e:	f003 fecf 	bl	56e0 <strncmp>
    1942:	b948      	cbnz	r0, 1958 <sl_string__begins_with_whole_word+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:535
        result = ((*delimiter_string == string[substring_length]) || ('\0' == string[substring_length]));
    1944:	5db8      	ldrb	r0, [r7, r6]
    1946:	7823      	ldrb	r3, [r4, #0]
    1948:	4283      	cmp	r3, r0
    194a:	bf1a      	itte	ne
    194c:	fab0 f080 	clzne	r0, r0
    1950:	0940      	lsrne	r0, r0, #5
    1952:	2001      	moveq	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:541
      }
    }
  }

  return result;
}
    1954:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:525
  bool result = false;
    1958:	2000      	movs	r0, #0
    195a:	e7fb      	b.n	1954 <sl_string__begins_with_whole_word+0x3c>

0000195c <sl_string__ends_with_newline>:
sl_string__ends_with_newline():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:595
  }

  return result;
}

bool sl_string__ends_with_newline(const sl_string_t string) {
    195c:	b510      	push	{r4, lr}
    195e:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:597
  bool status = false;
  const sl_string_size_t length = sl_string__get_length(string);
    1960:	f7ff feef 	bl	1742 <sl_string__get_length>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:599

  if (length > 0U) {
    1964:	b140      	cbz	r0, 1978 <sl_string__ends_with_newline+0x1c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:600
    const sl_string_size_t last_index = length - 1U;
    1966:	3801      	subs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:601
    const char last_char = string[last_index];
    1968:	b280      	uxth	r0, r0
    196a:	5c20      	ldrb	r0, [r4, r0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:602
    status = ('\r' == last_char) || ('\n' == last_char);
    196c:	280d      	cmp	r0, #13
    196e:	d004      	beq.n	197a <sl_string__ends_with_newline+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:602 (discriminator 2)
    1970:	f1a0 030a 	sub.w	r3, r0, #10
    1974:	4258      	negs	r0, r3
    1976:	4158      	adcs	r0, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:606
  }

  return status;
}
    1978:	bd10      	pop	{r4, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:602
    status = ('\r' == last_char) || ('\n' == last_char);
    197a:	2001      	movs	r0, #1
    197c:	e7fc      	b.n	1978 <sl_string__ends_with_newline+0x1c>

0000197e <sl_string__erase_after>:
sl_string__erase_after():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:637

bool sl_string__erase_at(sl_string_t string, sl_string_size_t index_position) {
  return sl_string__erase_after(string, index_position, 1);
}

bool sl_string__erase_after(sl_string_t string, sl_string_size_t erase_index_position, sl_string_size_t n_chars) {
    197e:	b570      	push	{r4, r5, r6, lr}
    1980:	460c      	mov	r4, r1
    1982:	4605      	mov	r5, r0
    1984:	4616      	mov	r6, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:638
  const sl_string_size_t string_length = sl_string__get_length(string);
    1986:	f7ff fedc 	bl	1742 <sl_string__get_length>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:641
  bool result = false;

  if (erase_index_position < string_length) {
    198a:	42a0      	cmp	r0, r4
    198c:	d911      	bls.n	19b2 <sl_string__erase_after+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:642
    n_chars = (n_chars > (string_length - erase_index_position)) ? (string_length - erase_index_position) : n_chars;
    198e:	1b01      	subs	r1, r0, r4
    1990:	42b1      	cmp	r1, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:643
    const sl_string_size_t num_chars_to_move = string_length - erase_index_position - n_chars + 1U;
    1992:	f1c4 0301 	rsb	r3, r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:642
    n_chars = (n_chars > (string_length - erase_index_position)) ? (string_length - erase_index_position) : n_chars;
    1996:	460a      	mov	r2, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:643
    const sl_string_size_t num_chars_to_move = string_length - erase_index_position - n_chars + 1U;
    1998:	4418      	add	r0, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:642
    n_chars = (n_chars > (string_length - erase_index_position)) ? (string_length - erase_index_position) : n_chars;
    199a:	bfa8      	it	ge
    199c:	4632      	movge	r2, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:643
    const sl_string_size_t num_chars_to_move = string_length - erase_index_position - n_chars + 1U;
    199e:	1a80      	subs	r0, r0, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:645

    memmove(string + erase_index_position, string + erase_index_position + n_chars, num_chars_to_move);
    19a0:	fa14 f182 	uxtah	r1, r4, r2
    19a4:	4429      	add	r1, r5
    19a6:	b282      	uxth	r2, r0
    19a8:	1928      	adds	r0, r5, r4
    19aa:	f002 fc6b 	bl	4284 <memmove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:646
    result = true;
    19ae:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:650
  }

  return result;
}
    19b0:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:639
  bool result = false;
    19b2:	2000      	movs	r0, #0
    19b4:	e7fc      	b.n	19b0 <sl_string__erase_after+0x32>

000019b6 <sl_string__erase_first>:
sl_string__erase_first():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:622
  return sl_string__erase_after(string, 0, n_chars);
    19b6:	460a      	mov	r2, r1
    19b8:	2100      	movs	r1, #0
    19ba:	f7ff bfe0 	b.w	197e <sl_string__erase_after>

000019be <sl_string__erase_last>:
sl_string__erase_last():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:625
bool sl_string__erase_last(sl_string_t string, sl_string_size_t n_chars) {
    19be:	b538      	push	{r3, r4, r5, lr}
    19c0:	460c      	mov	r4, r1
    19c2:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:626
  const sl_string_size_t string_length = sl_string__get_length(string);
    19c4:	f7ff febd 	bl	1742 <sl_string__get_length>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:627
  const sl_string_size_t start_of_erase_index =
    19c8:	42a0      	cmp	r0, r4
    19ca:	bf24      	itt	cs
    19cc:	1b00      	subcs	r0, r0, r4
    19ce:	b281      	uxthcs	r1, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:630
  return sl_string__erase_after(string, start_of_erase_index, n_chars);
    19d0:	4622      	mov	r2, r4
    19d2:	4628      	mov	r0, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:627
  const sl_string_size_t start_of_erase_index =
    19d4:	bf38      	it	cc
    19d6:	2100      	movcc	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:631
}
    19d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:630
  return sl_string__erase_after(string, start_of_erase_index, n_chars);
    19dc:	f7ff bfcf 	b.w	197e <sl_string__erase_after>

000019e0 <sl_string__erase_at_substring>:
sl_string__erase_at_substring():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:652

bool sl_string__erase_at_substring(sl_string_t string, const char *erase_at_substring) {
    19e0:	b510      	push	{r4, lr}
    19e2:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:653
  const char *found = strstr(string, erase_at_substring);
    19e4:	f003 fea1 	bl	572a <strstr>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:654
  const bool found_something_to_erase = (NULL != found);
    19e8:	1e03      	subs	r3, r0, #0
sl_utils__pointer_distance():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:41
int sl_utils__pointer_distance(const void *pointer_to_last, const void *string) { return (pointer_to_last - string); }
    19ea:	bf1f      	itttt	ne
    19ec:	1b1b      	subne	r3, r3, r4
sl_string__erase_at_substring():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:658

  if (found_something_to_erase) {
    const sl_string_size_t position = (sl_string_size_t)sl_utils__pointer_distance(found, string);
    string[position] = '\0';
    19ee:	b29b      	uxthne	r3, r3
    19f0:	2200      	movne	r2, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:654
  const bool found_something_to_erase = (NULL != found);
    19f2:	2001      	movne	r0, #1
    19f4:	bf0c      	ite	eq
    19f6:	2000      	moveq	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:658
    string[position] = '\0';
    19f8:	54e2      	strbne	r2, [r4, r3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:662
  }

  return found_something_to_erase;
}
    19fa:	bd10      	pop	{r4, pc}

000019fc <sl_string__erase_first_word>:
sl_string__erase_first_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:664

bool sl_string__erase_first_word(sl_string_t string, char word_separater) {
    19fc:	b510      	push	{r4, lr}
    19fe:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:666
  bool result = false;
  const char *word_ptr = strchr(string, (int)word_separater);
    1a00:	f003 fe36 	bl	5670 <strchr>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:668

  if (NULL != word_ptr) {
    1a04:	b138      	cbz	r0, 1a16 <sl_string__erase_first_word+0x1a>
sl_utils__pointer_distance():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:41
int sl_utils__pointer_distance(const void *pointer_to_last, const void *string) { return (pointer_to_last - string); }
    1a06:	1b01      	subs	r1, r0, r4
sl_string__erase_first_word():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:669
    const sl_string_size_t n_chars = (sl_string_size_t)sl_utils__pointer_distance(word_ptr, string) + 1U;
    1a08:	3101      	adds	r1, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:670
    result = sl_string__erase_first(string, n_chars); // Plus 1 to also erase the word_seperator
    1a0a:	4620      	mov	r0, r4
    1a0c:	b289      	uxth	r1, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:674
  }

  return result;
}
    1a0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:670
    result = sl_string__erase_first(string, n_chars); // Plus 1 to also erase the word_seperator
    1a12:	f7ff bfd0 	b.w	19b6 <sl_string__erase_first>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:674
}
    1a16:	bd10      	pop	{r4, pc}

00001a18 <sl_string__erase_int>:
sl_string__erase_int():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:693
  }

  return chars_removed;
}

bool sl_string__erase_int(sl_string_t string, int *erased_int) {
    1a18:	b570      	push	{r4, r5, r6, lr}
    1a1a:	4606      	mov	r6, r0
    1a1c:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:697
  bool parsed = false;

  const char *c = string;
  while (('\0' != *c) && (0U == isdigit((int)*c))) {
    1a1e:	4811      	ldr	r0, [pc, #68]	; (1a64 <sl_string__erase_int+0x4c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:693
bool sl_string__erase_int(sl_string_t string, int *erased_int) {
    1a20:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:697
  while (('\0' != *c) && (0U == isdigit((int)*c))) {
    1a22:	462b      	mov	r3, r5
    1a24:	f813 1b01 	ldrb.w	r1, [r3], #1
    1a28:	b1c9      	cbz	r1, 1a5e <sl_string__erase_int+0x46>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:697 (discriminator 1)
    1a2a:	5c0a      	ldrb	r2, [r1, r0]
    1a2c:	0752      	lsls	r2, r2, #29
    1a2e:	d514      	bpl.n	1a5a <sl_string__erase_int+0x42>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:701
    ++c; // Skip chars until a digit
  }

  if (('\0' != *c) && (NULL != erased_int) && (0U != isdigit((int)*c))) {
    1a30:	b124      	cbz	r4, 1a3c <sl_string__erase_int+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:702 (discriminator 2)
    *erased_int = atoi(c);
    1a32:	4628      	mov	r0, r5
    1a34:	f002 fb6e 	bl	4114 <atoi>
    1a38:	6020      	str	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:703 (discriminator 2)
    parsed = true;
    1a3a:	2401      	movs	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:706
  }

  while (('\0' != *c) && (0U != isdigit((int)*c))) {
    1a3c:	4a09      	ldr	r2, [pc, #36]	; (1a64 <sl_string__erase_int+0x4c>)
    1a3e:	4629      	mov	r1, r5
    1a40:	f815 3b01 	ldrb.w	r3, [r5], #1
    1a44:	b113      	cbz	r3, 1a4c <sl_string__erase_int+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:706 (discriminator 1)
    1a46:	5c9b      	ldrb	r3, [r3, r2]
    1a48:	075b      	lsls	r3, r3, #29
    1a4a:	d4f8      	bmi.n	1a3e <sl_string__erase_int+0x26>
sl_utils__pointer_distance():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:41
int sl_utils__pointer_distance(const void *pointer_to_last, const void *string) { return (pointer_to_last - string); }
    1a4c:	1b89      	subs	r1, r1, r6
sl_string__erase_int():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:712
    ++c; // Skip the digits we processed in atoi() above
  }

  // Erase the integer we processed above
  const sl_string_size_t chars_to_erase = (sl_string_size_t)sl_utils__pointer_distance(c, string);
  (void)sl_string__erase_first(string, chars_to_erase);
    1a4e:	b289      	uxth	r1, r1
    1a50:	4630      	mov	r0, r6
    1a52:	f7ff ffb0 	bl	19b6 <sl_string__erase_first>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:715

  return parsed;
}
    1a56:	4620      	mov	r0, r4
    1a58:	bd70      	pop	{r4, r5, r6, pc}
    1a5a:	461d      	mov	r5, r3
    1a5c:	e7e1      	b.n	1a22 <sl_string__erase_int+0xa>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:694
  bool parsed = false;
    1a5e:	460c      	mov	r4, r1
    1a60:	e7ec      	b.n	1a3c <sl_string__erase_int+0x24>
    1a62:	bf00      	nop
    1a64:	0000b189 	.word	0x0000b189

00001a68 <sl_string__trim_end>:
sl_string__trim_end():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:717

bool sl_string__trim_end(sl_string_t string, const char *chars_to_trim) {
    1a68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1a6a:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:720
  bool result = false;

  if (NULL != chars_to_trim) {
    1a6c:	460c      	mov	r4, r1
    1a6e:	b1c9      	cbz	r1, 1aa4 <sl_string__trim_end+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:721
    const sl_string_size_t string_length = sl_string__get_length(string);
    1a70:	f7ff fe67 	bl	1742 <sl_string__get_length>
    1a74:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:722
    const size_t trim_char_length = strlen(chars_to_trim);
    1a76:	4620      	mov	r0, r4
    1a78:	f003 fe07 	bl	568a <strlen>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:724

    for (int character = ((int)string_length - 1); character >= 0; character--) {
    1a7c:	1e6b      	subs	r3, r5, #1
    1a7e:	4433      	add	r3, r6
    1a80:	4420      	add	r0, r4
    1a82:	3e01      	subs	r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:729
      bool trim_done = false;

      for (size_t trim_char = 0; trim_char < trim_char_length; trim_char++) {
        if (chars_to_trim[trim_char] == string[character]) {
          string[character] = '\0';
    1a84:	2100      	movs	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:724 (discriminator 1)
    for (int character = ((int)string_length - 1); character >= 0; character--) {
    1a86:	42b3      	cmp	r3, r6
    1a88:	d002      	beq.n	1a90 <sl_string__trim_end+0x28>
    1a8a:	4622      	mov	r2, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:727 (discriminator 1)
      for (size_t trim_char = 0; trim_char < trim_char_length; trim_char++) {
    1a8c:	4282      	cmp	r2, r0
    1a8e:	d101      	bne.n	1a94 <sl_string__trim_end+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:739

      if (!trim_done) {
        break;
      }
    }
    result = true;
    1a90:	2001      	movs	r0, #1
    1a92:	e008      	b.n	1aa6 <sl_string__trim_end+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:728
        if (chars_to_trim[trim_char] == string[character]) {
    1a94:	f812 5b01 	ldrb.w	r5, [r2], #1
    1a98:	781f      	ldrb	r7, [r3, #0]
    1a9a:	42af      	cmp	r7, r5
    1a9c:	d1f6      	bne.n	1a8c <sl_string__trim_end+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:729
          string[character] = '\0';
    1a9e:	f803 1901 	strb.w	r1, [r3], #-1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:735
      if (!trim_done) {
    1aa2:	e7f0      	b.n	1a86 <sl_string__trim_end+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:718
  bool result = false;
    1aa4:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l2_utils/string/sl_string.c:743
  }

  return result;
}
    1aa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00001aa8 <vPortSVCHandler_wrapper>:
invoke_function_in_wrapper():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_interrupt_handlers.c:25
 * Calling ISR in a wrapper causes RTOS crash when a task is using floating-point operations
 * We need to fully investigate it before re-enabling vRunTimeStatIsrEntry() and vRunTimeStatIsrExit()
 */
static void invoke_function_in_wrapper(function__void_f function) {
  // vRunTimeStatIsrEntry();
  function();
    1aa8:	f000 b85a 	b.w	1b60 <vPortSVCHandler>

00001aac <xPortPendSVHandler_wrapper>:
    1aac:	f000 b8a0 	b.w	1bf0 <xPortPendSVHandler>

00001ab0 <xPortSysTickHandler_wrapper>:
    1ab0:	f000 b8d0 	b.w	1c54 <xPortSysTickHandler>

00001ab4 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:279
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
    1ab4:	4808      	ldr	r0, [pc, #32]	; (1ad8 <prvPortStartFirstTask+0x24>)
    1ab6:	6800      	ldr	r0, [r0, #0]
    1ab8:	6800      	ldr	r0, [r0, #0]
    1aba:	f380 8808 	msr	MSP, r0
    1abe:	f04f 0000 	mov.w	r0, #0
    1ac2:	f380 8814 	msr	CONTROL, r0
    1ac6:	b662      	cpsie	i
    1ac8:	b661      	cpsie	f
    1aca:	f3bf 8f4f 	dsb	sy
    1ace:	f3bf 8f6f 	isb	sy
    1ad2:	df00      	svc	0
    1ad4:	bf00      	nop
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:293
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
    1ad6:	0000      	.short	0x0000
    1ad8:	e000ed08 	.word	0xe000ed08

00001adc <vPortEnableVFP>:
vPortEnableVFP():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:715
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
    1adc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 1aec <vPortEnableVFP+0x10>
    1ae0:	6801      	ldr	r1, [r0, #0]
    1ae2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    1ae6:	6001      	str	r1, [r0, #0]
    1ae8:	4770      	bx	lr
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:724
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
    1aea:	0000      	.short	0x0000
    1aec:	e000ed88 	.word	0xe000ed88

00001af0 <prvTaskExitError>:
prvTaskExitError():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:230
{
    1af0:	b507      	push	{r0, r1, r2, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:231
volatile uint32_t ulDummy = 0;
    1af2:	2300      	movs	r3, #0
    1af4:	9301      	str	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:239
	configASSERT( uxCriticalNesting == ~0UL );
    1af6:	4b0b      	ldr	r3, [pc, #44]	; (1b24 <prvTaskExitError+0x34>)
    1af8:	681b      	ldr	r3, [r3, #0]
    1afa:	3301      	adds	r3, #1
    1afc:	d004      	beq.n	1b08 <prvTaskExitError+0x18>
    1afe:	490a      	ldr	r1, [pc, #40]	; (1b28 <prvTaskExitError+0x38>)
    1b00:	20ef      	movs	r0, #239	; 0xef
    1b02:	f7ff fdc5 	bl	1690 <configASSERT_callback>
    1b06:	e7fe      	b.n	1b06 <prvTaskExitError+0x16>
vPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
    1b08:	f04f 0318 	mov.w	r3, #24
    1b0c:	f383 8811 	msr	BASEPRI, r3
    1b10:	f3bf 8f6f 	isb	sy
    1b14:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:241 (discriminator 1)
	while( ulDummy == 0 )
    1b18:	9b01      	ldr	r3, [sp, #4]
    1b1a:	2b00      	cmp	r3, #0
    1b1c:	d0fc      	beq.n	1b18 <prvTaskExitError+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:251
}
    1b1e:	b003      	add	sp, #12
    1b20:	f85d fb04 	ldr.w	pc, [sp], #4
    1b24:	10001174 	.word	0x10001174
    1b28:	0000aaa2 	.word	0x0000aaa2

00001b2c <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:208
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    1b2c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    1b30:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:212
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
    1b34:	4b07      	ldr	r3, [pc, #28]	; (1b54 <pxPortInitialiseStack+0x28>)
    1b36:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    1b3a:	f021 0101 	bic.w	r1, r1, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    1b3e:	f06f 0302 	mvn.w	r3, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    1b42:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:216
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
    1b46:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    1b4a:	f840 3c24 	str.w	r3, [r0, #-36]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:226
}
    1b4e:	3844      	subs	r0, #68	; 0x44
    1b50:	4770      	bx	lr
    1b52:	bf00      	nop
    1b54:	00001af1 	.word	0x00001af1
    1b58:	ffffffff 	.word	0xffffffff
    1b5c:	ffffffff 	.word	0xffffffff

00001b60 <vPortSVCHandler>:
vPortSVCHandler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:256
	__asm volatile (
    1b60:	4b07      	ldr	r3, [pc, #28]	; (1b80 <pxCurrentTCBConst2>)
    1b62:	6819      	ldr	r1, [r3, #0]
    1b64:	6808      	ldr	r0, [r1, #0]
    1b66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1b6a:	f380 8809 	msr	PSP, r0
    1b6e:	f3bf 8f6f 	isb	sy
    1b72:	f04f 0000 	mov.w	r0, #0
    1b76:	f380 8811 	msr	BASEPRI, r0
    1b7a:	4770      	bx	lr
    1b7c:	f3af 8000 	nop.w

00001b80 <pxCurrentTCBConst2>:
    1b80:	10001178 	.word	0x10001178

00001b84 <vPortEnterCritical>:
vPortEnterCritical():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:416
{
    1b84:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
    1b86:	f04f 0318 	mov.w	r3, #24
    1b8a:	f383 8811 	msr	BASEPRI, r3
    1b8e:	f3bf 8f6f 	isb	sy
    1b92:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    1b96:	4a09      	ldr	r2, [pc, #36]	; (1bbc <vPortEnterCritical+0x38>)
    1b98:	6813      	ldr	r3, [r2, #0]
    1b9a:	3301      	adds	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    1b9c:	2b01      	cmp	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    1b9e:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    1ba0:	d10a      	bne.n	1bb8 <vPortEnterCritical+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
    1ba2:	4b07      	ldr	r3, [pc, #28]	; (1bc0 <vPortEnterCritical+0x3c>)
    1ba4:	681b      	ldr	r3, [r3, #0]
    1ba6:	f013 0fff 	tst.w	r3, #255	; 0xff
    1baa:	d005      	beq.n	1bb8 <vPortEnterCritical+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:427 (discriminator 1)
    1bac:	4905      	ldr	r1, [pc, #20]	; (1bc4 <vPortEnterCritical+0x40>)
    1bae:	f240 10ab 	movw	r0, #427	; 0x1ab
    1bb2:	f7ff fd6d 	bl	1690 <configASSERT_callback>
    1bb6:	e7fe      	b.n	1bb6 <vPortEnterCritical+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:429
}
    1bb8:	bd08      	pop	{r3, pc}
    1bba:	bf00      	nop
    1bbc:	10001174 	.word	0x10001174
    1bc0:	e000ed04 	.word	0xe000ed04
    1bc4:	0000aabc 	.word	0x0000aabc

00001bc8 <vPortExitCritical>:
vPortExitCritical():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    1bc8:	4a07      	ldr	r2, [pc, #28]	; (1be8 <vPortExitCritical+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:433
{
    1bca:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    1bcc:	6813      	ldr	r3, [r2, #0]
    1bce:	b92b      	cbnz	r3, 1bdc <vPortExitCritical+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:434 (discriminator 1)
    1bd0:	4906      	ldr	r1, [pc, #24]	; (1bec <vPortExitCritical+0x24>)
    1bd2:	f44f 70d9 	mov.w	r0, #434	; 0x1b2
    1bd6:	f7ff fd5b 	bl	1690 <configASSERT_callback>
    1bda:	e7fe      	b.n	1bda <vPortExitCritical+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	uxCriticalNesting--;
    1bdc:	3b01      	subs	r3, #1
    1bde:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:436
	if( uxCriticalNesting == 0 )
    1be0:	b90b      	cbnz	r3, 1be6 <vPortExitCritical+0x1e>
vPortSetBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
    1be2:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:440
}
    1be6:	bd08      	pop	{r3, pc}
    1be8:	10001174 	.word	0x10001174
    1bec:	0000aaf1 	.word	0x0000aaf1

00001bf0 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:447
	__asm volatile
    1bf0:	f3ef 8009 	mrs	r0, PSP
    1bf4:	f3bf 8f6f 	isb	sy
    1bf8:	4b15      	ldr	r3, [pc, #84]	; (1c50 <pxCurrentTCBConst>)
    1bfa:	681a      	ldr	r2, [r3, #0]
    1bfc:	f01e 0f10 	tst.w	lr, #16
    1c00:	bf08      	it	eq
    1c02:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
    1c06:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c0a:	6010      	str	r0, [r2, #0]
    1c0c:	e92d 0009 	stmdb	sp!, {r0, r3}
    1c10:	f04f 0018 	mov.w	r0, #24
    1c14:	f380 8811 	msr	BASEPRI, r0
    1c18:	f3bf 8f4f 	dsb	sy
    1c1c:	f3bf 8f6f 	isb	sy
    1c20:	f001 f8cc 	bl	2dbc <vTaskSwitchContext>
    1c24:	f04f 0000 	mov.w	r0, #0
    1c28:	f380 8811 	msr	BASEPRI, r0
    1c2c:	bc09      	pop	{r0, r3}
    1c2e:	6819      	ldr	r1, [r3, #0]
    1c30:	6808      	ldr	r0, [r1, #0]
    1c32:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c36:	f01e 0f10 	tst.w	lr, #16
    1c3a:	bf08      	it	eq
    1c3c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
    1c40:	f380 8809 	msr	PSP, r0
    1c44:	f3bf 8f6f 	isb	sy
    1c48:	4770      	bx	lr
    1c4a:	bf00      	nop
    1c4c:	f3af 8000 	nop.w

00001c50 <pxCurrentTCBConst>:
    1c50:	10001178 	.word	0x10001178

00001c54 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:501
{
    1c54:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    1c56:	f04f 0318 	mov.w	r3, #24
    1c5a:	f383 8811 	msr	BASEPRI, r3
    1c5e:	f3bf 8f6f 	isb	sy
    1c62:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:509
		if( xTaskIncrementTick() != pdFALSE )
    1c66:	f000 ff7d 	bl	2b64 <xTaskIncrementTick>
    1c6a:	b118      	cbz	r0, 1c74 <xPortSysTickHandler+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:513
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    1c6c:	4b03      	ldr	r3, [pc, #12]	; (1c7c <xPortSysTickHandler+0x28>)
    1c6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1c72:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    1c74:	2300      	movs	r3, #0
    1c76:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:517
}
    1c7a:	bd08      	pop	{r3, pc}
    1c7c:	e000ed04 	.word	0xe000ed04

00001c80 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
{
    1c80:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    1c82:	4a08      	ldr	r2, [pc, #32]	; (1ca4 <vPortSetupTimerInterrupt+0x24>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:703
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    1c84:	4c08      	ldr	r4, [pc, #32]	; (1ca8 <vPortSetupTimerInterrupt+0x28>)
    1c86:	2300      	movs	r3, #0
    1c88:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    1c8a:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:707
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    1c8c:	f7fe fac6 	bl	21c <clock__get_core_clock_hz>
    1c90:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    1c94:	fbb0 f0f3 	udiv	r0, r0, r3
    1c98:	4b04      	ldr	r3, [pc, #16]	; (1cac <vPortSetupTimerInterrupt+0x2c>)
    1c9a:	3801      	subs	r0, #1
    1c9c:	6018      	str	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:708
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    1c9e:	2307      	movs	r3, #7
    1ca0:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:709
}
    1ca2:	bd10      	pop	{r4, pc}
    1ca4:	e000e018 	.word	0xe000e018
    1ca8:	e000e010 	.word	0xe000e010
    1cac:	e000e014 	.word	0xe000e014

00001cb0 <xPortStartScheduler>:
xPortStartScheduler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    1cb0:	4b33      	ldr	r3, [pc, #204]	; (1d80 <xPortStartScheduler+0xd0>)
    1cb2:	4a34      	ldr	r2, [pc, #208]	; (1d84 <xPortStartScheduler+0xd4>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:300
{
    1cb4:	b513      	push	{r0, r1, r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    1cb6:	6819      	ldr	r1, [r3, #0]
    1cb8:	4291      	cmp	r1, r2
    1cba:	d105      	bne.n	1cc8 <xPortStartScheduler+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 1)
    1cbc:	4932      	ldr	r1, [pc, #200]	; (1d88 <xPortStartScheduler+0xd8>)
    1cbe:	f44f 709a 	mov.w	r0, #308	; 0x134
    1cc2:	f7ff fce5 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 2)
    1cc6:	e7fe      	b.n	1cc6 <xPortStartScheduler+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
    1cc8:	681a      	ldr	r2, [r3, #0]
    1cca:	4b30      	ldr	r3, [pc, #192]	; (1d8c <xPortStartScheduler+0xdc>)
    1ccc:	429a      	cmp	r2, r3
    1cce:	d105      	bne.n	1cdc <xPortStartScheduler+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 1)
    1cd0:	492f      	ldr	r1, [pc, #188]	; (1d90 <xPortStartScheduler+0xe0>)
    1cd2:	f240 1035 	movw	r0, #309	; 0x135
    1cd6:	f7ff fcdb 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 3)
    1cda:	e7fe      	b.n	1cda <xPortStartScheduler+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:323
		ulOriginalPriority = *pucFirstUserPriorityRegister;
    1cdc:	4b2d      	ldr	r3, [pc, #180]	; (1d94 <xPortStartScheduler+0xe4>)
    1cde:	781a      	ldrb	r2, [r3, #0]
    1ce0:	b2d2      	uxtb	r2, r2
    1ce2:	9201      	str	r2, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:327
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
    1ce4:	22ff      	movs	r2, #255	; 0xff
    1ce6:	701a      	strb	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    1ce8:	781b      	ldrb	r3, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    1cea:	4a2b      	ldr	r2, [pc, #172]	; (1d98 <xPortStartScheduler+0xe8>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    1cec:	b2db      	uxtb	r3, r3
    1cee:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    1cf2:	f89d 3003 	ldrb.w	r3, [sp, #3]
    1cf6:	f003 0318 	and.w	r3, r3, #24
    1cfa:	7013      	strb	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:337
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
    1cfc:	4a27      	ldr	r2, [pc, #156]	; (1d9c <xPortStartScheduler+0xec>)
    1cfe:	2307      	movs	r3, #7
    1d00:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:338
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
    1d02:	2100      	movs	r1, #0
    1d04:	f89d 0003 	ldrb.w	r0, [sp, #3]
    1d08:	0600      	lsls	r0, r0, #24
    1d0a:	f103 34ff 	add.w	r4, r3, #4294967295	; 0xffffffff
    1d0e:	d409      	bmi.n	1d24 <xPortStartScheduler+0x74>
    1d10:	b111      	cbz	r1, 1d18 <xPortStartScheduler+0x68>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
    1d12:	2b02      	cmp	r3, #2
    1d14:	6013      	str	r3, [r2, #0]
    1d16:	d00e      	beq.n	1d36 <xPortStartScheduler+0x86>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 1)
    1d18:	4921      	ldr	r1, [pc, #132]	; (1da0 <xPortStartScheduler+0xf0>)
    1d1a:	f240 105d 	movw	r0, #349	; 0x15d
    1d1e:	f7ff fcb7 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 4)
    1d22:	e7fe      	b.n	1d22 <xPortStartScheduler+0x72>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:341
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
    1d24:	f89d 3003 	ldrb.w	r3, [sp, #3]
    1d28:	005b      	lsls	r3, r3, #1
    1d2a:	b2db      	uxtb	r3, r3
    1d2c:	f88d 3003 	strb.w	r3, [sp, #3]
    1d30:	2101      	movs	r1, #1
    1d32:	4623      	mov	r3, r4
    1d34:	e7e6      	b.n	1d04 <xPortStartScheduler+0x54>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:365
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
    1d36:	f44f 7300 	mov.w	r3, #512	; 0x200
    1d3a:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:369
		*pucFirstUserPriorityRegister = ulOriginalPriority;
    1d3c:	9b01      	ldr	r3, [sp, #4]
    1d3e:	4a15      	ldr	r2, [pc, #84]	; (1d94 <xPortStartScheduler+0xe4>)
    1d40:	b2db      	uxtb	r3, r3
    1d42:	7013      	strb	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:374
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    1d44:	4b17      	ldr	r3, [pc, #92]	; (1da4 <xPortStartScheduler+0xf4>)
    1d46:	681a      	ldr	r2, [r3, #0]
    1d48:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
    1d4c:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:375
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    1d4e:	681a      	ldr	r2, [r3, #0]
    1d50:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
    1d54:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	vPortSetupTimerInterrupt();
    1d56:	f7ff ff93 	bl	1c80 <vPortSetupTimerInterrupt>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:382
	uxCriticalNesting = 0;
    1d5a:	4b13      	ldr	r3, [pc, #76]	; (1da8 <xPortStartScheduler+0xf8>)
    1d5c:	2400      	movs	r4, #0
    1d5e:	601c      	str	r4, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:385
	vPortEnableVFP();
    1d60:	f7ff febc 	bl	1adc <vPortEnableVFP>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    1d64:	4a11      	ldr	r2, [pc, #68]	; (1dac <xPortStartScheduler+0xfc>)
    1d66:	6813      	ldr	r3, [r2, #0]
    1d68:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    1d6c:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:391
	prvPortStartFirstTask();
    1d6e:	f7ff fea1 	bl	1ab4 <prvPortStartFirstTask>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:399
	vTaskSwitchContext();
    1d72:	f001 f823 	bl	2dbc <vTaskSwitchContext>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:400
	prvTaskExitError();
    1d76:	f7ff febb 	bl	1af0 <prvTaskExitError>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:404
}
    1d7a:	4620      	mov	r0, r4
    1d7c:	b002      	add	sp, #8
    1d7e:	bd10      	pop	{r4, pc}
    1d80:	e000ed00 	.word	0xe000ed00
    1d84:	410fc271 	.word	0x410fc271
    1d88:	0000ab6f 	.word	0x0000ab6f
    1d8c:	410fc270 	.word	0x410fc270
    1d90:	0000ab92 	.word	0x0000ab92
    1d94:	e000e400 	.word	0xe000e400
    1d98:	1000116c 	.word	0x1000116c
    1d9c:	10001170 	.word	0x10001170
    1da0:	0000abb5 	.word	0x0000abb5
    1da4:	e000ed20 	.word	0xe000ed20
    1da8:	10001174 	.word	0x10001174
    1dac:	e000ef34 	.word	0xe000ef34

00001db0 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:730
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
    1db0:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:735
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
    1db2:	f3ef 8305 	mrs	r3, IPSR
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:738

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
    1db6:	2b0f      	cmp	r3, #15
    1db8:	d90b      	bls.n	1dd2 <vPortValidateInterruptPriority+0x22>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:741
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
    1dba:	4a0d      	ldr	r2, [pc, #52]	; (1df0 <vPortValidateInterruptPriority+0x40>)
    1dbc:	5c9b      	ldrb	r3, [r3, r2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
    1dbe:	4a0d      	ldr	r2, [pc, #52]	; (1df4 <vPortValidateInterruptPriority+0x44>)
    1dc0:	7812      	ldrb	r2, [r2, #0]
    1dc2:	429a      	cmp	r2, r3
    1dc4:	d905      	bls.n	1dd2 <vPortValidateInterruptPriority+0x22>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:766 (discriminator 1)
    1dc6:	490c      	ldr	r1, [pc, #48]	; (1df8 <vPortValidateInterruptPriority+0x48>)
    1dc8:	f240 20fe 	movw	r0, #766	; 0x2fe
    1dcc:	f7ff fc60 	bl	1690 <configASSERT_callback>
    1dd0:	e7fe      	b.n	1dd0 <vPortValidateInterruptPriority+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
    1dd2:	4b0a      	ldr	r3, [pc, #40]	; (1dfc <vPortValidateInterruptPriority+0x4c>)
    1dd4:	4a0a      	ldr	r2, [pc, #40]	; (1e00 <vPortValidateInterruptPriority+0x50>)
    1dd6:	681b      	ldr	r3, [r3, #0]
    1dd8:	6812      	ldr	r2, [r2, #0]
    1dda:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    1dde:	4293      	cmp	r3, r2
    1de0:	d905      	bls.n	1dee <vPortValidateInterruptPriority+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 1)
    1de2:	4908      	ldr	r1, [pc, #32]	; (1e04 <vPortValidateInterruptPriority+0x54>)
    1de4:	f240 300e 	movw	r0, #782	; 0x30e
    1de8:	f7ff fc52 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 2)
    1dec:	e7fe      	b.n	1dec <vPortValidateInterruptPriority+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:783
	}
    1dee:	bd08      	pop	{r3, pc}
    1df0:	e000e3f0 	.word	0xe000e3f0
    1df4:	1000116c 	.word	0x1000116c
    1df8:	0000ab03 	.word	0x0000ab03
    1dfc:	e000ed0c 	.word	0xe000ed0c
    1e00:	10001170 	.word	0x10001170
    1e04:	0000ab2d 	.word	0x0000ab2d

00001e08 <pvPortMalloc>:
pvPortMalloc():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    1e08:	b510      	push	{r4, lr}
    1e0a:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:62
void *pvReturn;

	vTaskSuspendAll();
    1e0c:	f000 fea2 	bl	2b54 <vTaskSuspendAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:64
	{
		pvReturn = malloc( xWantedSize );
    1e10:	4620      	mov	r0, r4
    1e12:	f002 fa19 	bl	4248 <malloc>
    1e16:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    1e18:	f000 ff36 	bl	2c88 <xTaskResumeAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
    1e1c:	b90c      	cbnz	r4, 1e22 <pvPortMalloc+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
    1e1e:	f7ff fc27 	bl	1670 <vApplicationMallocFailedHook>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:80
		}
	}
	#endif

	return pvReturn;
}
    1e22:	4620      	mov	r0, r4
    1e24:	bd10      	pop	{r4, pc}

00001e26 <vPortFree>:
vPortFree():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    1e26:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:85
	if( pv )
    1e28:	4604      	mov	r4, r0
    1e2a:	b140      	cbz	r0, 1e3e <vPortFree+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:87
	{
		vTaskSuspendAll();
    1e2c:	f000 fe92 	bl	2b54 <vTaskSuspendAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:89
		{
			free( pv );
    1e30:	4620      	mov	r0, r4
    1e32:	f002 fa11 	bl	4258 <free>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
    1e36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:92
		( void ) xTaskResumeAll();
    1e3a:	f000 bf25 	b.w	2c88 <xTaskResumeAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
}
    1e3e:	bd10      	pop	{r4, pc}

00001e40 <vListInitialise>:
vListInitialise():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    1e40:	f100 0308 	add.w	r3, r0, #8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
    1e44:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    1e48:	6043      	str	r3, [r0, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    1e4a:	e9c0 2302 	strd	r2, r3, [r0, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    1e4e:	6103      	str	r3, [r0, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
    1e50:	2300      	movs	r3, #0
    1e52:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
    1e54:	4770      	bx	lr

00001e56 <vListInitialiseItem>:
vListInitialiseItem():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
    1e56:	2300      	movs	r3, #0
    1e58:	6103      	str	r3, [r0, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
    1e5a:	4770      	bx	lr

00001e5c <vListInsertEnd>:
vListInsertEnd():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
    1e5c:	6843      	ldr	r3, [r0, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
    1e5e:	604b      	str	r3, [r1, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
    1e60:	689a      	ldr	r2, [r3, #8]
    1e62:	608a      	str	r2, [r1, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
    1e64:	689a      	ldr	r2, [r3, #8]
    1e66:	6051      	str	r1, [r2, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
    1e68:	6099      	str	r1, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    1e6a:	6803      	ldr	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
    1e6c:	6108      	str	r0, [r1, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
    1e6e:	3301      	adds	r3, #1
    1e70:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:100
}
    1e72:	4770      	bx	lr

00001e74 <vListInsert>:
vListInsert():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
    1e74:	680a      	ldr	r2, [r1, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
    1e76:	1c53      	adds	r3, r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:104
{
    1e78:	b530      	push	{r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
    1e7a:	d10a      	bne.n	1e92 <vListInsert+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
    1e7c:	6903      	ldr	r3, [r0, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
    1e7e:	685a      	ldr	r2, [r3, #4]
    1e80:	604a      	str	r2, [r1, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
    1e82:	6091      	str	r1, [r2, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
    1e84:	608b      	str	r3, [r1, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
    1e86:	6059      	str	r1, [r3, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    1e88:	6803      	ldr	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
    1e8a:	6108      	str	r0, [r1, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
    1e8c:	3301      	adds	r3, #1
    1e8e:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:167
}
    1e90:	bd30      	pop	{r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
    1e92:	f100 0308 	add.w	r3, r0, #8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:150 (discriminator 1)
    1e96:	685c      	ldr	r4, [r3, #4]
    1e98:	6825      	ldr	r5, [r4, #0]
    1e9a:	4295      	cmp	r5, r2
    1e9c:	d8ef      	bhi.n	1e7e <vListInsert+0xa>
    1e9e:	4623      	mov	r3, r4
    1ea0:	e7f9      	b.n	1e96 <vListInsert+0x22>

00001ea2 <uxListRemove>:
uxListRemove():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    1ea2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
    1ea6:	6903      	ldr	r3, [r0, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    1ea8:	608a      	str	r2, [r1, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    1eaa:	6051      	str	r1, [r2, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
    1eac:	6859      	ldr	r1, [r3, #4]
    1eae:	4281      	cmp	r1, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    1eb0:	bf08      	it	eq
    1eb2:	605a      	streq	r2, [r3, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
    1eb4:	2200      	movs	r2, #0
    1eb6:	6102      	str	r2, [r0, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
    1eb8:	681a      	ldr	r2, [r3, #0]
    1eba:	3a01      	subs	r2, #1
    1ebc:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
    1ebe:	6818      	ldr	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/list.c:196
}
    1ec0:	4770      	bx	lr

00001ec2 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
    1ec2:	b510      	push	{r4, lr}
    1ec4:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
    1ec6:	f7ff fe5d 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
    1eca:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    1ecc:	f7ff fe7c 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2305

	return xReturn;
}
    1ed0:	fab4 f084 	clz	r0, r4
    1ed4:	0940      	lsrs	r0, r0, #5
    1ed6:	bd10      	pop	{r4, pc}

00001ed8 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    1ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1eda:	4615      	mov	r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    1edc:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    1ede:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
    1ee0:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    1ee2:	b952      	cbnz	r2, 1efa <prvCopyDataToQueue+0x22>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    1ee4:	6807      	ldr	r7, [r0, #0]
    1ee6:	bb47      	cbnz	r7, 1f3a <prvCopyDataToQueue+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    1ee8:	6880      	ldr	r0, [r0, #8]
    1eea:	f001 f8cb 	bl	3084 <xTaskPriorityDisinherit>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
    1eee:	60a7      	str	r7, [r4, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    1ef0:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    1ef2:	3601      	adds	r6, #1
    1ef4:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2146
}
    1ef6:	4628      	mov	r0, r5
    1ef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
    1efa:	b965      	cbnz	r5, 1f16 <prvCopyDataToQueue+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    1efc:	6840      	ldr	r0, [r0, #4]
    1efe:	f002 f9b3 	bl	4268 <memcpy>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    1f02:	6863      	ldr	r3, [r4, #4]
    1f04:	6c22      	ldr	r2, [r4, #64]	; 0x40
    1f06:	4413      	add	r3, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    1f08:	68a2      	ldr	r2, [r4, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    1f0a:	6063      	str	r3, [r4, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    1f0c:	4293      	cmp	r3, r2
    1f0e:	d3f0      	bcc.n	1ef2 <prvCopyDataToQueue+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
    1f10:	6823      	ldr	r3, [r4, #0]
    1f12:	6063      	str	r3, [r4, #4]
    1f14:	e7ed      	b.n	1ef2 <prvCopyDataToQueue+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
    1f16:	68c0      	ldr	r0, [r0, #12]
    1f18:	f002 f9a6 	bl	4268 <memcpy>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    1f1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
    1f1e:	68e2      	ldr	r2, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    1f20:	6821      	ldr	r1, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    1f22:	425b      	negs	r3, r3
    1f24:	441a      	add	r2, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    1f26:	428a      	cmp	r2, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    1f28:	60e2      	str	r2, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
    1f2a:	bf3e      	ittt	cc
    1f2c:	68a2      	ldrcc	r2, [r4, #8]
    1f2e:	189b      	addcc	r3, r3, r2
    1f30:	60e3      	strcc	r3, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
    1f32:	2d02      	cmp	r5, #2
    1f34:	d101      	bne.n	1f3a <prvCopyDataToQueue+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    1f36:	b116      	cbz	r6, 1f3e <prvCopyDataToQueue+0x66>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
    1f38:	3e01      	subs	r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
    1f3a:	2500      	movs	r5, #0
    1f3c:	e7d9      	b.n	1ef2 <prvCopyDataToQueue+0x1a>
    1f3e:	4635      	mov	r5, r6
    1f40:	e7d7      	b.n	1ef2 <prvCopyDataToQueue+0x1a>

00001f42 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    1f42:	4603      	mov	r3, r0
    1f44:	b410      	push	{r4}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    1f46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
    1f48:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    1f4a:	b162      	cbz	r2, 1f66 <prvCopyDataFromQueue+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    1f4c:	68d9      	ldr	r1, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    1f4e:	689c      	ldr	r4, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    1f50:	4411      	add	r1, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    1f52:	42a1      	cmp	r1, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    1f54:	60d9      	str	r1, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
    1f56:	bf24      	itt	cs
    1f58:	6819      	ldrcs	r1, [r3, #0]
    1f5a:	60d9      	strcs	r1, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    1f5c:	68d9      	ldr	r1, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    1f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    1f62:	f002 b981 	b.w	4268 <memcpy>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
    1f66:	f85d 4b04 	ldr.w	r4, [sp], #4
    1f6a:	4770      	bx	lr

00001f6c <prvUnlockQueue>:
prvUnlockQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2168
{
    1f6c:	b570      	push	{r4, r5, r6, lr}
    1f6e:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
    1f70:	f7ff fe08 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    1f74:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    1f78:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    1f7c:	b26d      	sxtb	r5, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
    1f7e:	2d00      	cmp	r5, #0
    1f80:	dc14      	bgt.n	1fac <prvUnlockQueue+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
    1f82:	23ff      	movs	r3, #255	; 0xff
    1f84:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
    1f88:	f7ff fe1e 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
    1f8c:	f7ff fdfa 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    1f90:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    1f94:	f104 0610 	add.w	r6, r4, #16
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    1f98:	b26d      	sxtb	r5, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
    1f9a:	2d00      	cmp	r5, #0
    1f9c:	dc12      	bgt.n	1fc4 <prvUnlockQueue+0x58>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
    1f9e:	23ff      	movs	r3, #255	; 0xff
    1fa0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2284
}
    1fa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
    1fa8:	f7ff be0e 	b.w	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2228
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    1fac:	6a63      	ldr	r3, [r4, #36]	; 0x24
    1fae:	2b00      	cmp	r3, #0
    1fb0:	d0e7      	beq.n	1f82 <prvUnlockQueue+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    1fb2:	4630      	mov	r0, r6
    1fb4:	f000 ff78 	bl	2ea8 <xTaskRemoveFromEventList>
    1fb8:	b108      	cbz	r0, 1fbe <prvUnlockQueue+0x52>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2234
						vTaskMissedYield();
    1fba:	f000 fffb 	bl	2fb4 <vTaskMissedYield>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2248
			--cTxLock;
    1fbe:	3d01      	subs	r5, #1
    1fc0:	b26d      	sxtb	r5, r5
    1fc2:	e7dc      	b.n	1f7e <prvUnlockQueue+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    1fc4:	6923      	ldr	r3, [r4, #16]
    1fc6:	2b00      	cmp	r3, #0
    1fc8:	d0e9      	beq.n	1f9e <prvUnlockQueue+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    1fca:	4630      	mov	r0, r6
    1fcc:	f000 ff6c 	bl	2ea8 <xTaskRemoveFromEventList>
    1fd0:	b108      	cbz	r0, 1fd6 <prvUnlockQueue+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
    1fd2:	f000 ffef 	bl	2fb4 <vTaskMissedYield>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2273
				--cRxLock;
    1fd6:	3d01      	subs	r5, #1
    1fd8:	b26d      	sxtb	r5, r5
    1fda:	e7de      	b.n	1f9a <prvUnlockQueue+0x2e>

00001fdc <xQueueGenericReset>:
xQueueGenericReset():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:256
{
    1fdc:	b538      	push	{r3, r4, r5, lr}
    1fde:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:259
	configASSERT( pxQueue );
    1fe0:	4604      	mov	r4, r0
    1fe2:	b928      	cbnz	r0, 1ff0 <xQueueGenericReset+0x14>
    1fe4:	491a      	ldr	r1, [pc, #104]	; (2050 <xQueueGenericReset+0x74>)
    1fe6:	f240 1003 	movw	r0, #259	; 0x103
    1fea:	f7ff fb51 	bl	1690 <configASSERT_callback>
    1fee:	e7fe      	b.n	1fee <xQueueGenericReset+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
    1ff0:	f7ff fdc8 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    1ff4:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
    1ff8:	6822      	ldr	r2, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
    1ffa:	6062      	str	r2, [r4, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    1ffc:	4343      	muls	r3, r0
    1ffe:	18d1      	adds	r1, r2, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2000:	1a1b      	subs	r3, r3, r0
    2002:	4413      	add	r3, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2004:	60a1      	str	r1, [r4, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2006:	60e3      	str	r3, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    2008:	2100      	movs	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    200a:	23ff      	movs	r3, #255	; 0xff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    200c:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    200e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
    2012:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
    2016:	b995      	cbnz	r5, 203e <xQueueGenericReset+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2018:	6923      	ldr	r3, [r4, #16]
    201a:	b163      	cbz	r3, 2036 <xQueueGenericReset+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    201c:	f104 0010 	add.w	r0, r4, #16
    2020:	f000 ff42 	bl	2ea8 <xTaskRemoveFromEventList>
    2024:	b138      	cbz	r0, 2036 <xQueueGenericReset+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
    2026:	4b0b      	ldr	r3, [pc, #44]	; (2054 <xQueueGenericReset+0x78>)
    2028:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    202c:	601a      	str	r2, [r3, #0]
    202e:	f3bf 8f4f 	dsb	sy
    2032:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
    2036:	f7ff fdc7 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:305
}
    203a:	2001      	movs	r0, #1
    203c:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
    203e:	f104 0010 	add.w	r0, r4, #16
    2042:	f7ff fefd 	bl	1e40 <vListInitialise>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
    2046:	f104 0024 	add.w	r0, r4, #36	; 0x24
    204a:	f7ff fef9 	bl	1e40 <vListInitialise>
    204e:	e7f2      	b.n	2036 <xQueueGenericReset+0x5a>
    2050:	0000acbb 	.word	0x0000acbb
    2054:	e000ed04 	.word	0xe000ed04

00002058 <xQueueGenericCreateStatic>:
xQueueGenericCreateStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:311
	{
    2058:	b513      	push	{r0, r1, r4, lr}
    205a:	461c      	mov	r4, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:314
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    205c:	b928      	cbnz	r0, 206a <xQueueGenericCreateStatic+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:314 (discriminator 1)
    205e:	491c      	ldr	r1, [pc, #112]	; (20d0 <xQueueGenericCreateStatic+0x78>)
    2060:	f44f 709d 	mov.w	r0, #314	; 0x13a
    2064:	f7ff fb14 	bl	1690 <configASSERT_callback>
    2068:	e7fe      	b.n	2068 <xQueueGenericCreateStatic+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318
		configASSERT( pxStaticQueue != NULL );
    206a:	b92b      	cbnz	r3, 2078 <xQueueGenericCreateStatic+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 1)
    206c:	4919      	ldr	r1, [pc, #100]	; (20d4 <xQueueGenericCreateStatic+0x7c>)
    206e:	f44f 709f 	mov.w	r0, #318	; 0x13e
    2072:	f7ff fb0d 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:318 (discriminator 2)
    2076:	e7fe      	b.n	2076 <xQueueGenericCreateStatic+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
    2078:	b132      	cbz	r2, 2088 <xQueueGenericCreateStatic+0x30>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 1)
    207a:	b961      	cbnz	r1, 2096 <xQueueGenericCreateStatic+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 2)
    207c:	4916      	ldr	r1, [pc, #88]	; (20d8 <xQueueGenericCreateStatic+0x80>)
    207e:	f44f 70a1 	mov.w	r0, #322	; 0x142
    2082:	f7ff fb05 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:322 (discriminator 3)
    2086:	e7fe      	b.n	2086 <xQueueGenericCreateStatic+0x2e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:323 (discriminator 1)
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
    2088:	b129      	cbz	r1, 2096 <xQueueGenericCreateStatic+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:323
    208a:	4914      	ldr	r1, [pc, #80]	; (20dc <xQueueGenericCreateStatic+0x84>)
    208c:	f240 1043 	movw	r0, #323	; 0x143
    2090:	f7ff fafe 	bl	1690 <configASSERT_callback>
    2094:	e7fe      	b.n	2094 <xQueueGenericCreateStatic+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:330
			volatile size_t xSize = sizeof( StaticQueue_t );
    2096:	2348      	movs	r3, #72	; 0x48
    2098:	9301      	str	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331
			configASSERT( xSize == sizeof( Queue_t ) );
    209a:	9b01      	ldr	r3, [sp, #4]
    209c:	2b48      	cmp	r3, #72	; 0x48
    209e:	d005      	beq.n	20ac <xQueueGenericCreateStatic+0x54>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 1)
    20a0:	490f      	ldr	r1, [pc, #60]	; (20e0 <xQueueGenericCreateStatic+0x88>)
    20a2:	f240 104b 	movw	r0, #331	; 0x14b
    20a6:	f7ff faf3 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:331 (discriminator 5)
    20aa:	e7fe      	b.n	20aa <xQueueGenericCreateStatic+0x52>
prvInitialiseNewQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    20ac:	2900      	cmp	r1, #0
    20ae:	bf08      	it	eq
    20b0:	4622      	moveq	r2, r4
xQueueGenericCreateStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:332
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
    20b2:	9b01      	ldr	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    20b4:	6022      	str	r2, [r4, #0]
    20b6:	2301      	movs	r3, #1
prvInitialiseNewQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    20b8:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
xQueueGenericCreateStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    20bc:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
prvInitialiseNewQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    20c0:	4619      	mov	r1, r3
    20c2:	4620      	mov	r0, r4
    20c4:	f7ff ff8a 	bl	1fdc <xQueueGenericReset>
xQueueGenericCreateStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:361
	}
    20c8:	4620      	mov	r0, r4
    20ca:	b002      	add	sp, #8
    20cc:	bd10      	pop	{r4, pc}
    20ce:	bf00      	nop
    20d0:	0000abf8 	.word	0x0000abf8
    20d4:	0000ac1a 	.word	0x0000ac1a
    20d8:	0000ac30 	.word	0x0000ac30
    20dc:	0000ac68 	.word	0x0000ac68
    20e0:	0000aca0 	.word	0x0000aca0

000020e4 <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
    20e4:	b570      	push	{r4, r5, r6, lr}
    20e6:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    20e8:	4606      	mov	r6, r0
    20ea:	b928      	cbnz	r0, 20f8 <xQueueGenericCreate+0x14>
    20ec:	490e      	ldr	r1, [pc, #56]	; (2128 <xQueueGenericCreate+0x44>)
    20ee:	f44f 70bb 	mov.w	r0, #374	; 0x176
    20f2:	f7ff facd 	bl	1690 <configASSERT_callback>
    20f6:	e7fe      	b.n	20f6 <xQueueGenericCreate+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    20f8:	4348      	muls	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
    20fa:	3048      	adds	r0, #72	; 0x48
    20fc:	f7ff fe84 	bl	1e08 <pvPortMalloc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
    2100:	4604      	mov	r4, r0
    2102:	b160      	cbz	r0, 211e <xQueueGenericCreate+0x3a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:411
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
    2104:	2300      	movs	r3, #0
    2106:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
prvInitialiseNewQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    210a:	b155      	cbz	r5, 2122 <xQueueGenericCreate+0x3e>
xQueueGenericCreate():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    210c:	f100 0348 	add.w	r3, r0, #72	; 0x48
prvInitialiseNewQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
    2110:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    2112:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    2116:	2101      	movs	r1, #1
    2118:	4620      	mov	r0, r4
    211a:	f7ff ff5f 	bl	1fdc <xQueueGenericReset>
xQueueGenericCreate():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:424
	}
    211e:	4620      	mov	r0, r4
    2120:	bd70      	pop	{r4, r5, r6, pc}
prvInitialiseNewQueue():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2122:	4603      	mov	r3, r0
    2124:	e7f4      	b.n	2110 <xQueueGenericCreate+0x2c>
    2126:	bf00      	nop
    2128:	0000abf8 	.word	0x0000abf8

0000212c <xQueueGenericSend>:
xQueueGenericSend():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
    212c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    2130:	4688      	mov	r8, r1
    2132:	9201      	str	r2, [sp, #4]
    2134:	461f      	mov	r7, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:753
	configASSERT( pxQueue );
    2136:	4604      	mov	r4, r0
    2138:	b928      	cbnz	r0, 2146 <xQueueGenericSend+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:753 (discriminator 1)
    213a:	494e      	ldr	r1, [pc, #312]	; (2274 <xQueueGenericSend+0x148>)
    213c:	f240 20f1 	movw	r0, #753	; 0x2f1
    2140:	f7ff faa6 	bl	1690 <configASSERT_callback>
    2144:	e7fe      	b.n	2144 <xQueueGenericSend+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2146:	b939      	cbnz	r1, 2158 <xQueueGenericSend+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 1)
    2148:	6c03      	ldr	r3, [r0, #64]	; 0x40
    214a:	b12b      	cbz	r3, 2158 <xQueueGenericSend+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 2)
    214c:	494a      	ldr	r1, [pc, #296]	; (2278 <xQueueGenericSend+0x14c>)
    214e:	f240 20f2 	movw	r0, #754	; 0x2f2
    2152:	f7ff fa9d 	bl	1690 <configASSERT_callback>
    2156:	e7fe      	b.n	2156 <xQueueGenericSend+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2158:	2f02      	cmp	r7, #2
    215a:	d108      	bne.n	216e <xQueueGenericSend+0x42>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 1)
    215c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    215e:	2b01      	cmp	r3, #1
    2160:	d005      	beq.n	216e <xQueueGenericSend+0x42>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 2)
    2162:	4946      	ldr	r1, [pc, #280]	; (227c <xQueueGenericSend+0x150>)
    2164:	f240 20f3 	movw	r0, #755	; 0x2f3
    2168:	f7ff fa92 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 3)
    216c:	e7fe      	b.n	216c <xQueueGenericSend+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    216e:	f000 ff27 	bl	2fc0 <xTaskGetSchedulerState>
    2172:	4606      	mov	r6, r0
    2174:	b938      	cbnz	r0, 2186 <xQueueGenericSend+0x5a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 1)
    2176:	9b01      	ldr	r3, [sp, #4]
    2178:	b133      	cbz	r3, 2188 <xQueueGenericSend+0x5c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 2)
    217a:	4941      	ldr	r1, [pc, #260]	; (2280 <xQueueGenericSend+0x154>)
    217c:	f240 20f6 	movw	r0, #758	; 0x2f6
    2180:	f7ff fa86 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 4)
    2184:	e7fe      	b.n	2184 <xQueueGenericSend+0x58>
    2186:	2600      	movs	r6, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    2188:	f04f 0900 	mov.w	r9, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    218c:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 2284 <xQueueGenericSend+0x158>
    2190:	e037      	b.n	2202 <xQueueGenericSend+0xd6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
    2192:	9d01      	ldr	r5, [sp, #4]
    2194:	b91d      	cbnz	r5, 219e <xQueueGenericSend+0x72>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
    2196:	f7ff fd17 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
    219a:	2000      	movs	r0, #0
    219c:	e050      	b.n	2240 <xQueueGenericSend+0x114>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
    219e:	b916      	cbnz	r6, 21a6 <xQueueGenericSend+0x7a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
    21a0:	a802      	add	r0, sp, #8
    21a2:	f000 fec1 	bl	2f28 <vTaskInternalSetTimeOutState>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
    21a6:	f7ff fd0f 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
    21aa:	f000 fcd3 	bl	2b54 <vTaskSuspendAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    21ae:	f7ff fce9 	bl	1b84 <vPortEnterCritical>
    21b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    21b6:	2bff      	cmp	r3, #255	; 0xff
    21b8:	bf08      	it	eq
    21ba:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
    21be:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    21c2:	2bff      	cmp	r3, #255	; 0xff
    21c4:	bf08      	it	eq
    21c6:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
    21ca:	f7ff fcfd 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    21ce:	a901      	add	r1, sp, #4
    21d0:	a802      	add	r0, sp, #8
    21d2:	f000 feb5 	bl	2f40 <xTaskCheckForTimeOut>
    21d6:	2800      	cmp	r0, #0
    21d8:	d146      	bne.n	2268 <xQueueGenericSend+0x13c>
prvIsQueueFull():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2331

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
    21da:	f7ff fcd3 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2333
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
    21de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    21e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    21e2:	429a      	cmp	r2, r3
    21e4:	d12f      	bne.n	2246 <xQueueGenericSend+0x11a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2342
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    21e6:	f7ff fcef 	bl	1bc8 <vPortExitCritical>
xQueueGenericSend():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
    21ea:	9901      	ldr	r1, [sp, #4]
    21ec:	f104 0010 	add.w	r0, r4, #16
    21f0:	f000 fe42 	bl	2e78 <vTaskPlaceOnEventList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
    21f4:	4620      	mov	r0, r4
    21f6:	f7ff feb9 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
    21fa:	f000 fd45 	bl	2c88 <xTaskResumeAll>
    21fe:	b350      	cbz	r0, 2256 <xQueueGenericSend+0x12a>
    2200:	2601      	movs	r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
    2202:	f7ff fcbf 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2206:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2208:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    220a:	429a      	cmp	r2, r3
    220c:	d301      	bcc.n	2212 <xQueueGenericSend+0xe6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:774 (discriminator 1)
    220e:	2f02      	cmp	r7, #2
    2210:	d1bf      	bne.n	2192 <xQueueGenericSend+0x66>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:840
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2212:	463a      	mov	r2, r7
    2214:	4641      	mov	r1, r8
    2216:	4620      	mov	r0, r4
    2218:	f7ff fe5e 	bl	1ed8 <prvCopyDataToQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:844
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    221c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    221e:	b11b      	cbz	r3, 2228 <xQueueGenericSend+0xfc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:846
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2220:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2224:	f000 fe40 	bl	2ea8 <xTaskRemoveFromEventList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:859
					else if( xYieldRequired != pdFALSE )
    2228:	b138      	cbz	r0, 223a <xQueueGenericSend+0x10e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:865
						queueYIELD_IF_USING_PREEMPTION();
    222a:	4b16      	ldr	r3, [pc, #88]	; (2284 <xQueueGenericSend+0x158>)
    222c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2230:	601a      	str	r2, [r3, #0]
    2232:	f3bf 8f4f 	dsb	sy
    2236:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
    223a:	f7ff fcc5 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:875
				return pdPASS;
    223e:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:954
}
    2240:	b004      	add	sp, #16
    2242:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
    2246:	f7ff fcbf 	bl	1bc8 <vPortExitCritical>
xQueueGenericSend():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
    224a:	4620      	mov	r0, r4
    224c:	f7ff fe8e 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
    2250:	f000 fd1a 	bl	2c88 <xTaskResumeAll>
    2254:	e7d4      	b.n	2200 <xQueueGenericSend+0xd4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2256:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    225a:	f8ca 3000 	str.w	r3, [sl]
    225e:	f3bf 8f4f 	dsb	sy
    2262:	f3bf 8f6f 	isb	sy
    2266:	e7cb      	b.n	2200 <xQueueGenericSend+0xd4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
    2268:	4620      	mov	r0, r4
    226a:	f7ff fe7f 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
    226e:	f000 fd0b 	bl	2c88 <xTaskResumeAll>
    2272:	e792      	b.n	219a <xQueueGenericSend+0x6e>
    2274:	0000acbb 	.word	0x0000acbb
    2278:	0000acc3 	.word	0x0000acc3
    227c:	0000ad13 	.word	0x0000ad13
    2280:	0000ad5a 	.word	0x0000ad5a
    2284:	e000ed04 	.word	0xe000ed04

00002288 <xQueueCreateMutexStatic>:
xQueueCreateMutexStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:520
	{
    2288:	b513      	push	{r0, r1, r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:528
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
    228a:	2200      	movs	r2, #0
    228c:	9000      	str	r0, [sp, #0]
    228e:	460b      	mov	r3, r1
    2290:	2001      	movs	r0, #1
    2292:	4611      	mov	r1, r2
    2294:	f7ff fee0 	bl	2058 <xQueueGenericCreateStatic>
prvInitialiseMutex():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    2298:	4604      	mov	r4, r0
    229a:	b138      	cbz	r0, 22ac <xQueueCreateMutexStatic+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    229c:	2300      	movs	r3, #0
    229e:	6083      	str	r3, [r0, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    22a0:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    22a2:	60c3      	str	r3, [r0, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    22a4:	461a      	mov	r2, r3
    22a6:	4619      	mov	r1, r3
    22a8:	f7ff ff40 	bl	212c <xQueueGenericSend>
xQueueCreateMutexStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:532
	}
    22ac:	4620      	mov	r0, r4
    22ae:	b002      	add	sp, #8
    22b0:	bd10      	pop	{r4, pc}

000022b2 <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:504
	{
    22b2:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:508
		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
    22b4:	4602      	mov	r2, r0
    22b6:	2100      	movs	r1, #0
    22b8:	2001      	movs	r0, #1
    22ba:	f7ff ff13 	bl	20e4 <xQueueGenericCreate>
prvInitialiseMutex():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    22be:	4604      	mov	r4, r0
    22c0:	b138      	cbz	r0, 22d2 <xQueueCreateMutex+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    22c2:	2300      	movs	r3, #0
    22c4:	6083      	str	r3, [r0, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    22c6:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    22c8:	60c3      	str	r3, [r0, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    22ca:	461a      	mov	r2, r3
    22cc:	4619      	mov	r1, r3
    22ce:	f7ff ff2d 	bl	212c <xQueueGenericSend>
xQueueCreateMutex():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:512
	}
    22d2:	4620      	mov	r0, r4
    22d4:	bd10      	pop	{r4, pc}
    22d6:	Address 0x00000000000022d6 is out of bounds.


000022d8 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:958
{
    22d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    22dc:	4689      	mov	r9, r1
    22de:	4690      	mov	r8, r2
    22e0:	461f      	mov	r7, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:963
	configASSERT( pxQueue );
    22e2:	4604      	mov	r4, r0
    22e4:	b928      	cbnz	r0, 22f2 <xQueueGenericSendFromISR+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:963 (discriminator 1)
    22e6:	4928      	ldr	r1, [pc, #160]	; (2388 <xQueueGenericSendFromISR+0xb0>)
    22e8:	f240 30c3 	movw	r0, #963	; 0x3c3
    22ec:	f7ff f9d0 	bl	1690 <configASSERT_callback>
    22f0:	e7fe      	b.n	22f0 <xQueueGenericSendFromISR+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    22f2:	b939      	cbnz	r1, 2304 <xQueueGenericSendFromISR+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 1)
    22f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
    22f6:	b12b      	cbz	r3, 2304 <xQueueGenericSendFromISR+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 2)
    22f8:	4924      	ldr	r1, [pc, #144]	; (238c <xQueueGenericSendFromISR+0xb4>)
    22fa:	f44f 7071 	mov.w	r0, #964	; 0x3c4
    22fe:	f7ff f9c7 	bl	1690 <configASSERT_callback>
    2302:	e7fe      	b.n	2302 <xQueueGenericSendFromISR+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2304:	2f02      	cmp	r7, #2
    2306:	d108      	bne.n	231a <xQueueGenericSendFromISR+0x42>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 1)
    2308:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    230a:	2b01      	cmp	r3, #1
    230c:	d005      	beq.n	231a <xQueueGenericSendFromISR+0x42>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 2)
    230e:	4920      	ldr	r1, [pc, #128]	; (2390 <xQueueGenericSendFromISR+0xb8>)
    2310:	f240 30c5 	movw	r0, #965	; 0x3c5
    2314:	f7ff f9bc 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 3)
    2318:	e7fe      	b.n	2318 <xQueueGenericSendFromISR+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    231a:	f7ff fd49 	bl	1db0 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    231e:	f3ef 8611 	mrs	r6, BASEPRI
    2322:	f04f 0318 	mov.w	r3, #24
    2326:	f383 8811 	msr	BASEPRI, r3
    232a:	f3bf 8f6f 	isb	sy
    232e:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2332:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2334:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2336:	429a      	cmp	r2, r3
    2338:	d301      	bcc.n	233e <xQueueGenericSendFromISR+0x66>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:990 (discriminator 1)
    233a:	2f02      	cmp	r7, #2
    233c:	d122      	bne.n	2384 <xQueueGenericSendFromISR+0xac>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    233e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2342:	463a      	mov	r2, r7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    2344:	b26d      	sxtb	r5, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2346:	4649      	mov	r1, r9
    2348:	4620      	mov	r0, r4
    234a:	f7ff fdc5 	bl	1ed8 <prvCopyDataToQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
    234e:	1c6b      	adds	r3, r5, #1
    2350:	d113      	bne.n	237a <xQueueGenericSendFromISR+0xa2>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1060
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2352:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2354:	b90b      	cbnz	r3, 235a <xQueueGenericSendFromISR+0x82>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
    2356:	2001      	movs	r0, #1
    2358:	e00b      	b.n	2372 <xQueueGenericSendFromISR+0x9a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1062
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    235a:	f104 0024 	add.w	r0, r4, #36	; 0x24
    235e:	f000 fda3 	bl	2ea8 <xTaskRemoveFromEventList>
    2362:	2800      	cmp	r0, #0
    2364:	d0f7      	beq.n	2356 <xQueueGenericSendFromISR+0x7e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1066
							if( pxHigherPriorityTaskWoken != NULL )
    2366:	f1b8 0f00 	cmp.w	r8, #0
    236a:	d0f4      	beq.n	2356 <xQueueGenericSendFromISR+0x7e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1068
								*pxHigherPriorityTaskWoken = pdTRUE;
    236c:	2001      	movs	r0, #1
    236e:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    2372:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1105
}
    2376:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    237a:	3501      	adds	r5, #1
    237c:	b26d      	sxtb	r5, r5
    237e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
    2382:	e7e8      	b.n	2356 <xQueueGenericSendFromISR+0x7e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
    2384:	2000      	movs	r0, #0
    2386:	e7f4      	b.n	2372 <xQueueGenericSendFromISR+0x9a>
    2388:	0000acbb 	.word	0x0000acbb
    238c:	0000acc3 	.word	0x0000acc3
    2390:	0000ad13 	.word	0x0000ad13

00002394 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1109
{
    2394:	b570      	push	{r4, r5, r6, lr}
    2396:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1120
	configASSERT( pxQueue );
    2398:	4604      	mov	r4, r0
    239a:	b928      	cbnz	r0, 23a8 <xQueueGiveFromISR+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1120 (discriminator 1)
    239c:	4923      	ldr	r1, [pc, #140]	; (242c <xQueueGiveFromISR+0x98>)
    239e:	f44f 608c 	mov.w	r0, #1120	; 0x460
    23a2:	f7ff f975 	bl	1690 <configASSERT_callback>
    23a6:	e7fe      	b.n	23a6 <xQueueGiveFromISR+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124
	configASSERT( pxQueue->uxItemSize == 0 );
    23a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
    23aa:	b12b      	cbz	r3, 23b8 <xQueueGiveFromISR+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 1)
    23ac:	4920      	ldr	r1, [pc, #128]	; (2430 <xQueueGiveFromISR+0x9c>)
    23ae:	f240 4064 	movw	r0, #1124	; 0x464
    23b2:	f7ff f96d 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1124 (discriminator 2)
    23b6:	e7fe      	b.n	23b6 <xQueueGiveFromISR+0x22>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
    23b8:	6803      	ldr	r3, [r0, #0]
    23ba:	b93b      	cbnz	r3, 23cc <xQueueGiveFromISR+0x38>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 1)
    23bc:	6883      	ldr	r3, [r0, #8]
    23be:	b12b      	cbz	r3, 23cc <xQueueGiveFromISR+0x38>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 2)
    23c0:	491c      	ldr	r1, [pc, #112]	; (2434 <xQueueGiveFromISR+0xa0>)
    23c2:	f240 4069 	movw	r0, #1129	; 0x469
    23c6:	f7ff f963 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1129 (discriminator 3)
    23ca:	e7fe      	b.n	23ca <xQueueGiveFromISR+0x36>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1145
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    23cc:	f7ff fcf0 	bl	1db0 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    23d0:	f3ef 8611 	mrs	r6, BASEPRI
    23d4:	f04f 0318 	mov.w	r3, #24
    23d8:	f383 8811 	msr	BASEPRI, r3
    23dc:	f3bf 8f6f 	isb	sy
    23e0:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1149
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    23e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1154
		if( uxMessagesWaiting < pxQueue->uxLength )
    23e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    23e8:	4293      	cmp	r3, r2
    23ea:	d91c      	bls.n	2426 <xQueueGiveFromISR+0x92>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    23ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    23f0:	3201      	adds	r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    23f2:	b25b      	sxtb	r3, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    23f4:	63a2      	str	r2, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1170
			if( cTxLock == queueUNLOCKED )
    23f6:	1c5a      	adds	r2, r3, #1
    23f8:	d110      	bne.n	241c <xQueueGiveFromISR+0x88>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1225
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    23fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
    23fc:	b90b      	cbnz	r3, 2402 <xQueueGiveFromISR+0x6e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1259
			xReturn = pdPASS;
    23fe:	2001      	movs	r0, #1
    2400:	e009      	b.n	2416 <xQueueGiveFromISR+0x82>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1227
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2402:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2406:	f000 fd4f 	bl	2ea8 <xTaskRemoveFromEventList>
    240a:	2800      	cmp	r0, #0
    240c:	d0f7      	beq.n	23fe <xQueueGiveFromISR+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1231
							if( pxHigherPriorityTaskWoken != NULL )
    240e:	2d00      	cmp	r5, #0
    2410:	d0f5      	beq.n	23fe <xQueueGiveFromISR+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1233
								*pxHigherPriorityTaskWoken = pdTRUE;
    2412:	2001      	movs	r0, #1
    2414:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    2416:	f386 8811 	msr	BASEPRI, r6
xQueueGiveFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1270
}
    241a:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1256
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    241c:	3301      	adds	r3, #1
    241e:	b25b      	sxtb	r3, r3
    2420:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
    2424:	e7eb      	b.n	23fe <xQueueGiveFromISR+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1264
			xReturn = errQUEUE_FULL;
    2426:	2000      	movs	r0, #0
    2428:	e7f5      	b.n	2416 <xQueueGiveFromISR+0x82>
    242a:	bf00      	nop
    242c:	0000acbb 	.word	0x0000acbb
    2430:	0000adb0 	.word	0x0000adb0
    2434:	0000adc9 	.word	0x0000adc9

00002438 <xQueueReceive>:
xQueueReceive():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1274
{
    2438:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    243c:	b085      	sub	sp, #20
    243e:	460f      	mov	r7, r1
    2440:	9201      	str	r2, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1280
	configASSERT( ( pxQueue ) );
    2442:	4604      	mov	r4, r0
    2444:	b928      	cbnz	r0, 2452 <xQueueReceive+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1280 (discriminator 1)
    2446:	4947      	ldr	r1, [pc, #284]	; (2564 <xQueueReceive+0x12c>)
    2448:	f44f 60a0 	mov.w	r0, #1280	; 0x500
    244c:	f7ff f920 	bl	1690 <configASSERT_callback>
    2450:	e7fe      	b.n	2450 <xQueueReceive+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2452:	b939      	cbnz	r1, 2464 <xQueueReceive+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 1)
    2454:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2456:	b12b      	cbz	r3, 2464 <xQueueReceive+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1284 (discriminator 2)
    2458:	4943      	ldr	r1, [pc, #268]	; (2568 <xQueueReceive+0x130>)
    245a:	f240 5004 	movw	r0, #1284	; 0x504
    245e:	f7ff f917 	bl	1690 <configASSERT_callback>
    2462:	e7fe      	b.n	2462 <xQueueReceive+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    2464:	f000 fdac 	bl	2fc0 <xTaskGetSchedulerState>
    2468:	4606      	mov	r6, r0
    246a:	b938      	cbnz	r0, 247c <xQueueReceive+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 1)
    246c:	9b01      	ldr	r3, [sp, #4]
    246e:	b133      	cbz	r3, 247e <xQueueReceive+0x46>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 2)
    2470:	493e      	ldr	r1, [pc, #248]	; (256c <xQueueReceive+0x134>)
    2472:	f240 5009 	movw	r0, #1289	; 0x509
    2476:	f7ff f90b 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1289 (discriminator 3)
    247a:	e7fe      	b.n	247a <xQueueReceive+0x42>
    247c:	2600      	movs	r6, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    247e:	f04f 0800 	mov.w	r8, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    2482:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 2570 <xQueueReceive+0x138>
    2486:	e03b      	b.n	2500 <xQueueReceive+0xc8>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1336
				if( xTicksToWait == ( TickType_t ) 0 )
    2488:	9d01      	ldr	r5, [sp, #4]
    248a:	b91d      	cbnz	r5, 2494 <xQueueReceive+0x5c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1340
					taskEXIT_CRITICAL();
    248c:	f7ff fb9c 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1403
				return errQUEUE_EMPTY;
    2490:	2000      	movs	r0, #0
    2492:	e052      	b.n	253a <xQueueReceive+0x102>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1344
				else if( xEntryTimeSet == pdFALSE )
    2494:	b916      	cbnz	r6, 249c <xQueueReceive+0x64>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1348
					vTaskInternalSetTimeOutState( &xTimeOut );
    2496:	a802      	add	r0, sp, #8
    2498:	f000 fd46 	bl	2f28 <vTaskInternalSetTimeOutState>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1358
		taskEXIT_CRITICAL();
    249c:	f7ff fb94 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1363
		vTaskSuspendAll();
    24a0:	f000 fb58 	bl	2b54 <vTaskSuspendAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    24a4:	f7ff fb6e 	bl	1b84 <vPortEnterCritical>
    24a8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    24ac:	2bff      	cmp	r3, #255	; 0xff
    24ae:	bf08      	it	eq
    24b0:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
    24b4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    24b8:	2bff      	cmp	r3, #255	; 0xff
    24ba:	bf08      	it	eq
    24bc:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
    24c0:	f7ff fb82 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1367
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    24c4:	a901      	add	r1, sp, #4
    24c6:	a802      	add	r0, sp, #8
    24c8:	f000 fd3a 	bl	2f40 <xTaskCheckForTimeOut>
    24cc:	2800      	cmp	r0, #0
    24ce:	d13d      	bne.n	254c <xQueueReceive+0x114>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1371
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    24d0:	4620      	mov	r0, r4
    24d2:	f7ff fcf6 	bl	1ec2 <prvIsQueueEmpty>
    24d6:	b398      	cbz	r0, 2540 <xQueueReceive+0x108>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1374
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    24d8:	9901      	ldr	r1, [sp, #4]
    24da:	f104 0024 	add.w	r0, r4, #36	; 0x24
    24de:	f000 fccb 	bl	2e78 <vTaskPlaceOnEventList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1375
				prvUnlockQueue( pxQueue );
    24e2:	4620      	mov	r0, r4
    24e4:	f7ff fd42 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1376
				if( xTaskResumeAll() == pdFALSE )
    24e8:	f000 fbce 	bl	2c88 <xTaskResumeAll>
    24ec:	b938      	cbnz	r0, 24fe <xQueueReceive+0xc6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    24ee:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    24f2:	f8c9 3000 	str.w	r3, [r9]
    24f6:	f3bf 8f4f 	dsb	sy
    24fa:	f3bf 8f6f 	isb	sy
    24fe:	2601      	movs	r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1299
		taskENTER_CRITICAL();
    2500:	f7ff fb40 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1301
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    2504:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1305
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2506:	2d00      	cmp	r5, #0
    2508:	d0be      	beq.n	2488 <xQueueReceive+0x50>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    250a:	4639      	mov	r1, r7
    250c:	4620      	mov	r0, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    250e:	3d01      	subs	r5, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    2510:	f7ff fd17 	bl	1f42 <prvCopyDataFromQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    2514:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1315
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2516:	6923      	ldr	r3, [r4, #16]
    2518:	b163      	cbz	r3, 2534 <xQueueReceive+0xfc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1317
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    251a:	f104 0010 	add.w	r0, r4, #16
    251e:	f000 fcc3 	bl	2ea8 <xTaskRemoveFromEventList>
    2522:	b138      	cbz	r0, 2534 <xQueueReceive+0xfc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1319
						queueYIELD_IF_USING_PREEMPTION();
    2524:	4b12      	ldr	r3, [pc, #72]	; (2570 <xQueueReceive+0x138>)
    2526:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    252a:	601a      	str	r2, [r3, #0]
    252c:	f3bf 8f4f 	dsb	sy
    2530:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1331
				taskEXIT_CRITICAL();
    2534:	f7ff fb48 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1332
				return pdPASS;
    2538:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1411
}
    253a:	b005      	add	sp, #20
    253c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1389
				prvUnlockQueue( pxQueue );
    2540:	4620      	mov	r0, r4
    2542:	f7ff fd13 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1390
				( void ) xTaskResumeAll();
    2546:	f000 fb9f 	bl	2c88 <xTaskResumeAll>
    254a:	e7d8      	b.n	24fe <xQueueReceive+0xc6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1397
			prvUnlockQueue( pxQueue );
    254c:	4620      	mov	r0, r4
    254e:	f7ff fd0d 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1398
			( void ) xTaskResumeAll();
    2552:	f000 fb99 	bl	2c88 <xTaskResumeAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1400
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    2556:	4620      	mov	r0, r4
    2558:	f7ff fcb3 	bl	1ec2 <prvIsQueueEmpty>
    255c:	2800      	cmp	r0, #0
    255e:	d0ce      	beq.n	24fe <xQueueReceive+0xc6>
    2560:	e796      	b.n	2490 <xQueueReceive+0x58>
    2562:	bf00      	nop
    2564:	0000ae30 	.word	0x0000ae30
    2568:	0000ae3c 	.word	0x0000ae3c
    256c:	0000ad5a 	.word	0x0000ad5a
    2570:	e000ed04 	.word	0xe000ed04

00002574 <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    2574:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    2578:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
    257a:	9101      	str	r1, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    257c:	b928      	cbnz	r0, 258a <xQueueSemaphoreTake+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1425 (discriminator 1)
    257e:	4958      	ldr	r1, [pc, #352]	; (26e0 <xQueueSemaphoreTake+0x16c>)
    2580:	f240 5091 	movw	r0, #1425	; 0x591
    2584:	f7ff f884 	bl	1690 <configASSERT_callback>
    2588:	e7fe      	b.n	2588 <xQueueSemaphoreTake+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429
	configASSERT( pxQueue->uxItemSize == 0 );
    258a:	6c05      	ldr	r5, [r0, #64]	; 0x40
    258c:	b12d      	cbz	r5, 259a <xQueueSemaphoreTake+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 1)
    258e:	4955      	ldr	r1, [pc, #340]	; (26e4 <xQueueSemaphoreTake+0x170>)
    2590:	f240 5095 	movw	r0, #1429	; 0x595
    2594:	f7ff f87c 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1429 (discriminator 2)
    2598:	e7fe      	b.n	2598 <xQueueSemaphoreTake+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    259a:	f000 fd11 	bl	2fc0 <xTaskGetSchedulerState>
    259e:	4606      	mov	r6, r0
    25a0:	b938      	cbnz	r0, 25b2 <xQueueSemaphoreTake+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 1)
    25a2:	9b01      	ldr	r3, [sp, #4]
    25a4:	b153      	cbz	r3, 25bc <xQueueSemaphoreTake+0x48>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 2)
    25a6:	4950      	ldr	r1, [pc, #320]	; (26e8 <xQueueSemaphoreTake+0x174>)
    25a8:	f240 509a 	movw	r0, #1434	; 0x59a
    25ac:	f7ff f870 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1434 (discriminator 3)
    25b0:	e7fe      	b.n	25b0 <xQueueSemaphoreTake+0x3c>
    25b2:	462e      	mov	r6, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    25b4:	2700      	movs	r7, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    25b6:	f8df 8138 	ldr.w	r8, [pc, #312]	; 26f0 <xQueueSemaphoreTake+0x17c>
    25ba:	e04e      	b.n	265a <xQueueSemaphoreTake+0xe6>
    25bc:	4605      	mov	r5, r0
    25be:	e7f9      	b.n	25b4 <xQueueSemaphoreTake+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
    25c0:	9b01      	ldr	r3, [sp, #4]
    25c2:	b94b      	cbnz	r3, 25d8 <xQueueSemaphoreTake+0x64>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505
						configASSERT( xInheritanceOccurred == pdFALSE );
    25c4:	b12d      	cbz	r5, 25d2 <xQueueSemaphoreTake+0x5e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 1)
    25c6:	4949      	ldr	r1, [pc, #292]	; (26ec <xQueueSemaphoreTake+0x178>)
    25c8:	f240 50e1 	movw	r0, #1505	; 0x5e1
    25cc:	f7ff f860 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1505 (discriminator 4)
    25d0:	e7fe      	b.n	25d0 <xQueueSemaphoreTake+0x5c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1511
					taskEXIT_CRITICAL();
    25d2:	f7ff faf9 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1513
					return errQUEUE_EMPTY;
    25d6:	e05e      	b.n	2696 <xQueueSemaphoreTake+0x122>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
    25d8:	b916      	cbnz	r6, 25e0 <xQueueSemaphoreTake+0x6c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
    25da:	a802      	add	r0, sp, #8
    25dc:	f000 fca4 	bl	2f28 <vTaskInternalSetTimeOutState>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1529
		taskEXIT_CRITICAL();
    25e0:	f7ff faf2 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1534
		vTaskSuspendAll();
    25e4:	f000 fab6 	bl	2b54 <vTaskSuspendAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    25e8:	f7ff facc 	bl	1b84 <vPortEnterCritical>
    25ec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    25f0:	2bff      	cmp	r3, #255	; 0xff
    25f2:	bf08      	it	eq
    25f4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
    25f8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    25fc:	2bff      	cmp	r3, #255	; 0xff
    25fe:	bf08      	it	eq
    2600:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
    2604:	f7ff fae0 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    2608:	a901      	add	r1, sp, #4
    260a:	a802      	add	r0, sp, #8
    260c:	f000 fc98 	bl	2f40 <xTaskCheckForTimeOut>
    2610:	2800      	cmp	r0, #0
    2612:	d14a      	bne.n	26aa <xQueueSemaphoreTake+0x136>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    2614:	4620      	mov	r0, r4
    2616:	f7ff fc54 	bl	1ec2 <prvIsQueueEmpty>
    261a:	2800      	cmp	r0, #0
    261c:	d03f      	beq.n	269e <xQueueSemaphoreTake+0x12a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    261e:	6823      	ldr	r3, [r4, #0]
    2620:	b93b      	cbnz	r3, 2632 <xQueueSemaphoreTake+0xbe>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1552
						taskENTER_CRITICAL();
    2622:	f7ff faaf 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
    2626:	68a0      	ldr	r0, [r4, #8]
    2628:	f000 fcda 	bl	2fe0 <xTaskPriorityInherit>
    262c:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1556
						taskEXIT_CRITICAL();
    262e:	f7ff facb 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    2632:	9901      	ldr	r1, [sp, #4]
    2634:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2638:	f000 fc1e 	bl	2e78 <vTaskPlaceOnEventList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1566
				prvUnlockQueue( pxQueue );
    263c:	4620      	mov	r0, r4
    263e:	f7ff fc95 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
    2642:	f000 fb21 	bl	2c88 <xTaskResumeAll>
    2646:	b938      	cbnz	r0, 2658 <xQueueSemaphoreTake+0xe4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    2648:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    264c:	f8c8 3000 	str.w	r3, [r8]
    2650:	f3bf 8f4f 	dsb	sy
    2654:	f3bf 8f6f 	isb	sy
    2658:	2601      	movs	r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1444
		taskENTER_CRITICAL();
    265a:	f7ff fa93 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
    265e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
    2660:	2b00      	cmp	r3, #0
    2662:	d0ad      	beq.n	25c0 <xQueueSemaphoreTake+0x4c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
    2664:	3b01      	subs	r3, #1
    2666:	63a3      	str	r3, [r4, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    2668:	6823      	ldr	r3, [r4, #0]
    266a:	b913      	cbnz	r3, 2672 <xQueueSemaphoreTake+0xfe>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
    266c:	f000 fdb0 	bl	31d0 <pvTaskIncrementMutexHeldCount>
    2670:	60a0      	str	r0, [r4, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2672:	6923      	ldr	r3, [r4, #16]
    2674:	b163      	cbz	r3, 2690 <xQueueSemaphoreTake+0x11c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2676:	f104 0010 	add.w	r0, r4, #16
    267a:	f000 fc15 	bl	2ea8 <xTaskRemoveFromEventList>
    267e:	b138      	cbz	r0, 2690 <xQueueSemaphoreTake+0x11c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
    2680:	4b1b      	ldr	r3, [pc, #108]	; (26f0 <xQueueSemaphoreTake+0x17c>)
    2682:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2686:	601a      	str	r2, [r3, #0]
    2688:	f3bf 8f4f 	dsb	sy
    268c:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1493
				taskEXIT_CRITICAL();
    2690:	f7ff fa9a 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1494
				return pdPASS;
    2694:	2501      	movs	r5, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1629
}
    2696:	4628      	mov	r0, r5
    2698:	b004      	add	sp, #16
    269a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1580
				prvUnlockQueue( pxQueue );
    269e:	4620      	mov	r0, r4
    26a0:	f7ff fc64 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1581
				( void ) xTaskResumeAll();
    26a4:	f000 faf0 	bl	2c88 <xTaskResumeAll>
    26a8:	e7d6      	b.n	2658 <xQueueSemaphoreTake+0xe4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1587
			prvUnlockQueue( pxQueue );
    26aa:	4620      	mov	r0, r4
    26ac:	f7ff fc5e 	bl	1f6c <prvUnlockQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1588
			( void ) xTaskResumeAll();
    26b0:	f000 faea 	bl	2c88 <xTaskResumeAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    26b4:	4620      	mov	r0, r4
    26b6:	f7ff fc04 	bl	1ec2 <prvIsQueueEmpty>
    26ba:	2800      	cmp	r0, #0
    26bc:	d0cc      	beq.n	2658 <xQueueSemaphoreTake+0xe4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
    26be:	2d00      	cmp	r5, #0
    26c0:	d0e9      	beq.n	2696 <xQueueSemaphoreTake+0x122>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1603
						taskENTER_CRITICAL();
    26c2:	f7ff fa5f 	bl	1b84 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
    26c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    26c8:	b119      	cbz	r1, 26d2 <xQueueSemaphoreTake+0x15e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
    26ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
    26cc:	6819      	ldr	r1, [r3, #0]
    26ce:	f1c1 010a 	rsb	r1, r1, #10
xQueueSemaphoreTake():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
    26d2:	68a0      	ldr	r0, [r4, #8]
    26d4:	f000 fd24 	bl	3120 <vTaskPriorityDisinheritAfterTimeout>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1621
				return errQUEUE_EMPTY;
    26d8:	2500      	movs	r5, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1615
						taskEXIT_CRITICAL();
    26da:	f7ff fa75 	bl	1bc8 <vPortExitCritical>
    26de:	e7da      	b.n	2696 <xQueueSemaphoreTake+0x122>
    26e0:	0000ae30 	.word	0x0000ae30
    26e4:	0000adb0 	.word	0x0000adb0
    26e8:	0000ad5a 	.word	0x0000ad5a
    26ec:	0000aeda 	.word	0x0000aeda
    26f0:	e000ed04 	.word	0xe000ed04

000026f4 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1782
{
    26f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    26f8:	4689      	mov	r9, r1
    26fa:	4690      	mov	r8, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1787
	configASSERT( pxQueue );
    26fc:	4605      	mov	r5, r0
    26fe:	b928      	cbnz	r0, 270c <xQueueReceiveFromISR+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1787 (discriminator 1)
    2700:	4921      	ldr	r1, [pc, #132]	; (2788 <xQueueReceiveFromISR+0x94>)
    2702:	f240 60fb 	movw	r0, #1787	; 0x6fb
    2706:	f7fe ffc3 	bl	1690 <configASSERT_callback>
    270a:	e7fe      	b.n	270a <xQueueReceiveFromISR+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    270c:	b939      	cbnz	r1, 271e <xQueueReceiveFromISR+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 1)
    270e:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2710:	b12b      	cbz	r3, 271e <xQueueReceiveFromISR+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 2)
    2712:	491e      	ldr	r1, [pc, #120]	; (278c <xQueueReceiveFromISR+0x98>)
    2714:	f240 60fc 	movw	r0, #1788	; 0x6fc
    2718:	f7fe ffba 	bl	1690 <configASSERT_callback>
    271c:	e7fe      	b.n	271c <xQueueReceiveFromISR+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    271e:	f7ff fb47 	bl	1db0 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    2722:	f3ef 8711 	mrs	r7, BASEPRI
    2726:	f04f 0318 	mov.w	r3, #24
    272a:	f383 8811 	msr	BASEPRI, r3
    272e:	f3bf 8f6f 	isb	sy
    2732:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    2736:	6bac      	ldr	r4, [r5, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2738:	b31c      	cbz	r4, 2782 <xQueueReceiveFromISR+0x8e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    273a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    273e:	4649      	mov	r1, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    2740:	b276      	sxtb	r6, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    2742:	4628      	mov	r0, r5
    2744:	f7ff fbfd 	bl	1f42 <prvCopyDataFromQueue>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    2748:	3c01      	subs	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    274a:	1c73      	adds	r3, r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    274c:	63ac      	str	r4, [r5, #56]	; 0x38
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    274e:	d113      	bne.n	2778 <xQueueReceiveFromISR+0x84>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2750:	692b      	ldr	r3, [r5, #16]
    2752:	b90b      	cbnz	r3, 2758 <xQueueReceiveFromISR+0x64>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
    2754:	2001      	movs	r0, #1
    2756:	e00b      	b.n	2770 <xQueueReceiveFromISR+0x7c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2758:	f105 0010 	add.w	r0, r5, #16
    275c:	f000 fba4 	bl	2ea8 <xTaskRemoveFromEventList>
    2760:	2800      	cmp	r0, #0
    2762:	d0f7      	beq.n	2754 <xQueueReceiveFromISR+0x60>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
    2764:	f1b8 0f00 	cmp.w	r8, #0
    2768:	d0f4      	beq.n	2754 <xQueueReceiveFromISR+0x60>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
    276a:	2001      	movs	r0, #1
    276c:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    2770:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1869
}
    2774:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
    2778:	3601      	adds	r6, #1
    277a:	b276      	sxtb	r6, r6
    277c:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
    2780:	e7e8      	b.n	2754 <xQueueReceiveFromISR+0x60>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
    2782:	4620      	mov	r0, r4
    2784:	e7f4      	b.n	2770 <xQueueReceiveFromISR+0x7c>
    2786:	bf00      	nop
    2788:	0000acbb 	.word	0x0000acbb
    278c:	0000ae8f 	.word	0x0000ae8f

00002790 <vQueueDelete>:
vQueueDelete():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1972
{
    2790:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1975
	configASSERT( pxQueue );
    2792:	b928      	cbnz	r0, 27a0 <vQueueDelete+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1975 (discriminator 1)
    2794:	4906      	ldr	r1, [pc, #24]	; (27b0 <vQueueDelete+0x20>)
    2796:	f240 70b7 	movw	r0, #1975	; 0x7b7
    279a:	f7fe ff79 	bl	1690 <configASSERT_callback>
    279e:	e7fe      	b.n	279e <vQueueDelete+0xe>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1994
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
    27a0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
    27a4:	b91b      	cbnz	r3, 27ae <vQueueDelete+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    27a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:1996
			vPortFree( pxQueue );
    27aa:	f7ff bb3c 	b.w	1e26 <vPortFree>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/queue.c:2010
}
    27ae:	bd08      	pop	{r3, pc}
    27b0:	0000acbb 	.word	0x0000acbb

000027b4 <prvAddNewTaskToReadyList>:
prvAddNewTaskToReadyList():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1073
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
    27b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    27b8:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1076
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
    27ba:	f7ff f9e3 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
	{
		uxCurrentNumberOfTasks++;
    27be:	4b2d      	ldr	r3, [pc, #180]	; (2874 <prvAddNewTaskToReadyList+0xc0>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    27c0:	4c2d      	ldr	r4, [pc, #180]	; (2878 <prvAddNewTaskToReadyList+0xc4>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    27c2:	681a      	ldr	r2, [r3, #0]
    27c4:	4f2d      	ldr	r7, [pc, #180]	; (287c <prvAddNewTaskToReadyList+0xc8>)
    27c6:	3201      	adds	r2, #1
    27c8:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    27ca:	6826      	ldr	r6, [r4, #0]
    27cc:	2e00      	cmp	r6, #0
    27ce:	d145      	bne.n	285c <prvAddNewTaskToReadyList+0xa8>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1083
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
    27d0:	6025      	str	r5, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1085

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
    27d2:	681b      	ldr	r3, [r3, #0]
    27d4:	2b01      	cmp	r3, #1
    27d6:	d11c      	bne.n	2812 <prvAddNewTaskToReadyList+0x5e>
    27d8:	46b8      	mov	r8, r7
prvInitialiseTaskLists():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    27da:	4640      	mov	r0, r8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    27dc:	3601      	adds	r6, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    27de:	f7ff fb2f 	bl	1e40 <vListInitialise>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    27e2:	2e0a      	cmp	r6, #10
    27e4:	f108 0814 	add.w	r8, r8, #20
    27e8:	d1f7      	bne.n	27da <prvAddNewTaskToReadyList+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	}

	vListInitialise( &xDelayedTaskList1 );
    27ea:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 28a4 <prvAddNewTaskToReadyList+0xf0>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    27ee:	4e24      	ldr	r6, [pc, #144]	; (2880 <prvAddNewTaskToReadyList+0xcc>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
    27f0:	4640      	mov	r0, r8
    27f2:	f7ff fb25 	bl	1e40 <vListInitialise>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    27f6:	4630      	mov	r0, r6
    27f8:	f7ff fb22 	bl	1e40 <vListInitialise>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
    27fc:	4821      	ldr	r0, [pc, #132]	; (2884 <prvAddNewTaskToReadyList+0xd0>)
    27fe:	f7ff fb1f 	bl	1e40 <vListInitialise>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3567
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
    2802:	4821      	ldr	r0, [pc, #132]	; (2888 <prvAddNewTaskToReadyList+0xd4>)
    2804:	f7ff fb1c 	bl	1e40 <vListInitialise>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3573
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
    2808:	4b20      	ldr	r3, [pc, #128]	; (288c <prvAddNewTaskToReadyList+0xd8>)
    280a:	f8c3 8000 	str.w	r8, [r3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
    280e:	4b20      	ldr	r3, [pc, #128]	; (2890 <prvAddNewTaskToReadyList+0xdc>)
    2810:	601e      	str	r6, [r3, #0]
prvAddNewTaskToReadyList():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    2812:	4a20      	ldr	r2, [pc, #128]	; (2894 <prvAddNewTaskToReadyList+0xe0>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    2814:	4920      	ldr	r1, [pc, #128]	; (2898 <prvAddNewTaskToReadyList+0xe4>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    2816:	6813      	ldr	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    2818:	6808      	ldr	r0, [r1, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    281a:	3301      	adds	r3, #1
    281c:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    281e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
    2820:	2301      	movs	r3, #1
    2822:	4093      	lsls	r3, r2
    2824:	4303      	orrs	r3, r0
    2826:	2014      	movs	r0, #20
    2828:	600b      	str	r3, [r1, #0]
    282a:	fb00 7002 	mla	r0, r0, r2, r7
    282e:	1d29      	adds	r1, r5, #4
    2830:	f7ff fb14 	bl	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
    2834:	f7ff f9c8 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
    2838:	4b18      	ldr	r3, [pc, #96]	; (289c <prvAddNewTaskToReadyList+0xe8>)
    283a:	681b      	ldr	r3, [r3, #0]
    283c:	b163      	cbz	r3, 2858 <prvAddNewTaskToReadyList+0xa4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
    283e:	6823      	ldr	r3, [r4, #0]
    2840:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    2842:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
    2844:	429a      	cmp	r2, r3
    2846:	d207      	bcs.n	2858 <prvAddNewTaskToReadyList+0xa4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
    2848:	4b15      	ldr	r3, [pc, #84]	; (28a0 <prvAddNewTaskToReadyList+0xec>)
    284a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    284e:	601a      	str	r2, [r3, #0]
    2850:	f3bf 8f4f 	dsb	sy
    2854:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1152
}
    2858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
    285c:	4b0f      	ldr	r3, [pc, #60]	; (289c <prvAddNewTaskToReadyList+0xe8>)
    285e:	681b      	ldr	r3, [r3, #0]
    2860:	2b00      	cmp	r3, #0
    2862:	d1d6      	bne.n	2812 <prvAddNewTaskToReadyList+0x5e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
    2864:	6823      	ldr	r3, [r4, #0]
    2866:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    2868:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
    286a:	429a      	cmp	r2, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
    286c:	bf98      	it	ls
    286e:	6025      	strls	r5, [r4, #0]
    2870:	e7cf      	b.n	2812 <prvAddNewTaskToReadyList+0x5e>
    2872:	bf00      	nop
    2874:	10001250 	.word	0x10001250
    2878:	10001178 	.word	0x10001178
    287c:	10001184 	.word	0x10001184
    2880:	10001278 	.word	0x10001278
    2884:	10001298 	.word	0x10001298
    2888:	100012b0 	.word	0x100012b0
    288c:	1000117c 	.word	0x1000117c
    2890:	10001180 	.word	0x10001180
    2894:	1000125c 	.word	0x1000125c
    2898:	10001260 	.word	0x10001260
    289c:	100012ac 	.word	0x100012ac
    28a0:	e000ed04 	.word	0xe000ed04
    28a4:	10001264 	.word	0x10001264

000028a8 <prvIdleTask>:
prvIdleTask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3335
{
    28a8:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    28aa:	4c07      	ldr	r4, [pc, #28]	; (28c8 <prvIdleTask+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    28ac:	4d07      	ldr	r5, [pc, #28]	; (28cc <prvIdleTask+0x24>)
    28ae:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    28b2:	6823      	ldr	r3, [r4, #0]
    28b4:	2b01      	cmp	r3, #1
    28b6:	d904      	bls.n	28c2 <prvIdleTask+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
    28b8:	602e      	str	r6, [r5, #0]
    28ba:	f3bf 8f4f 	dsb	sy
    28be:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3394
			vApplicationIdleHook();
    28c2:	f7fe fedd 	bl	1680 <vApplicationIdleHook>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
    28c6:	e7f4      	b.n	28b2 <prvIdleTask+0xa>
    28c8:	10001184 	.word	0x10001184
    28cc:	e000ed04 	.word	0xe000ed04

000028d0 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    28d0:	4a06      	ldr	r2, [pc, #24]	; (28ec <prvResetNextTaskUnblockTime+0x1c>)
    28d2:	6813      	ldr	r3, [r2, #0]
    28d4:	6819      	ldr	r1, [r3, #0]
    28d6:	4b06      	ldr	r3, [pc, #24]	; (28f0 <prvResetNextTaskUnblockTime+0x20>)
    28d8:	b919      	cbnz	r1, 28e2 <prvResetNextTaskUnblockTime+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
    28da:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    28de:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3901
	}
}
    28e0:	4770      	bx	lr
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    28e2:	6812      	ldr	r2, [r2, #0]
    28e4:	68d2      	ldr	r2, [r2, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    28e6:	68d2      	ldr	r2, [r2, #12]
    28e8:	6852      	ldr	r2, [r2, #4]
    28ea:	e7f8      	b.n	28de <prvResetNextTaskUnblockTime+0xe>
    28ec:	1000117c 	.word	0x1000117c
    28f0:	10001290 	.word	0x10001290

000028f4 <prvInitialiseNewTask.isra.2>:
prvInitialiseNewTask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    28f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    28f8:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    28fc:	ea4f 0982 	mov.w	r9, r2, lsl #2
    2900:	464a      	mov	r2, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    2902:	4607      	mov	r7, r0
    2904:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    2906:	6b20      	ldr	r0, [r4, #48]	; 0x30
    2908:	21a5      	movs	r1, #165	; 0xa5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    290a:	4698      	mov	r8, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    290c:	f001 fcd4 	bl	42b8 <memset>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
    2910:	6b23      	ldr	r3, [r4, #48]	; 0x30
    2912:	f1a9 0904 	sub.w	r9, r9, #4
    2916:	4499      	add	r9, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:862
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
    2918:	f029 0907 	bic.w	r9, r9, #7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
    291c:	b39d      	cbz	r5, 2986 <prvInitialiseNewTask.isra.2+0x92>
    291e:	1e6b      	subs	r3, r5, #1
    2920:	f104 0234 	add.w	r2, r4, #52	; 0x34
    2924:	350b      	adds	r5, #11
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
    2926:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    292a:	f802 1b01 	strb.w	r1, [r2], #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
    292e:	b109      	cbz	r1, 2934 <prvInitialiseNewTask.isra.2+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    2930:	42ab      	cmp	r3, r5
    2932:	d1f8      	bne.n	2926 <prvInitialiseNewTask.isra.2+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
    2934:	2300      	movs	r3, #0
    2936:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
    293a:	9d08      	ldr	r5, [sp, #32]
    293c:	2d09      	cmp	r5, #9
    293e:	bf28      	it	cs
    2940:	2509      	movcs	r5, #9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    2942:	f04f 0a00 	mov.w	sl, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
    2946:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
    2948:	6425      	str	r5, [r4, #64]	; 0x40
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    294a:	1d20      	adds	r0, r4, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    294c:	f8c4 a044 	str.w	sl, [r4, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    2950:	f7ff fa81 	bl	1e56 <vListInitialiseItem>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2954:	f1c5 050a 	rsb	r5, r5, #10
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
    2958:	f104 0018 	add.w	r0, r4, #24
    295c:	f7ff fa7b 	bl	1e56 <vListInitialiseItem>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
    2960:	f8c4 a04c 	str.w	sl, [r4, #76]	; 0x4c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
    2964:	6124      	str	r4, [r4, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2966:	61a5      	str	r5, [r4, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
    2968:	6264      	str	r4, [r4, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:963
		pxNewTCB->ulRunTimeCounter = 0UL;
    296a:	f8c4 a048 	str.w	sl, [r4, #72]	; 0x48
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    296e:	f884 a050 	strb.w	sl, [r4, #80]	; 0x50
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
    2972:	4642      	mov	r2, r8
    2974:	4639      	mov	r1, r7
    2976:	4648      	mov	r0, r9
    2978:	f7ff f8d8 	bl	1b2c <pxPortInitialiseStack>
    297c:	6020      	str	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
    297e:	b106      	cbz	r6, 2982 <prvInitialiseNewTask.isra.2+0x8e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
    2980:	6034      	str	r4, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1069
}
    2982:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
    2986:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    298a:	e7d6      	b.n	293a <prvInitialiseNewTask.isra.2+0x46>

0000298c <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
    298c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
    298e:	4b1b      	ldr	r3, [pc, #108]	; (29fc <prvAddCurrentTaskToDelayedList+0x70>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    2990:	4e1b      	ldr	r6, [pc, #108]	; (2a00 <prvAddCurrentTaskToDelayedList+0x74>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
    2992:	681c      	ldr	r4, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    2994:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    2996:	6830      	ldr	r0, [r6, #0]
    2998:	3004      	adds	r0, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
    299a:	460f      	mov	r7, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    299c:	f7ff fa81 	bl	1ea2 <uxListRemove>
    29a0:	4633      	mov	r3, r6
    29a2:	b940      	cbnz	r0, 29b6 <prvAddCurrentTaskToDelayedList+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
    29a4:	6831      	ldr	r1, [r6, #0]
    29a6:	4e17      	ldr	r6, [pc, #92]	; (2a04 <prvAddCurrentTaskToDelayedList+0x78>)
    29a8:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    29aa:	6832      	ldr	r2, [r6, #0]
    29ac:	2001      	movs	r0, #1
    29ae:	4088      	lsls	r0, r1
    29b0:	ea22 0200 	bic.w	r2, r2, r0
    29b4:	6032      	str	r2, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
    29b6:	1c6a      	adds	r2, r5, #1
    29b8:	d107      	bne.n	29ca <prvAddCurrentTaskToDelayedList+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5110 (discriminator 1)
    29ba:	b137      	cbz	r7, 29ca <prvAddCurrentTaskToDelayedList+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    29bc:	6819      	ldr	r1, [r3, #0]
    29be:	4812      	ldr	r0, [pc, #72]	; (2a08 <prvAddCurrentTaskToDelayedList+0x7c>)
    29c0:	3104      	adds	r1, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
    29c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    29c6:	f7ff ba49 	b.w	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
    29ca:	681a      	ldr	r2, [r3, #0]
    29cc:	1964      	adds	r4, r4, r5
    29ce:	6054      	str	r4, [r2, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
    29d0:	d307      	bcc.n	29e2 <prvAddCurrentTaskToDelayedList+0x56>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    29d2:	4a0e      	ldr	r2, [pc, #56]	; (2a0c <prvAddCurrentTaskToDelayedList+0x80>)
    29d4:	6810      	ldr	r0, [r2, #0]
    29d6:	6819      	ldr	r1, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    29d8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    29dc:	3104      	adds	r1, #4
    29de:	f7ff ba49 	b.w	1e74 <vListInsert>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    29e2:	4a0b      	ldr	r2, [pc, #44]	; (2a10 <prvAddCurrentTaskToDelayedList+0x84>)
    29e4:	6810      	ldr	r0, [r2, #0]
    29e6:	6819      	ldr	r1, [r3, #0]
    29e8:	3104      	adds	r1, #4
    29ea:	f7ff fa43 	bl	1e74 <vListInsert>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
    29ee:	4b09      	ldr	r3, [pc, #36]	; (2a14 <prvAddCurrentTaskToDelayedList+0x88>)
    29f0:	681a      	ldr	r2, [r3, #0]
    29f2:	42a2      	cmp	r2, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
    29f4:	bf88      	it	hi
    29f6:	601c      	strhi	r4, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
    29f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29fa:	bf00      	nop
    29fc:	100012c4 	.word	0x100012c4
    2a00:	10001178 	.word	0x10001178
    2a04:	10001260 	.word	0x10001260
    2a08:	100012b0 	.word	0x100012b0
    2a0c:	10001180 	.word	0x10001180
    2a10:	1000117c 	.word	0x1000117c
    2a14:	10001290 	.word	0x10001290

00002a18 <xTaskCreateStatic>:
xTaskCreateStatic():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:585
	{
    2a18:	b570      	push	{r4, r5, r6, lr}
    2a1a:	b086      	sub	sp, #24
    2a1c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:589
		configASSERT( puxStackBuffer != NULL );
    2a20:	b92d      	cbnz	r5, 2a2e <xTaskCreateStatic+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:589 (discriminator 1)
    2a22:	4915      	ldr	r1, [pc, #84]	; (2a78 <xTaskCreateStatic+0x60>)
    2a24:	f240 204d 	movw	r0, #589	; 0x24d
    2a28:	f7fe fe32 	bl	1690 <configASSERT_callback>
    2a2c:	e7fe      	b.n	2a2c <xTaskCreateStatic+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:590
		configASSERT( pxTaskBuffer != NULL );
    2a2e:	b92c      	cbnz	r4, 2a3c <xTaskCreateStatic+0x24>
    2a30:	4912      	ldr	r1, [pc, #72]	; (2a7c <xTaskCreateStatic+0x64>)
    2a32:	f240 204e 	movw	r0, #590	; 0x24e
    2a36:	f7fe fe2b 	bl	1690 <configASSERT_callback>
    2a3a:	e7fe      	b.n	2a3a <xTaskCreateStatic+0x22>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:597
			volatile size_t xSize = sizeof( StaticTask_t );
    2a3c:	2654      	movs	r6, #84	; 0x54
    2a3e:	9605      	str	r6, [sp, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598
			configASSERT( xSize == sizeof( TCB_t ) );
    2a40:	9e05      	ldr	r6, [sp, #20]
    2a42:	2e54      	cmp	r6, #84	; 0x54
    2a44:	d005      	beq.n	2a52 <xTaskCreateStatic+0x3a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 1)
    2a46:	490e      	ldr	r1, [pc, #56]	; (2a80 <xTaskCreateStatic+0x68>)
    2a48:	f240 2056 	movw	r0, #598	; 0x256
    2a4c:	f7fe fe20 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:598 (discriminator 3)
    2a50:	e7fe      	b.n	2a50 <xTaskCreateStatic+0x38>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:609
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
    2a52:	6325      	str	r5, [r4, #48]	; 0x30
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:615
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
    2a54:	2502      	movs	r5, #2
    2a56:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    2a5a:	ad04      	add	r5, sp, #16
    2a5c:	9501      	str	r5, [sp, #4]
    2a5e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    2a60:	9402      	str	r4, [sp, #8]
    2a62:	9500      	str	r5, [sp, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:599
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
    2a64:	9e05      	ldr	r6, [sp, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    2a66:	f7ff ff45 	bl	28f4 <prvInitialiseNewTask.isra.2>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:620
			prvAddNewTaskToReadyList( pxNewTCB );
    2a6a:	4620      	mov	r0, r4
    2a6c:	f7ff fea2 	bl	27b4 <prvAddNewTaskToReadyList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:628
	}
    2a70:	9804      	ldr	r0, [sp, #16]
    2a72:	b006      	add	sp, #24
    2a74:	bd70      	pop	{r4, r5, r6, pc}
    2a76:	bf00      	nop
    2a78:	0000afc5 	.word	0x0000afc5
    2a7c:	0000afdc 	.word	0x0000afdc
    2a80:	0000aff1 	.word	0x0000aff1

00002a84 <xTaskCreate>:
xTaskCreate():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
    2a84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    2a88:	4607      	mov	r7, r0
    2a8a:	b085      	sub	sp, #20
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    2a8c:	0090      	lsls	r0, r2, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
    2a8e:	4688      	mov	r8, r1
    2a90:	4616      	mov	r6, r2
    2a92:	4699      	mov	r9, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    2a94:	f7ff f9b8 	bl	1e08 <pvPortMalloc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:772
			if( pxStack != NULL )
    2a98:	4605      	mov	r5, r0
    2a9a:	b1e8      	cbz	r0, 2ad8 <xTaskCreate+0x54>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
    2a9c:	2054      	movs	r0, #84	; 0x54
    2a9e:	f7ff f9b3 	bl	1e08 <pvPortMalloc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:777
				if( pxNewTCB != NULL )
    2aa2:	4604      	mov	r4, r0
    2aa4:	b1a8      	cbz	r0, 2ad2 <xTaskCreate+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:802
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
    2aa6:	2300      	movs	r3, #0
    2aa8:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    2aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
    2aae:	6305      	str	r5, [r0, #48]	; 0x30
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    2ab0:	9301      	str	r3, [sp, #4]
    2ab2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    2ab4:	9002      	str	r0, [sp, #8]
    2ab6:	9300      	str	r3, [sp, #0]
    2ab8:	4632      	mov	r2, r6
    2aba:	464b      	mov	r3, r9
    2abc:	4641      	mov	r1, r8
    2abe:	4638      	mov	r0, r7
    2ac0:	f7ff ff18 	bl	28f4 <prvInitialiseNewTask.isra.2>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:807
			prvAddNewTaskToReadyList( pxNewTCB );
    2ac4:	4620      	mov	r0, r4
    2ac6:	f7ff fe75 	bl	27b4 <prvAddNewTaskToReadyList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:808
			xReturn = pdPASS;
    2aca:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:816
	}
    2acc:	b005      	add	sp, #20
    2ace:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:786
					vPortFree( pxStack );
    2ad2:	4628      	mov	r0, r5
    2ad4:	f7ff f9a7 	bl	1e26 <vPortFree>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
    2ad8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:815
		return xReturn;
    2adc:	e7f6      	b.n	2acc <xTaskCreate+0x48>
    2ade:	Address 0x0000000000002ade is out of bounds.


00002ae0 <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1968
{
    2ae0:	b510      	push	{r4, lr}
    2ae2:	b088      	sub	sp, #32
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1974
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
    2ae4:	2400      	movs	r4, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    2ae6:	aa07      	add	r2, sp, #28
    2ae8:	a906      	add	r1, sp, #24
    2aea:	a805      	add	r0, sp, #20
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1975
		StackType_t *pxIdleTaskStackBuffer = NULL;
    2aec:	e9cd 4405 	strd	r4, r4, [sp, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    2af0:	f7fe fdee 	bl	16d0 <vApplicationGetIdleTaskMemory>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1981
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
    2af4:	9b05      	ldr	r3, [sp, #20]
    2af6:	9302      	str	r3, [sp, #8]
    2af8:	9b06      	ldr	r3, [sp, #24]
    2afa:	9a07      	ldr	r2, [sp, #28]
    2afc:	490f      	ldr	r1, [pc, #60]	; (2b3c <vTaskStartScheduler+0x5c>)
    2afe:	4810      	ldr	r0, [pc, #64]	; (2b40 <vTaskStartScheduler+0x60>)
    2b00:	e9cd 4300 	strd	r4, r3, [sp]
    2b04:	4623      	mov	r3, r4
    2b06:	f7ff ff87 	bl	2a18 <xTaskCreateStatic>
    2b0a:	4b0e      	ldr	r3, [pc, #56]	; (2b44 <vTaskStartScheduler+0x64>)
    2b0c:	6018      	str	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1989
		if( xIdleTaskHandle != NULL )
    2b0e:	b190      	cbz	r0, 2b36 <vTaskStartScheduler+0x56>
vPortRaiseBASEPRI():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    2b10:	f04f 0318 	mov.w	r3, #24
    2b14:	f383 8811 	msr	BASEPRI, r3
    2b18:	f3bf 8f6f 	isb	sy
    2b1c:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
    2b20:	4b09      	ldr	r3, [pc, #36]	; (2b48 <vTaskStartScheduler+0x68>)
    2b22:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2b26:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
    2b28:	4b08      	ldr	r3, [pc, #32]	; (2b4c <vTaskStartScheduler+0x6c>)
    2b2a:	2201      	movs	r2, #1
    2b2c:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
    2b2e:	4b08      	ldr	r3, [pc, #32]	; (2b50 <vTaskStartScheduler+0x70>)
    2b30:	601c      	str	r4, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
    2b32:	f7ff f8bd 	bl	1cb0 <xPortStartScheduler>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
    2b36:	b008      	add	sp, #32
    2b38:	bd10      	pop	{r4, pc}
    2b3a:	bf00      	nop
    2b3c:	0000af6b 	.word	0x0000af6b
    2b40:	000028a9 	.word	0x000028a9
    2b44:	1000128c 	.word	0x1000128c
    2b48:	10001290 	.word	0x10001290
    2b4c:	100012ac 	.word	0x100012ac
    2b50:	100012c4 	.word	0x100012c4

00002b54 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
    2b54:	4a02      	ldr	r2, [pc, #8]	; (2b60 <vTaskSuspendAll+0xc>)
    2b56:	6813      	ldr	r3, [r2, #0]
    2b58:	3301      	adds	r3, #1
    2b5a:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2108
}
    2b5c:	4770      	bx	lr
    2b5e:	bf00      	nop
    2b60:	10001258 	.word	0x10001258

00002b64 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2666
{
    2b64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    2b68:	4b3b      	ldr	r3, [pc, #236]	; (2c58 <xTaskIncrementTick+0xf4>)
    2b6a:	681b      	ldr	r3, [r3, #0]
    2b6c:	2b00      	cmp	r3, #0
    2b6e:	d16b      	bne.n	2c48 <xTaskIncrementTick+0xe4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
    2b70:	4b3a      	ldr	r3, [pc, #232]	; (2c5c <xTaskIncrementTick+0xf8>)
    2b72:	681c      	ldr	r4, [r3, #0]
    2b74:	3401      	adds	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
    2b76:	601c      	str	r4, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
    2b78:	b9a4      	cbnz	r4, 2ba4 <xTaskIncrementTick+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
    2b7a:	4b39      	ldr	r3, [pc, #228]	; (2c60 <xTaskIncrementTick+0xfc>)
    2b7c:	681a      	ldr	r2, [r3, #0]
    2b7e:	6812      	ldr	r2, [r2, #0]
    2b80:	b12a      	cbz	r2, 2b8e <xTaskIncrementTick+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 1)
    2b82:	4938      	ldr	r1, [pc, #224]	; (2c64 <xTaskIncrementTick+0x100>)
    2b84:	f640 207f 	movw	r0, #2687	; 0xa7f
    2b88:	f7fe fd82 	bl	1690 <configASSERT_callback>
    2b8c:	e7fe      	b.n	2b8c <xTaskIncrementTick+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 2)
    2b8e:	4a36      	ldr	r2, [pc, #216]	; (2c68 <xTaskIncrementTick+0x104>)
    2b90:	6819      	ldr	r1, [r3, #0]
    2b92:	6810      	ldr	r0, [r2, #0]
    2b94:	6018      	str	r0, [r3, #0]
    2b96:	6011      	str	r1, [r2, #0]
    2b98:	4a34      	ldr	r2, [pc, #208]	; (2c6c <xTaskIncrementTick+0x108>)
    2b9a:	6813      	ldr	r3, [r2, #0]
    2b9c:	3301      	adds	r3, #1
    2b9e:	6013      	str	r3, [r2, #0]
    2ba0:	f7ff fe96 	bl	28d0 <prvResetNextTaskUnblockTime>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    2ba4:	4d32      	ldr	r5, [pc, #200]	; (2c70 <xTaskIncrementTick+0x10c>)
    2ba6:	4f33      	ldr	r7, [pc, #204]	; (2c74 <xTaskIncrementTick+0x110>)
    2ba8:	682b      	ldr	r3, [r5, #0]
    2baa:	42a3      	cmp	r3, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    2bac:	f04f 0b00 	mov.w	fp, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    2bb0:	d911      	bls.n	2bd6 <xTaskIncrementTick+0x72>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
    2bb2:	683a      	ldr	r2, [r7, #0]
    2bb4:	4b30      	ldr	r3, [pc, #192]	; (2c78 <xTaskIncrementTick+0x114>)
    2bb6:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    2bb8:	2214      	movs	r2, #20
    2bba:	434a      	muls	r2, r1
    2bbc:	589a      	ldr	r2, [r3, r2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
    2bbe:	2a02      	cmp	r2, #2
    2bc0:	bf28      	it	cs
    2bc2:	f04f 0b01 	movcs.w	fp, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
    2bc6:	4a2d      	ldr	r2, [pc, #180]	; (2c7c <xTaskIncrementTick+0x118>)
    2bc8:	6812      	ldr	r2, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
    2bca:	2a00      	cmp	r2, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2834
}
    2bcc:	bf0c      	ite	eq
    2bce:	4658      	moveq	r0, fp
    2bd0:	2001      	movne	r0, #1
    2bd2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    2bd6:	f8df a088 	ldr.w	sl, [pc, #136]	; 2c60 <xTaskIncrementTick+0xfc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    2bda:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 2c84 <xTaskIncrementTick+0x120>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    2bde:	f8da 2000 	ldr.w	r2, [sl]
    2be2:	6812      	ldr	r2, [r2, #0]
    2be4:	b91a      	cbnz	r2, 2bee <xTaskIncrementTick+0x8a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2be6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2bea:	602a      	str	r2, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2710
					break;
    2bec:	e7e1      	b.n	2bb2 <xTaskIncrementTick+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2bee:	f8da 2000 	ldr.w	r2, [sl]
    2bf2:	68d2      	ldr	r2, [r2, #12]
    2bf4:	68d6      	ldr	r6, [r2, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
    2bf6:	6871      	ldr	r1, [r6, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
    2bf8:	428c      	cmp	r4, r1
    2bfa:	d201      	bcs.n	2c00 <xTaskIncrementTick+0x9c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
    2bfc:	6029      	str	r1, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
    2bfe:	e7d8      	b.n	2bb2 <xTaskIncrementTick+0x4e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    2c00:	f106 0804 	add.w	r8, r6, #4
    2c04:	4640      	mov	r0, r8
    2c06:	f7ff f94c 	bl	1ea2 <uxListRemove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    2c0a:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    2c0c:	b119      	cbz	r1, 2c16 <xTaskIncrementTick+0xb2>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    2c0e:	f106 0018 	add.w	r0, r6, #24
    2c12:	f7ff f946 	bl	1ea2 <uxListRemove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    2c16:	6af0      	ldr	r0, [r6, #44]	; 0x2c
    2c18:	f8d9 3000 	ldr.w	r3, [r9]
    2c1c:	2201      	movs	r2, #1
    2c1e:	fa02 f100 	lsl.w	r1, r2, r0
    2c22:	4319      	orrs	r1, r3
    2c24:	4b14      	ldr	r3, [pc, #80]	; (2c78 <xTaskIncrementTick+0x114>)
    2c26:	f8c9 1000 	str.w	r1, [r9]
    2c2a:	f04f 0c14 	mov.w	ip, #20
    2c2e:	4641      	mov	r1, r8
    2c30:	fb0c 3000 	mla	r0, ip, r0, r3
    2c34:	f7ff f912 	bl	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    2c38:	6838      	ldr	r0, [r7, #0]
    2c3a:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    2c3c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
    2c3e:	4291      	cmp	r1, r2
    2c40:	bf28      	it	cs
    2c42:	f04f 0b01 	movcs.w	fp, #1
    2c46:	e7ca      	b.n	2bde <xTaskIncrementTick+0x7a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
    2c48:	4a0d      	ldr	r2, [pc, #52]	; (2c80 <xTaskIncrementTick+0x11c>)
    2c4a:	6813      	ldr	r3, [r2, #0]
    2c4c:	3301      	adds	r3, #1
    2c4e:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    2c50:	f04f 0b00 	mov.w	fp, #0
    2c54:	e7b7      	b.n	2bc6 <xTaskIncrementTick+0x62>
    2c56:	bf00      	nop
    2c58:	10001258 	.word	0x10001258
    2c5c:	100012c4 	.word	0x100012c4
    2c60:	1000117c 	.word	0x1000117c
    2c64:	0000b00a 	.word	0x0000b00a
    2c68:	10001180 	.word	0x10001180
    2c6c:	10001294 	.word	0x10001294
    2c70:	10001290 	.word	0x10001290
    2c74:	10001178 	.word	0x10001178
    2c78:	10001184 	.word	0x10001184
    2c7c:	100012c8 	.word	0x100012c8
    2c80:	10001254 	.word	0x10001254
    2c84:	10001260 	.word	0x10001260

00002c88 <xTaskResumeAll>:
xTaskResumeAll():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2175
{
    2c88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
    2c8c:	4c2f      	ldr	r4, [pc, #188]	; (2d4c <xTaskResumeAll+0xc4>)
    2c8e:	6823      	ldr	r3, [r4, #0]
    2c90:	b92b      	cbnz	r3, 2c9e <xTaskResumeAll+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2181 (discriminator 1)
    2c92:	492f      	ldr	r1, [pc, #188]	; (2d50 <xTaskResumeAll+0xc8>)
    2c94:	f640 0085 	movw	r0, #2181	; 0x885
    2c98:	f7fe fcfa 	bl	1690 <configASSERT_callback>
    2c9c:	e7fe      	b.n	2c9c <xTaskResumeAll+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
    2c9e:	f7fe ff71 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
    2ca2:	6823      	ldr	r3, [r4, #0]
    2ca4:	3b01      	subs	r3, #1
    2ca6:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    2ca8:	6824      	ldr	r4, [r4, #0]
    2caa:	b12c      	cbz	r4, 2cb8 <xTaskResumeAll+0x30>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
    2cac:	2400      	movs	r4, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
    2cae:	f7fe ff8b 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2281
}
    2cb2:	4620      	mov	r0, r4
    2cb4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
    2cb8:	4b26      	ldr	r3, [pc, #152]	; (2d54 <xTaskResumeAll+0xcc>)
    2cba:	681b      	ldr	r3, [r3, #0]
    2cbc:	2b00      	cmp	r3, #0
    2cbe:	d0f5      	beq.n	2cac <xTaskResumeAll+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    2cc0:	4d25      	ldr	r5, [pc, #148]	; (2d58 <xTaskResumeAll+0xd0>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    2cc2:	4e26      	ldr	r6, [pc, #152]	; (2d5c <xTaskResumeAll+0xd4>)
    2cc4:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 2d70 <xTaskResumeAll+0xe8>
    2cc8:	e01f      	b.n	2d0a <xTaskResumeAll+0x82>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2cca:	68eb      	ldr	r3, [r5, #12]
    2ccc:	68dc      	ldr	r4, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    2cce:	f104 0904 	add.w	r9, r4, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    2cd2:	f104 0018 	add.w	r0, r4, #24
    2cd6:	f7ff f8e4 	bl	1ea2 <uxListRemove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    2cda:	4648      	mov	r0, r9
    2cdc:	f7ff f8e1 	bl	1ea2 <uxListRemove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    2ce0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2ce2:	6831      	ldr	r1, [r6, #0]
    2ce4:	2701      	movs	r7, #1
    2ce6:	fa07 f302 	lsl.w	r3, r7, r2
    2cea:	2014      	movs	r0, #20
    2cec:	430b      	orrs	r3, r1
    2cee:	fb00 8002 	mla	r0, r0, r2, r8
    2cf2:	4649      	mov	r1, r9
    2cf4:	6033      	str	r3, [r6, #0]
    2cf6:	f7ff f8b1 	bl	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    2cfa:	4b19      	ldr	r3, [pc, #100]	; (2d60 <xTaskResumeAll+0xd8>)
    2cfc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2cfe:	681b      	ldr	r3, [r3, #0]
    2d00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    2d02:	429a      	cmp	r2, r3
    2d04:	d301      	bcc.n	2d0a <xTaskResumeAll+0x82>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
    2d06:	4b17      	ldr	r3, [pc, #92]	; (2d64 <xTaskResumeAll+0xdc>)
    2d08:	601f      	str	r7, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    2d0a:	682b      	ldr	r3, [r5, #0]
    2d0c:	2b00      	cmp	r3, #0
    2d0e:	d1dc      	bne.n	2cca <xTaskResumeAll+0x42>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
    2d10:	b10c      	cbz	r4, 2d16 <xTaskResumeAll+0x8e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
    2d12:	f7ff fddd 	bl	28d0 <prvResetNextTaskUnblockTime>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    2d16:	4d14      	ldr	r5, [pc, #80]	; (2d68 <xTaskResumeAll+0xe0>)
    2d18:	682c      	ldr	r4, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
    2d1a:	b144      	cbz	r4, 2d2e <xTaskResumeAll+0xa6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    2d1c:	4e11      	ldr	r6, [pc, #68]	; (2d64 <xTaskResumeAll+0xdc>)
    2d1e:	2701      	movs	r7, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
    2d20:	f7ff ff20 	bl	2b64 <xTaskIncrementTick>
    2d24:	b100      	cbz	r0, 2d28 <xTaskResumeAll+0xa0>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    2d26:	6037      	str	r7, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
    2d28:	3c01      	subs	r4, #1
    2d2a:	d1f9      	bne.n	2d20 <xTaskResumeAll+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
    2d2c:	602c      	str	r4, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
    2d2e:	4b0d      	ldr	r3, [pc, #52]	; (2d64 <xTaskResumeAll+0xdc>)
    2d30:	681b      	ldr	r3, [r3, #0]
    2d32:	2b00      	cmp	r3, #0
    2d34:	d0ba      	beq.n	2cac <xTaskResumeAll+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
    2d36:	4b0d      	ldr	r3, [pc, #52]	; (2d6c <xTaskResumeAll+0xe4>)
    2d38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2d3c:	601a      	str	r2, [r3, #0]
    2d3e:	f3bf 8f4f 	dsb	sy
    2d42:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
    2d46:	2401      	movs	r4, #1
    2d48:	e7b1      	b.n	2cae <xTaskResumeAll+0x26>
    2d4a:	bf00      	nop
    2d4c:	10001258 	.word	0x10001258
    2d50:	0000b06f 	.word	0x0000b06f
    2d54:	10001250 	.word	0x10001250
    2d58:	10001298 	.word	0x10001298
    2d5c:	10001260 	.word	0x10001260
    2d60:	10001178 	.word	0x10001178
    2d64:	100012c8 	.word	0x100012c8
    2d68:	10001254 	.word	0x10001254
    2d6c:	e000ed04 	.word	0xe000ed04
    2d70:	10001184 	.word	0x10001184

00002d74 <vTaskDelay>:
vTaskDelay():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1334
	{
    2d74:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
    2d76:	b940      	cbnz	r0, 2d8a <vTaskDelay+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
    2d78:	4b0d      	ldr	r3, [pc, #52]	; (2db0 <vTaskDelay+0x3c>)
    2d7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2d7e:	601a      	str	r2, [r3, #0]
    2d80:	f3bf 8f4f 	dsb	sy
    2d84:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1371
	}
    2d88:	bd08      	pop	{r3, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
    2d8a:	4b0a      	ldr	r3, [pc, #40]	; (2db4 <vTaskDelay+0x40>)
    2d8c:	6819      	ldr	r1, [r3, #0]
    2d8e:	b129      	cbz	r1, 2d9c <vTaskDelay+0x28>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1340 (discriminator 1)
    2d90:	4909      	ldr	r1, [pc, #36]	; (2db8 <vTaskDelay+0x44>)
    2d92:	f240 503c 	movw	r0, #1340	; 0x53c
    2d96:	f7fe fc7b 	bl	1690 <configASSERT_callback>
    2d9a:	e7fe      	b.n	2d9a <vTaskDelay+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
    2d9c:	f7ff feda 	bl	2b54 <vTaskSuspendAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
    2da0:	f7ff fdf4 	bl	298c <prvAddCurrentTaskToDelayedList>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
    2da4:	f7ff ff70 	bl	2c88 <xTaskResumeAll>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
    2da8:	2800      	cmp	r0, #0
    2daa:	d0e5      	beq.n	2d78 <vTaskDelay+0x4>
    2dac:	e7ec      	b.n	2d88 <vTaskDelay+0x14>
    2dae:	bf00      	nop
    2db0:	e000ed04 	.word	0xe000ed04
    2db4:	10001258 	.word	0x10001258
    2db8:	0000af25 	.word	0x0000af25

00002dbc <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2948
{
    2dbc:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    2dbe:	4b27      	ldr	r3, [pc, #156]	; (2e5c <vTaskSwitchContext+0xa0>)
    2dc0:	681a      	ldr	r2, [r3, #0]
    2dc2:	4b27      	ldr	r3, [pc, #156]	; (2e60 <vTaskSwitchContext+0xa4>)
    2dc4:	b112      	cbz	r2, 2dcc <vTaskSwitchContext+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
    2dc6:	2201      	movs	r2, #1
    2dc8:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    2dca:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
    2dcc:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2965
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    2dce:	f7fe fc8b 	bl	16e8 <freertos_hooks__get_run_time_counter_value>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2975
			if( ulTotalRunTime > ulTaskSwitchedInTime )
    2dd2:	4a24      	ldr	r2, [pc, #144]	; (2e64 <vTaskSwitchContext+0xa8>)
    2dd4:	4c24      	ldr	r4, [pc, #144]	; (2e68 <vTaskSwitchContext+0xac>)
    2dd6:	6815      	ldr	r5, [r2, #0]
    2dd8:	42a8      	cmp	r0, r5
    2dda:	d904      	bls.n	2de6 <vTaskSwitchContext+0x2a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2977
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
    2ddc:	6821      	ldr	r1, [r4, #0]
    2dde:	6c8b      	ldr	r3, [r1, #72]	; 0x48
    2de0:	1b5b      	subs	r3, r3, r5
    2de2:	4403      	add	r3, r0
    2de4:	648b      	str	r3, [r1, #72]	; 0x48
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    2de6:	6823      	ldr	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2983
			ulTaskSwitchedInTime = ulTotalRunTime;
    2de8:	6010      	str	r0, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    2dea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    2dec:	681a      	ldr	r2, [r3, #0]
    2dee:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    2df2:	d10b      	bne.n	2e0c <vTaskSwitchContext+0x50>
    2df4:	685a      	ldr	r2, [r3, #4]
    2df6:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    2dfa:	d107      	bne.n	2e0c <vTaskSwitchContext+0x50>
    2dfc:	689a      	ldr	r2, [r3, #8]
    2dfe:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    2e02:	d103      	bne.n	2e0c <vTaskSwitchContext+0x50>
    2e04:	68db      	ldr	r3, [r3, #12]
    2e06:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
    2e0a:	d004      	beq.n	2e16 <vTaskSwitchContext+0x5a>
    2e0c:	6820      	ldr	r0, [r4, #0]
    2e0e:	6821      	ldr	r1, [r4, #0]
    2e10:	3134      	adds	r1, #52	; 0x34
    2e12:	f7fe fc1f 	bl	1654 <vApplicationStackOverflowHook>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2e16:	4b15      	ldr	r3, [pc, #84]	; (2e6c <vTaskSwitchContext+0xb0>)
    2e18:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
    2e1a:	fab3 f383 	clz	r3, r3
    2e1e:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
    2e20:	f1c3 031f 	rsb	r3, r3, #31
    2e24:	2214      	movs	r2, #20
    2e26:	4912      	ldr	r1, [pc, #72]	; (2e70 <vTaskSwitchContext+0xb4>)
    2e28:	435a      	muls	r2, r3
    2e2a:	1888      	adds	r0, r1, r2
    2e2c:	588d      	ldr	r5, [r1, r2]
    2e2e:	b92d      	cbnz	r5, 2e3c <vTaskSwitchContext+0x80>
    2e30:	4910      	ldr	r1, [pc, #64]	; (2e74 <vTaskSwitchContext+0xb8>)
    2e32:	f640 30b7 	movw	r0, #2999	; 0xbb7
    2e36:	f7fe fc2b 	bl	1690 <configASSERT_callback>
    2e3a:	e7fe      	b.n	2e3a <vTaskSwitchContext+0x7e>
    2e3c:	6845      	ldr	r5, [r0, #4]
    2e3e:	3208      	adds	r2, #8
    2e40:	686d      	ldr	r5, [r5, #4]
    2e42:	6045      	str	r5, [r0, #4]
    2e44:	440a      	add	r2, r1
    2e46:	4295      	cmp	r5, r2
    2e48:	bf04      	itt	eq
    2e4a:	686a      	ldreq	r2, [r5, #4]
    2e4c:	6042      	streq	r2, [r0, #4]
    2e4e:	2214      	movs	r2, #20
    2e50:	fb02 1303 	mla	r3, r2, r3, r1
    2e54:	685b      	ldr	r3, [r3, #4]
    2e56:	68db      	ldr	r3, [r3, #12]
    2e58:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
    2e5a:	e7b6      	b.n	2dca <vTaskSwitchContext+0xe>
    2e5c:	10001258 	.word	0x10001258
    2e60:	100012c8 	.word	0x100012c8
    2e64:	1000124c 	.word	0x1000124c
    2e68:	10001178 	.word	0x10001178
    2e6c:	10001260 	.word	0x10001260
    2e70:	10001184 	.word	0x10001184
    2e74:	0000af70 	.word	0x0000af70

00002e78 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
    2e78:	b510      	push	{r4, lr}
    2e7a:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3022
	configASSERT( pxEventList );
    2e7c:	b928      	cbnz	r0, 2e8a <vTaskPlaceOnEventList+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3022 (discriminator 1)
    2e7e:	4908      	ldr	r1, [pc, #32]	; (2ea0 <vTaskPlaceOnEventList+0x28>)
    2e80:	f640 30ce 	movw	r0, #3022	; 0xbce
    2e84:	f7fe fc04 	bl	1690 <configASSERT_callback>
    2e88:	e7fe      	b.n	2e88 <vTaskPlaceOnEventList+0x10>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    2e8a:	4b06      	ldr	r3, [pc, #24]	; (2ea4 <vTaskPlaceOnEventList+0x2c>)
    2e8c:	6819      	ldr	r1, [r3, #0]
    2e8e:	3118      	adds	r1, #24
    2e90:	f7fe fff0 	bl	1e74 <vListInsert>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    2e94:	4620      	mov	r0, r4
    2e96:	2101      	movs	r1, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3034
}
    2e98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    2e9c:	f7ff bd76 	b.w	298c <prvAddCurrentTaskToDelayedList>
    2ea0:	0000af3f 	.word	0x0000af3f
    2ea4:	10001178 	.word	0x10001178

00002ea8 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3095
{
    2ea8:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    2eaa:	68c3      	ldr	r3, [r0, #12]
    2eac:	68dc      	ldr	r4, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
    2eae:	b92c      	cbnz	r4, 2ebc <xTaskRemoveFromEventList+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3113 (discriminator 1)
    2eb0:	4916      	ldr	r1, [pc, #88]	; (2f0c <xTaskRemoveFromEventList+0x64>)
    2eb2:	f640 4029 	movw	r0, #3113	; 0xc29
    2eb6:	f7fe fbeb 	bl	1690 <configASSERT_callback>
    2eba:	e7fe      	b.n	2eba <xTaskRemoveFromEventList+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
    2ebc:	f104 0518 	add.w	r5, r4, #24
    2ec0:	4628      	mov	r0, r5
    2ec2:	f7fe ffee 	bl	1ea2 <uxListRemove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    2ec6:	4b12      	ldr	r3, [pc, #72]	; (2f10 <xTaskRemoveFromEventList+0x68>)
    2ec8:	681b      	ldr	r3, [r3, #0]
    2eca:	b9e3      	cbnz	r3, 2f06 <xTaskRemoveFromEventList+0x5e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    2ecc:	1d25      	adds	r5, r4, #4
    2ece:	4628      	mov	r0, r5
    2ed0:	f7fe ffe7 	bl	1ea2 <uxListRemove>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
    2ed4:	490f      	ldr	r1, [pc, #60]	; (2f14 <xTaskRemoveFromEventList+0x6c>)
    2ed6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2ed8:	6808      	ldr	r0, [r1, #0]
    2eda:	2301      	movs	r3, #1
    2edc:	4093      	lsls	r3, r2
    2ede:	4303      	orrs	r3, r0
    2ee0:	600b      	str	r3, [r1, #0]
    2ee2:	4b0d      	ldr	r3, [pc, #52]	; (2f18 <xTaskRemoveFromEventList+0x70>)
    2ee4:	2014      	movs	r0, #20
    2ee6:	4629      	mov	r1, r5
    2ee8:	fb00 3002 	mla	r0, r0, r2, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    2eec:	f7fe ffb6 	bl	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    2ef0:	4b0a      	ldr	r3, [pc, #40]	; (2f1c <xTaskRemoveFromEventList+0x74>)
    2ef2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    2ef4:	681b      	ldr	r3, [r3, #0]
    2ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    2ef8:	429a      	cmp	r2, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
    2efa:	bf83      	ittte	hi
    2efc:	4b08      	ldrhi	r3, [pc, #32]	; (2f20 <xTaskRemoveFromEventList+0x78>)
    2efe:	2001      	movhi	r0, #1
    2f00:	6018      	strhi	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
    2f02:	2000      	movls	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3159
}
    2f04:	bd38      	pop	{r3, r4, r5, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    2f06:	4629      	mov	r1, r5
    2f08:	4806      	ldr	r0, [pc, #24]	; (2f24 <xTaskRemoveFromEventList+0x7c>)
    2f0a:	e7ef      	b.n	2eec <xTaskRemoveFromEventList+0x44>
    2f0c:	0000b060 	.word	0x0000b060
    2f10:	10001258 	.word	0x10001258
    2f14:	10001260 	.word	0x10001260
    2f18:	10001184 	.word	0x10001184
    2f1c:	10001178 	.word	0x10001178
    2f20:	100012c8 	.word	0x100012c8
    2f24:	10001298 	.word	0x10001298

00002f28 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
    2f28:	4b03      	ldr	r3, [pc, #12]	; (2f38 <vTaskInternalSetTimeOutState+0x10>)
    2f2a:	681b      	ldr	r3, [r3, #0]
    2f2c:	6003      	str	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
    2f2e:	4b03      	ldr	r3, [pc, #12]	; (2f3c <vTaskInternalSetTimeOutState+0x14>)
    2f30:	681b      	ldr	r3, [r3, #0]
    2f32:	6043      	str	r3, [r0, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3213
}
    2f34:	4770      	bx	lr
    2f36:	bf00      	nop
    2f38:	10001294 	.word	0x10001294
    2f3c:	100012c4 	.word	0x100012c4

00002f40 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3217
{
    2f40:	b570      	push	{r4, r5, r6, lr}
    2f42:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3220
	configASSERT( pxTimeOut );
    2f44:	4605      	mov	r5, r0
    2f46:	b928      	cbnz	r0, 2f54 <xTaskCheckForTimeOut+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3220 (discriminator 1)
    2f48:	4916      	ldr	r1, [pc, #88]	; (2fa4 <xTaskCheckForTimeOut+0x64>)
    2f4a:	f640 4094 	movw	r0, #3220	; 0xc94
    2f4e:	f7fe fb9f 	bl	1690 <configASSERT_callback>
    2f52:	e7fe      	b.n	2f52 <xTaskCheckForTimeOut+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221
	configASSERT( pxTicksToWait );
    2f54:	b929      	cbnz	r1, 2f62 <xTaskCheckForTimeOut+0x22>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 1)
    2f56:	4914      	ldr	r1, [pc, #80]	; (2fa8 <xTaskCheckForTimeOut+0x68>)
    2f58:	f640 4095 	movw	r0, #3221	; 0xc95
    2f5c:	f7fe fb98 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 2)
    2f60:	e7fe      	b.n	2f60 <xTaskCheckForTimeOut+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
    2f62:	f7fe fe0f 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
    2f66:	4b11      	ldr	r3, [pc, #68]	; (2fac <xTaskCheckForTimeOut+0x6c>)
    2f68:	6819      	ldr	r1, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
    2f6a:	6823      	ldr	r3, [r4, #0]
    2f6c:	1c5a      	adds	r2, r3, #1
    2f6e:	d010      	beq.n	2f92 <xTaskCheckForTimeOut+0x52>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    2f70:	480f      	ldr	r0, [pc, #60]	; (2fb0 <xTaskCheckForTimeOut+0x70>)
    2f72:	682e      	ldr	r6, [r5, #0]
    2f74:	6800      	ldr	r0, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    2f76:	686a      	ldr	r2, [r5, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    2f78:	4286      	cmp	r6, r0
    2f7a:	d001      	beq.n	2f80 <xTaskCheckForTimeOut+0x40>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3251 (discriminator 1)
    2f7c:	428a      	cmp	r2, r1
    2f7e:	d90f      	bls.n	2fa0 <xTaskCheckForTimeOut+0x60>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    2f80:	1a88      	subs	r0, r1, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
    2f82:	4283      	cmp	r3, r0
    2f84:	d90a      	bls.n	2f9c <xTaskCheckForTimeOut+0x5c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
    2f86:	1a5b      	subs	r3, r3, r1
    2f88:	4413      	add	r3, r2
    2f8a:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
    2f8c:	4628      	mov	r0, r5
    2f8e:	f7ff ffcb 	bl	2f28 <vTaskInternalSetTimeOutState>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
    2f92:	2400      	movs	r4, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
    2f94:	f7fe fe18 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3276
}
    2f98:	4620      	mov	r0, r4
    2f9a:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
    2f9c:	2300      	movs	r3, #0
    2f9e:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
    2fa0:	2401      	movs	r4, #1
    2fa2:	e7f7      	b.n	2f94 <xTaskCheckForTimeOut+0x54>
    2fa4:	0000af61 	.word	0x0000af61
    2fa8:	0000afb7 	.word	0x0000afb7
    2fac:	100012c4 	.word	0x100012c4
    2fb0:	10001294 	.word	0x10001294

00002fb4 <vTaskMissedYield>:
vTaskMissedYield():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
    2fb4:	4b01      	ldr	r3, [pc, #4]	; (2fbc <vTaskMissedYield+0x8>)
    2fb6:	2201      	movs	r2, #1
    2fb8:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3282
}
    2fba:	4770      	bx	lr
    2fbc:	100012c8 	.word	0x100012c8

00002fc0 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
    2fc0:	4b05      	ldr	r3, [pc, #20]	; (2fd8 <xTaskGetSchedulerState+0x18>)
    2fc2:	681b      	ldr	r3, [r3, #0]
    2fc4:	b133      	cbz	r3, 2fd4 <xTaskGetSchedulerState+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    2fc6:	4b05      	ldr	r3, [pc, #20]	; (2fdc <xTaskGetSchedulerState+0x1c>)
    2fc8:	681b      	ldr	r3, [r3, #0]
    2fca:	2b00      	cmp	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
    2fcc:	bf0c      	ite	eq
    2fce:	2002      	moveq	r0, #2
    2fd0:	2000      	movne	r0, #0
    2fd2:	4770      	bx	lr
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
    2fd4:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3944
	}
    2fd6:	4770      	bx	lr
    2fd8:	100012ac 	.word	0x100012ac
    2fdc:	10001258 	.word	0x10001258

00002fe0 <xTaskPriorityInherit>:
xTaskPriorityInherit():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3952
	{
    2fe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3959
		if( pxMutexHolder != NULL )
    2fe4:	4604      	mov	r4, r0
    2fe6:	2800      	cmp	r0, #0
    2fe8:	d035      	beq.n	3056 <xTaskPriorityInherit+0x76>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
    2fea:	4a23      	ldr	r2, [pc, #140]	; (3078 <xTaskPriorityInherit+0x98>)
    2fec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    2fee:	6811      	ldr	r1, [r2, #0]
    2ff0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    2ff2:	428b      	cmp	r3, r1
    2ff4:	4617      	mov	r7, r2
    2ff6:	d236      	bcs.n	3066 <xTaskPriorityInherit+0x86>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    2ff8:	6982      	ldr	r2, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    2ffa:	4d20      	ldr	r5, [pc, #128]	; (307c <xTaskPriorityInherit+0x9c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    2ffc:	2a00      	cmp	r2, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2ffe:	bfa1      	itttt	ge
    3000:	683a      	ldrge	r2, [r7, #0]
    3002:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
    3004:	f1c2 020a 	rsbge	r2, r2, #10
    3008:	6182      	strge	r2, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    300a:	2614      	movs	r6, #20
    300c:	6942      	ldr	r2, [r0, #20]
    300e:	fb06 5303 	mla	r3, r6, r3, r5
    3012:	429a      	cmp	r2, r3
    3014:	d121      	bne.n	305a <xTaskPriorityInherit+0x7a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3016:	f100 0804 	add.w	r8, r0, #4
    301a:	4640      	mov	r0, r8
    301c:	f7fe ff41 	bl	1ea2 <uxListRemove>
    3020:	4b17      	ldr	r3, [pc, #92]	; (3080 <xTaskPriorityInherit+0xa0>)
    3022:	b948      	cbnz	r0, 3038 <xTaskPriorityInherit+0x58>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
    3024:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    3026:	4346      	muls	r6, r0
    3028:	59aa      	ldr	r2, [r5, r6]
    302a:	b92a      	cbnz	r2, 3038 <xTaskPriorityInherit+0x58>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3984 (discriminator 1)
    302c:	681a      	ldr	r2, [r3, #0]
    302e:	2101      	movs	r1, #1
    3030:	4081      	lsls	r1, r0
    3032:	ea22 0201 	bic.w	r2, r2, r1
    3036:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3038:	683a      	ldr	r2, [r7, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    303a:	6819      	ldr	r1, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    303c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    303e:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    3040:	2401      	movs	r4, #1
    3042:	fa04 f002 	lsl.w	r0, r4, r2
    3046:	4308      	orrs	r0, r1
    3048:	6018      	str	r0, [r3, #0]
    304a:	2014      	movs	r0, #20
    304c:	4641      	mov	r1, r8
    304e:	fb00 5002 	mla	r0, r0, r2, r5
    3052:	f7fe ff03 	bl	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
    3056:	4620      	mov	r0, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4030
		return xReturn;
    3058:	e003      	b.n	3062 <xTaskPriorityInherit+0x82>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    305a:	683b      	ldr	r3, [r7, #0]
    305c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    305e:	62c3      	str	r3, [r0, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4004
				xReturn = pdTRUE;
    3060:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4031
	}
    3062:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    3066:	6813      	ldr	r3, [r2, #0]
    3068:	6c00      	ldr	r0, [r0, #64]	; 0x40
    306a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    306c:	42a0      	cmp	r0, r4
    306e:	bf2c      	ite	cs
    3070:	2000      	movcs	r0, #0
    3072:	2001      	movcc	r0, #1
    3074:	e7f5      	b.n	3062 <xTaskPriorityInherit+0x82>
    3076:	bf00      	nop
    3078:	10001178 	.word	0x10001178
    307c:	10001184 	.word	0x10001184
    3080:	10001260 	.word	0x10001260

00003084 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4039
	{
    3084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
    3086:	4604      	mov	r4, r0
    3088:	b908      	cbnz	r0, 308e <xTaskPriorityDisinherit+0xa>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    308a:	2000      	movs	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4111
	}
    308c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
    308e:	4b1f      	ldr	r3, [pc, #124]	; (310c <xTaskPriorityDisinherit+0x88>)
    3090:	681b      	ldr	r3, [r3, #0]
    3092:	4283      	cmp	r3, r0
    3094:	d005      	beq.n	30a2 <xTaskPriorityDisinherit+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4049 (discriminator 1)
    3096:	491e      	ldr	r1, [pc, #120]	; (3110 <xTaskPriorityDisinherit+0x8c>)
    3098:	f640 70d1 	movw	r0, #4049	; 0xfd1
    309c:	f7fe faf8 	bl	1690 <configASSERT_callback>
    30a0:	e7fe      	b.n	30a0 <xTaskPriorityDisinherit+0x1c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
    30a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    30a4:	b92b      	cbnz	r3, 30b2 <xTaskPriorityDisinherit+0x2e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 1)
    30a6:	491b      	ldr	r1, [pc, #108]	; (3114 <xTaskPriorityDisinherit+0x90>)
    30a8:	f640 70d2 	movw	r0, #4050	; 0xfd2
    30ac:	f7fe faf0 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 2)
    30b0:	e7fe      	b.n	30b0 <xTaskPriorityDisinherit+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    30b2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    30b4:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    30b6:	3b01      	subs	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    30b8:	4291      	cmp	r1, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    30ba:	6443      	str	r3, [r0, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    30bc:	d0e5      	beq.n	308a <xTaskPriorityDisinherit+0x6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    30be:	2b00      	cmp	r3, #0
    30c0:	d1e3      	bne.n	308a <xTaskPriorityDisinherit+0x6>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    30c2:	1d05      	adds	r5, r0, #4
    30c4:	4628      	mov	r0, r5
    30c6:	f7fe feec 	bl	1ea2 <uxListRemove>
    30ca:	4e13      	ldr	r6, [pc, #76]	; (3118 <xTaskPriorityDisinherit+0x94>)
    30cc:	4a13      	ldr	r2, [pc, #76]	; (311c <xTaskPriorityDisinherit+0x98>)
    30ce:	b950      	cbnz	r0, 30e6 <xTaskPriorityDisinherit+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    30d0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    30d2:	2114      	movs	r1, #20
    30d4:	4379      	muls	r1, r7
    30d6:	5873      	ldr	r3, [r6, r1]
    30d8:	b92b      	cbnz	r3, 30e6 <xTaskPriorityDisinherit+0x62>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4067 (discriminator 1)
    30da:	6813      	ldr	r3, [r2, #0]
    30dc:	2001      	movs	r0, #1
    30de:	40b8      	lsls	r0, r7
    30e0:	ea23 0300 	bic.w	r3, r3, r0
    30e4:	6013      	str	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    30e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    30e8:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    30ea:	f1c3 010a 	rsb	r1, r3, #10
    30ee:	61a1      	str	r1, [r4, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    30f0:	6811      	ldr	r1, [r2, #0]
    30f2:	2401      	movs	r4, #1
    30f4:	fa04 f003 	lsl.w	r0, r4, r3
    30f8:	4308      	orrs	r0, r1
    30fa:	6010      	str	r0, [r2, #0]
    30fc:	2014      	movs	r0, #20
    30fe:	fb00 6003 	mla	r0, r0, r3, r6
    3102:	4629      	mov	r1, r5
    3104:	f7fe feaa 	bl	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
    3108:	4620      	mov	r0, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4110
		return xReturn;
    310a:	e7bf      	b.n	308c <xTaskPriorityDisinherit+0x8>
    310c:	10001178 	.word	0x10001178
    3110:	0000b035 	.word	0x0000b035
    3114:	0000b04b 	.word	0x0000b04b
    3118:	10001184 	.word	0x10001184
    311c:	10001260 	.word	0x10001260

00003120 <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4119
	{
    3120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4124
		if( pxMutexHolder != NULL )
    3122:	4604      	mov	r4, r0
    3124:	2800      	cmp	r0, #0
    3126:	d047      	beq.n	31b8 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4128
			configASSERT( pxTCB->uxMutexesHeld );
    3128:	6c42      	ldr	r2, [r0, #68]	; 0x44
    312a:	b92a      	cbnz	r2, 3138 <vTaskPriorityDisinheritAfterTimeout+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4128 (discriminator 1)
    312c:	4923      	ldr	r1, [pc, #140]	; (31bc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
    312e:	f44f 5081 	mov.w	r0, #4128	; 0x1020
    3132:	f7fe faad 	bl	1690 <configASSERT_callback>
    3136:	e7fe      	b.n	3136 <vTaskPriorityDisinheritAfterTimeout+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    3138:	6c03      	ldr	r3, [r0, #64]	; 0x40
    313a:	4299      	cmp	r1, r3
    313c:	bf38      	it	cc
    313e:	4619      	movcc	r1, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    3140:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    3142:	428b      	cmp	r3, r1
    3144:	d038      	beq.n	31b8 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    3146:	2a01      	cmp	r2, #1
    3148:	d136      	bne.n	31b8 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155
					configASSERT( pxTCB != pxCurrentTCB );
    314a:	4a1d      	ldr	r2, [pc, #116]	; (31c0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
    314c:	6812      	ldr	r2, [r2, #0]
    314e:	4282      	cmp	r2, r0
    3150:	d105      	bne.n	315e <vTaskPriorityDisinheritAfterTimeout+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 1)
    3152:	491c      	ldr	r1, [pc, #112]	; (31c4 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
    3154:	f241 003b 	movw	r0, #4155	; 0x103b
    3158:	f7fe fa9a 	bl	1690 <configASSERT_callback>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4155 (discriminator 2)
    315c:	e7fe      	b.n	315c <vTaskPriorityDisinheritAfterTimeout+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    315e:	6982      	ldr	r2, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3160:	4d19      	ldr	r5, [pc, #100]	; (31c8 <vTaskPriorityDisinheritAfterTimeout+0xa8>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    3162:	62c1      	str	r1, [r0, #44]	; 0x2c
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3164:	2a00      	cmp	r2, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3166:	f04f 0614 	mov.w	r6, #20
    316a:	6942      	ldr	r2, [r0, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    316c:	bfa8      	it	ge
    316e:	f1c1 010a 	rsbge	r1, r1, #10
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3172:	fb06 5303 	mla	r3, r6, r3, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3176:	bfa8      	it	ge
    3178:	6181      	strge	r1, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    317a:	429a      	cmp	r2, r3
    317c:	d11c      	bne.n	31b8 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    317e:	1d07      	adds	r7, r0, #4
    3180:	4638      	mov	r0, r7
    3182:	f7fe fe8e 	bl	1ea2 <uxListRemove>
    3186:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3188:	4c10      	ldr	r4, [pc, #64]	; (31cc <vTaskPriorityDisinheritAfterTimeout+0xac>)
    318a:	b940      	cbnz	r0, 319e <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    318c:	4356      	muls	r6, r2
    318e:	59ab      	ldr	r3, [r5, r6]
    3190:	b92b      	cbnz	r3, 319e <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4185 (discriminator 1)
    3192:	6823      	ldr	r3, [r4, #0]
    3194:	2101      	movs	r1, #1
    3196:	4091      	lsls	r1, r2
    3198:	ea23 0301 	bic.w	r3, r3, r1
    319c:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    319e:	6821      	ldr	r1, [r4, #0]
    31a0:	2301      	movs	r3, #1
    31a2:	4093      	lsls	r3, r2
    31a4:	430b      	orrs	r3, r1
    31a6:	2014      	movs	r0, #20
    31a8:	6023      	str	r3, [r4, #0]
    31aa:	4639      	mov	r1, r7
    31ac:	fb00 5002 	mla	r0, r0, r2, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    31b0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    31b4:	f7fe be52 	b.w	1e5c <vListInsertEnd>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    31b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    31ba:	bf00      	nop
    31bc:	0000b04b 	.word	0x0000b04b
    31c0:	10001178 	.word	0x10001178
    31c4:	0000af4b 	.word	0x0000af4b
    31c8:	10001184 	.word	0x10001184
    31cc:	10001260 	.word	0x10001260

000031d0 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    31d0:	4b04      	ldr	r3, [pc, #16]	; (31e4 <pvTaskIncrementMutexHeldCount+0x14>)
    31d2:	681a      	ldr	r2, [r3, #0]
    31d4:	b11a      	cbz	r2, 31de <pvTaskIncrementMutexHeldCount+0xe>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    31d6:	6819      	ldr	r1, [r3, #0]
    31d8:	6c4a      	ldr	r2, [r1, #68]	; 0x44
    31da:	3201      	adds	r2, #1
    31dc:	644a      	str	r2, [r1, #68]	; 0x44
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4558
		return pxCurrentTCB;
    31de:	6818      	ldr	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/source/tasks.c:4559
	}
    31e0:	4770      	bx	lr
    31e2:	bf00      	nop
    31e4:	10001178 	.word	0x10001178

000031e8 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:74
    portRESET_TIMER_FOR_RUN_TIME_STATS();
  }
  xTaskResumeAll();
}

void vRunTimeStatIsrEntry(void) {
    31e8:	b510      	push	{r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:75
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    31ea:	f7fe fa7d 	bl	16e8 <freertos_hooks__get_run_time_counter_value>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:78

  // Add the time spent in the previously running task's counter.
  if (NULL != pxCurrentTCB) {
    31ee:	4b06      	ldr	r3, [pc, #24]	; (3208 <vRunTimeStatIsrEntry+0x20>)
    31f0:	4a06      	ldr	r2, [pc, #24]	; (320c <vRunTimeStatIsrEntry+0x24>)
    31f2:	6819      	ldr	r1, [r3, #0]
    31f4:	b129      	cbz	r1, 3202 <vRunTimeStatIsrEntry+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:79
    pxCurrentTCB->ulRunTimeCounter += (ulTempCounter - ulTaskSwitchedInTime);
    31f6:	6819      	ldr	r1, [r3, #0]
    31f8:	6814      	ldr	r4, [r2, #0]
    31fa:	6c8b      	ldr	r3, [r1, #72]	; 0x48
    31fc:	1b1b      	subs	r3, r3, r4
    31fe:	4403      	add	r3, r0
    3200:	648b      	str	r3, [r1, #72]	; 0x48
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:83
  }

  // Save the current time to log how long the ISR is going to take.
  ulTaskSwitchedInTime = ulTempCounter;
    3202:	6010      	str	r0, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:84
}
    3204:	bd10      	pop	{r4, pc}
    3206:	bf00      	nop
    3208:	10001178 	.word	0x10001178
    320c:	1000124c 	.word	0x1000124c

00003210 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:85
void vRunTimeStatIsrExit(void) {
    3210:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:86
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    3212:	f7fe fa69 	bl	16e8 <freertos_hooks__get_run_time_counter_value>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:94
  // We don't need this because whatever is the "leftover" for the counters, that is
  // is the overhead itself!
  // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );

  // Save the current time so next time when task is switched out, it will use this time-stamp.
  ulTaskSwitchedInTime = ulTempCounter;
    3216:	4b01      	ldr	r3, [pc, #4]	; (321c <vRunTimeStatIsrExit+0xc>)
    3218:	6018      	str	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l1_freertos/freertos_tasks.mods:95
}
    321a:	bd08      	pop	{r3, pc}
    321c:	1000124c 	.word	0x1000124c

00003220 <board_io__initialize>:
board_io__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:36
static const uint32_t board_io__sd_card_cs_pin = (1 << 8);
static const uint32_t board_io__sd_card_detect_pin = (1 << 9);
static gpio_s board_io__led0, board_io__led1, board_io__led2, board_io__led3;
static gpio_s board_io__sw0, board_io__sw1, board_io__sw2, board_io__sw3;

void board_io__initialize(void) {
    3220:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:39
  // Note: return type of gpio__construct_with_function() because we do not need GPIO instance after its configuration

  gpio__construct_with_function(GPIO__PORT_0, 2, GPIO__FUNCTION_1); // P0.2 - Uart-0 Tx
    3222:	2201      	movs	r2, #1
    3224:	2102      	movs	r1, #2
    3226:	2000      	movs	r0, #0
    3228:	f000 f8c3 	bl	33b2 <gpio__construct_with_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:40
  gpio__construct_with_function(GPIO__PORT_0, 3, GPIO__FUNCTION_1); // P0.3 - Uart-0 Rx
    322c:	2201      	movs	r2, #1
    322e:	2103      	movs	r1, #3
    3230:	2000      	movs	r0, #0
    3232:	f000 f8be 	bl	33b2 <gpio__construct_with_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:43

  // SPI bus 2 (SSP2)
  gpio__construct_with_function(GPIO__PORT_1, 0, GPIO__FUNCTION_4); // P1.0 - SCK2
    3236:	2204      	movs	r2, #4
    3238:	2100      	movs	r1, #0
    323a:	2001      	movs	r0, #1
    323c:	f000 f8b9 	bl	33b2 <gpio__construct_with_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:44
  gpio__construct_with_function(GPIO__PORT_1, 1, GPIO__FUNCTION_4); // P1.1 - MOSI2
    3240:	2101      	movs	r1, #1
    3242:	2204      	movs	r2, #4
    3244:	4608      	mov	r0, r1
    3246:	f000 f8b4 	bl	33b2 <gpio__construct_with_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:45
  gpio__construct_with_function(GPIO__PORT_1, 4, GPIO__FUNCTION_4); // P1.4 - MISO2
    324a:	2204      	movs	r2, #4
    324c:	4611      	mov	r1, r2
    324e:	2001      	movs	r0, #1
    3250:	f000 f8af 	bl	33b2 <gpio__construct_with_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:48

  // SD card
  gpio__construct_as_output(GPIO__PORT_1, 8); // SD card CS
    3254:	2108      	movs	r1, #8
    3256:	2001      	movs	r0, #1
    3258:	f000 f91a 	bl	3490 <gpio__construct_as_output>
board_io__sd_card_ds():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:79
  gpio__enable_pull_down_resistors(board_io__sw1);
}

// Note: Not using gpio.h API here to optimize the speed of SSP CS selection
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    325c:	4b28      	ldr	r3, [pc, #160]	; (3300 <board_io__initialize+0xe0>)
    325e:	f44f 7280 	mov.w	r2, #256	; 0x100
    3262:	619a      	str	r2, [r3, #24]
board_io__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:50
  gpio__construct_as_input(GPIO__PORT_1, 9); // SD card detect
    3264:	2109      	movs	r1, #9
    3266:	2001      	movs	r0, #1
    3268:	f000 f8ee 	bl	3448 <gpio__construct_as_input>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:53
  const gpio_s sda_2 = gpio__construct_with_function(GPIO__PORT_0, 10, GPIO__FUNCTION_2); // P0.10 - SDA
    326c:	2202      	movs	r2, #2
    326e:	210a      	movs	r1, #10
    3270:	2000      	movs	r0, #0
    3272:	f000 f89e 	bl	33b2 <gpio__construct_with_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:54
  const gpio_s scl_2 = gpio__construct_with_function(GPIO__PORT_0, 11, GPIO__FUNCTION_2); // P0.11 - SCL
    3276:	2202      	movs	r2, #2
    3278:	210b      	movs	r1, #11
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:53
  const gpio_s sda_2 = gpio__construct_with_function(GPIO__PORT_0, 10, GPIO__FUNCTION_2); // P0.10 - SDA
    327a:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:54
  const gpio_s scl_2 = gpio__construct_with_function(GPIO__PORT_0, 11, GPIO__FUNCTION_2); // P0.11 - SCL
    327c:	2000      	movs	r0, #0
    327e:	f000 f898 	bl	33b2 <gpio__construct_with_function>
    3282:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:55
  gpio__enable_open_drain(sda_2);
    3284:	4628      	mov	r0, r5
    3286:	f000 f8a9 	bl	33dc <gpio__enable_open_drain>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:56
  gpio__enable_open_drain(scl_2);
    328a:	4620      	mov	r0, r4
    328c:	f000 f8a6 	bl	33dc <gpio__enable_open_drain>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    3290:	2103      	movs	r1, #3
    3292:	2002      	movs	r0, #2
    3294:	f000 f8fc 	bl	3490 <gpio__construct_as_output>
    3298:	4b1a      	ldr	r3, [pc, #104]	; (3304 <board_io__initialize+0xe4>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:65
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    329a:	4d1b      	ldr	r5, [pc, #108]	; (3308 <board_io__initialize+0xe8>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:59
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    329c:	7018      	strb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:60
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    329e:	211a      	movs	r1, #26
    32a0:	2001      	movs	r0, #1
    32a2:	f000 f8f5 	bl	3490 <gpio__construct_as_output>
    32a6:	4b19      	ldr	r3, [pc, #100]	; (330c <board_io__initialize+0xec>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:66
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    32a8:	4c19      	ldr	r4, [pc, #100]	; (3310 <board_io__initialize+0xf0>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:60
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    32aa:	7018      	strb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    32ac:	2118      	movs	r1, #24
    32ae:	2001      	movs	r0, #1
    32b0:	f000 f8ee 	bl	3490 <gpio__construct_as_output>
    32b4:	4b17      	ldr	r3, [pc, #92]	; (3314 <board_io__initialize+0xf4>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:62
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    32b6:	2112      	movs	r1, #18
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:61
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    32b8:	7018      	strb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:62
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    32ba:	2001      	movs	r0, #1
    32bc:	f000 f8e8 	bl	3490 <gpio__construct_as_output>
    32c0:	4b15      	ldr	r3, [pc, #84]	; (3318 <board_io__initialize+0xf8>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:65
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    32c2:	2113      	movs	r1, #19
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:62
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    32c4:	7018      	strb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:65
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    32c6:	2001      	movs	r0, #1
    32c8:	f000 f8be 	bl	3448 <gpio__construct_as_input>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:66
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    32cc:	210f      	movs	r1, #15
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:65
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    32ce:	7028      	strb	r0, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:66
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    32d0:	2001      	movs	r0, #1
    32d2:	f000 f8b9 	bl	3448 <gpio__construct_as_input>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    32d6:	211e      	movs	r1, #30
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:66
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    32d8:	7020      	strb	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    32da:	2000      	movs	r0, #0
    32dc:	f000 f8b4 	bl	3448 <gpio__construct_as_input>
    32e0:	4b0e      	ldr	r3, [pc, #56]	; (331c <board_io__initialize+0xfc>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    32e2:	211d      	movs	r1, #29
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:67
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    32e4:	7018      	strb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:68
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    32e6:	2000      	movs	r0, #0
    32e8:	f000 f8ae 	bl	3448 <gpio__construct_as_input>
    32ec:	4b0c      	ldr	r3, [pc, #48]	; (3320 <board_io__initialize+0x100>)
    32ee:	7018      	strb	r0, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:73
  gpio__enable_pull_down_resistors(board_io__sw0);
    32f0:	7828      	ldrb	r0, [r5, #0]
    32f2:	f000 f883 	bl	33fc <gpio__enable_pull_down_resistors>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  gpio__enable_pull_down_resistors(board_io__sw1);
    32f6:	7820      	ldrb	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:75
}
    32f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:74
  gpio__enable_pull_down_resistors(board_io__sw1);
    32fc:	f000 b87e 	b.w	33fc <gpio__enable_pull_down_resistors>
    3300:	20098020 	.word	0x20098020
    3304:	100012cc 	.word	0x100012cc
    3308:	100012d0 	.word	0x100012d0
    330c:	100012cd 	.word	0x100012cd
    3310:	100012d1 	.word	0x100012d1
    3314:	100012ce 	.word	0x100012ce
    3318:	100012cf 	.word	0x100012cf
    331c:	100012d2 	.word	0x100012d2
    3320:	100012d3 	.word	0x100012d3

00003324 <board_io__sd_card_cs>:
board_io__sd_card_cs():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:78
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
    3324:	4b02      	ldr	r3, [pc, #8]	; (3330 <board_io__sd_card_cs+0xc>)
    3326:	f44f 7280 	mov.w	r2, #256	; 0x100
    332a:	61da      	str	r2, [r3, #28]
    332c:	4770      	bx	lr
    332e:	bf00      	nop
    3330:	20098020 	.word	0x20098020

00003334 <board_io__sd_card_ds>:
board_io__sd_card_ds():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:79
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    3334:	4b02      	ldr	r3, [pc, #8]	; (3340 <board_io__sd_card_ds+0xc>)
    3336:	f44f 7280 	mov.w	r2, #256	; 0x100
    333a:	619a      	str	r2, [r3, #24]
    333c:	4770      	bx	lr
    333e:	bf00      	nop
    3340:	20098020 	.word	0x20098020

00003344 <board_io__sd_card_is_present>:
board_io__sd_card_is_present():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:82

bool board_io__sd_card_is_present(void) {
  const uint32_t card_present_bitmask = (LPC_GPIO1->PIN & board_io__sd_card_detect_pin);
    3344:	4b03      	ldr	r3, [pc, #12]	; (3354 <board_io__sd_card_is_present+0x10>)
    3346:	6958      	ldr	r0, [r3, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:83
  return (0 == card_present_bitmask); // Signal is active low
    3348:	f480 7000 	eor.w	r0, r0, #512	; 0x200
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:84
}
    334c:	f3c0 2040 	ubfx	r0, r0, #9, #1
    3350:	4770      	bx	lr
    3352:	bf00      	nop
    3354:	20098020 	.word	0x20098020

00003358 <board_io__get_led0>:
board_io__get_led0():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:86

gpio_s board_io__get_led0(void) { return board_io__led0; }
    3358:	4b01      	ldr	r3, [pc, #4]	; (3360 <board_io__get_led0+0x8>)
    335a:	7818      	ldrb	r0, [r3, #0]
    335c:	4770      	bx	lr
    335e:	bf00      	nop
    3360:	100012cc 	.word	0x100012cc

00003364 <board_io__get_led1>:
board_io__get_led1():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:87
gpio_s board_io__get_led1(void) { return board_io__led1; }
    3364:	4b01      	ldr	r3, [pc, #4]	; (336c <board_io__get_led1+0x8>)
    3366:	7818      	ldrb	r0, [r3, #0]
    3368:	4770      	bx	lr
    336a:	bf00      	nop
    336c:	100012cd 	.word	0x100012cd

00003370 <board_io__get_led2>:
board_io__get_led2():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:88
gpio_s board_io__get_led2(void) { return board_io__led2; }
    3370:	4b01      	ldr	r3, [pc, #4]	; (3378 <board_io__get_led2+0x8>)
    3372:	7818      	ldrb	r0, [r3, #0]
    3374:	4770      	bx	lr
    3376:	bf00      	nop
    3378:	100012ce 	.word	0x100012ce

0000337c <board_io__get_led3>:
board_io__get_led3():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/board_io.c:89
gpio_s board_io__get_led3(void) { return board_io__led3; }
    337c:	4b01      	ldr	r3, [pc, #4]	; (3384 <board_io__get_led3+0x8>)
    337e:	7818      	ldrb	r0, [r3, #0]
    3380:	4770      	bx	lr
    3382:	bf00      	nop
    3384:	100012cf 	.word	0x100012cf

00003388 <gpio__set_function>:
gpio__get_iocon():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:18

  // Each port is offset by thirty-two 32-bit registers
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);

  // Each pin configuration is a single 32-bit
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3388:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:15
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    338c:	f000 0207 	and.w	r2, r0, #7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3390:	009b      	lsls	r3, r3, #2
    3392:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    3396:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    339a:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__set_function():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:62
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_iocon &= ~(config_mask << 0);
  *pin_iocon |= ((uint32_t)function & config_mask);
    339e:	f001 0107 	and.w	r1, r1, #7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:61
  *pin_iocon &= ~(config_mask << 0);
    33a2:	681a      	ldr	r2, [r3, #0]
    33a4:	f022 0207 	bic.w	r2, r2, #7
    33a8:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:62
  *pin_iocon |= ((uint32_t)function & config_mask);
    33aa:	681a      	ldr	r2, [r3, #0]
    33ac:	4311      	orrs	r1, r2
    33ae:	6019      	str	r1, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:63
}
    33b0:	4770      	bx	lr

000033b2 <gpio__construct_with_function>:
gpio__construct_with_function():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:50
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    33b2:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:31
      .port_number = (uint8_t)port,
    33b4:	f000 0507 	and.w	r5, r0, #7
gpio__construct_with_function():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_function(gpio, function);
    33b8:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:30
  gpio_s gpio = {
    33bc:	f001 041f 	and.w	r4, r1, #31
gpio__construct_with_function():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:52
  gpio__set_function(gpio, function);
    33c0:	f365 0002 	bfi	r0, r5, #0, #3
    33c4:	f364 00c7 	bfi	r0, r4, #3, #5
    33c8:	4611      	mov	r1, r2
    33ca:	f7ff ffdd 	bl	3388 <gpio__set_function>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:53
  return gpio;
    33ce:	f04f 0000 	mov.w	r0, #0
    33d2:	f365 0002 	bfi	r0, r5, #0, #3
    33d6:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:54
}
    33da:	bd38      	pop	{r3, r4, r5, pc}

000033dc <gpio__enable_open_drain>:
gpio__get_iocon():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    33dc:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:15
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    33e0:	f000 0207 	and.w	r2, r0, #7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    33e4:	009b      	lsls	r3, r3, #2
    33e6:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    33ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    33ee:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_open_drain():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:67

void gpio__enable_open_drain(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);
  *pin_iocon |= (UINT32_C(1) << 10);
    33f2:	681a      	ldr	r2, [r3, #0]
    33f4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    33f8:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:68
}
    33fa:	4770      	bx	lr

000033fc <gpio__enable_pull_down_resistors>:
gpio__get_iocon():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    33fc:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:15
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    3400:	f000 0207 	and.w	r2, r0, #7
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:18
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    3404:	009b      	lsls	r3, r3, #2
    3406:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    340a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    340e:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_pull_down_resistors():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:74

void gpio__enable_pull_down_resistors(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  const uint32_t mode_mask = UINT32_C(3);
  *pin_iocon &= ~(mode_mask << 3);
    3412:	681a      	ldr	r2, [r3, #0]
    3414:	f022 0218 	bic.w	r2, r2, #24
    3418:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:75
  *pin_iocon |= (UINT32_C(1) << 3);
    341a:	681a      	ldr	r2, [r3, #0]
    341c:	f042 0208 	orr.w	r2, r2, #8
    3420:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:76
}
    3422:	4770      	bx	lr

00003424 <gpio__set_as_input>:
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3424:	f000 0207 	and.w	r2, r0, #7
    3428:	4b06      	ldr	r3, [pc, #24]	; (3444 <gpio__set_as_input+0x20>)
    342a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    342e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__set_as_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:78

void gpio__set_as_input(gpio_s gpio) { gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio); }
    3432:	680b      	ldr	r3, [r1, #0]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3434:	2201      	movs	r2, #1
    3436:	fa02 f000 	lsl.w	r0, r2, r0
gpio__set_as_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:78
void gpio__set_as_input(gpio_s gpio) { gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio); }
    343a:	ea23 0300 	bic.w	r3, r3, r0
    343e:	600b      	str	r3, [r1, #0]
    3440:	4770      	bx	lr
    3442:	bf00      	nop
    3444:	0000b084 	.word	0x0000b084

00003448 <gpio__construct_as_input>:
gpio__construct_as_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:38
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3448:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:31
      .port_number = (uint8_t)port,
    344a:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:40
  gpio__set_as_input(gpio);
    344e:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:30
  gpio_s gpio = {
    3452:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_input():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:40
  gpio__set_as_input(gpio);
    3456:	f365 0002 	bfi	r0, r5, #0, #3
    345a:	f364 00c7 	bfi	r0, r4, #3, #5
    345e:	f7ff ffe1 	bl	3424 <gpio__set_as_input>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:41
  return gpio;
    3462:	f04f 0000 	mov.w	r0, #0
    3466:	f365 0002 	bfi	r0, r5, #0, #3
    346a:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:42
}
    346e:	bd38      	pop	{r3, r4, r5, pc}

00003470 <gpio__set_as_output>:
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3470:	f000 0207 	and.w	r2, r0, #7
    3474:	4b05      	ldr	r3, [pc, #20]	; (348c <gpio__set_as_output+0x1c>)
    3476:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    347a:	f3c0 03c4 	ubfx	r3, r0, #3, #5
gpio__set_as_output():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:80

void gpio__set_as_output(gpio_s gpio) { gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio); }
    347e:	6811      	ldr	r1, [r2, #0]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3480:	2001      	movs	r0, #1
    3482:	4098      	lsls	r0, r3
gpio__set_as_output():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:80
void gpio__set_as_output(gpio_s gpio) { gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio); }
    3484:	4308      	orrs	r0, r1
    3486:	6010      	str	r0, [r2, #0]
    3488:	4770      	bx	lr
    348a:	bf00      	nop
    348c:	0000b084 	.word	0x0000b084

00003490 <gpio__construct_as_output>:
gpio__construct_as_output():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:44
gpio_s gpio__construct_as_output(gpio__port_e port, uint8_t pin_number_0_to_31) {
    3490:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:31
      .port_number = (uint8_t)port,
    3492:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_output():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  gpio__set_as_output(gpio);
    3496:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:30
  gpio_s gpio = {
    349a:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_output():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:46
  gpio__set_as_output(gpio);
    349e:	f365 0002 	bfi	r0, r5, #0, #3
    34a2:	f364 00c7 	bfi	r0, r4, #3, #5
    34a6:	f7ff ffe3 	bl	3470 <gpio__set_as_output>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:47
  return gpio;
    34aa:	f04f 0000 	mov.w	r0, #0
    34ae:	f365 0002 	bfi	r0, r5, #0, #3
    34b2:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:48
}
    34b6:	bd38      	pop	{r3, r4, r5, pc}

000034b8 <gpio__get>:
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    34b8:	f000 0207 	and.w	r2, r0, #7
    34bc:	4b06      	ldr	r3, [pc, #24]	; (34d8 <gpio__get+0x20>)
    34be:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    34c2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:82

bool gpio__get(gpio_s gpio) { return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio)); }
    34c6:	695a      	ldr	r2, [r3, #20]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    34c8:	2301      	movs	r3, #1
    34ca:	fa03 f000 	lsl.w	r0, r3, r0
gpio__get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:82
bool gpio__get(gpio_s gpio) { return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio)); }
    34ce:	4210      	tst	r0, r2
    34d0:	bf14      	ite	ne
    34d2:	4618      	movne	r0, r3
    34d4:	2000      	moveq	r0, #0
    34d6:	4770      	bx	lr
    34d8:	0000b084 	.word	0x0000b084

000034dc <gpio__set>:
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    34dc:	f000 0207 	and.w	r2, r0, #7
    34e0:	4b04      	ldr	r3, [pc, #16]	; (34f4 <gpio__set+0x18>)
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    34e2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    34e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    34ea:	2301      	movs	r3, #1
    34ec:	fa03 f000 	lsl.w	r0, r3, r0
gpio__set():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:84

void gpio__set(gpio_s gpio) { gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio); }
    34f0:	6190      	str	r0, [r2, #24]
    34f2:	4770      	bx	lr
    34f4:	0000b084 	.word	0x0000b084

000034f8 <gpio__reset>:
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    34f8:	f000 0207 	and.w	r2, r0, #7
    34fc:	4b04      	ldr	r3, [pc, #16]	; (3510 <gpio__reset+0x18>)
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    34fe:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:7
static LPC_GPIO_TypeDef *gpio__get_struct(gpio_s gpio) { return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number]; }
    3502:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:9
static uint32_t gpio__get_pin_mask(gpio_s gpio) { return (UINT32_C(1) << gpio.pin_number); }
    3506:	2301      	movs	r3, #1
    3508:	fa03 f000 	lsl.w	r0, r3, r0
gpio__reset():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:86

void gpio__reset(gpio_s gpio) { gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio); }
    350c:	61d0      	str	r0, [r2, #28]
    350e:	4770      	bx	lr
    3510:	0000b084 	.word	0x0000b084

00003514 <gpio__toggle>:
gpio__toggle():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:88

void gpio__toggle(gpio_s gpio) {
    3514:	b508      	push	{r3, lr}
    3516:	4601      	mov	r1, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:90
  // Avoiding XOR logic with PIN register to make it thread safe
  if (gpio__get(gpio)) {
    3518:	f7ff ffce 	bl	34b8 <gpio__get>
    351c:	b120      	cbz	r0, 3528 <gpio__toggle+0x14>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:91
    gpio__reset(gpio);
    351e:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:95
  } else {
    gpio__set(gpio);
  }
}
    3520:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:91
    gpio__reset(gpio);
    3524:	f7ff bfe8 	b.w	34f8 <gpio__reset>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:93
    gpio__set(gpio);
    3528:	4608      	mov	r0, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:95
}
    352a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/gpio.c:93
    gpio__set(gpio);
    352e:	f7ff bfd5 	b.w	34dc <gpio__set>
    3532:	Address 0x0000000000003532 is out of bounds.


00003534 <hw_timer__enable>:
hw_timer__enable():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:19
    {LPC_TIM1, LPC_PERIPHERAL__TIMER1, "HW_T1"},
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2, "HW_T2"},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3, "HW_T3"},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    3534:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:21
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    3538:	4f0f      	ldr	r7, [pc, #60]	; (3578 <hw_timer__enable+0x44>)
    353a:	240c      	movs	r4, #12
    353c:	4344      	muls	r4, r0
    353e:	193e      	adds	r6, r7, r4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:19
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    3540:	4688      	mov	r8, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:21
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    3542:	7935      	ldrb	r5, [r6, #4]
    3544:	4628      	mov	r0, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:19
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    3546:	4691      	mov	r9, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:21
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    3548:	f000 fa0a 	bl	3960 <lpc_peripheral__turn_on_power_to>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:23

  hw_timers[timer].registers->TCR = 0;
    354c:	593c      	ldr	r4, [r7, r4]
    354e:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:26
  hw_timers[timer].registers->TC = 0;

  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    3550:	223f      	movs	r2, #63	; 0x3f
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:23
  hw_timers[timer].registers->TCR = 0;
    3552:	6063      	str	r3, [r4, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:36
  hw_timers[timer].registers->MR3 = 0;

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback, hw_timers[timer].rtos_isr_trace_name);
    3554:	4649      	mov	r1, r9
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:24
  hw_timers[timer].registers->TC = 0;
    3556:	60a3      	str	r3, [r4, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:36
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback, hw_timers[timer].rtos_isr_trace_name);
    3558:	4628      	mov	r0, r5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:26
  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    355a:	6022      	str	r2, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->MCR = 0;   // Clear all match register settings
    355c:	6163      	str	r3, [r4, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:36
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback, hw_timers[timer].rtos_isr_trace_name);
    355e:	68b2      	ldr	r2, [r6, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:28
  hw_timers[timer].registers->MR0 = 0;
    3560:	61a3      	str	r3, [r4, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:29
  hw_timers[timer].registers->MR1 = 0;
    3562:	61e3      	str	r3, [r4, #28]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:30
  hw_timers[timer].registers->MR2 = 0;
    3564:	6223      	str	r3, [r4, #32]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:31
  hw_timers[timer].registers->MR3 = 0;
    3566:	6263      	str	r3, [r4, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:36
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback, hw_timers[timer].rtos_isr_trace_name);
    3568:	f000 fa1e 	bl	39a8 <lpc_peripheral__enable_interrupt>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:39

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    356c:	2301      	movs	r3, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:38
  hw_timers[timer].registers->PR = prescalar_divider;
    356e:	f8c4 800c 	str.w	r8, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:39
  hw_timers[timer].registers->TCR = 1; // Enable
    3572:	6063      	str	r3, [r4, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:40
}
    3574:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    3578:	0000b09c 	.word	0x0000b09c

0000357c <hw_timer__enable_match_isr>:
hw_timer__enable_match_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:44

void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    357c:	230c      	movs	r3, #12
    357e:	4358      	muls	r0, r3
    3580:	4b06      	ldr	r3, [pc, #24]	; (359c <hw_timer__enable_match_isr+0x20>)
    3582:	581b      	ldr	r3, [r3, r0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:42
void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
    3584:	b530      	push	{r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:44
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    3586:	2001      	movs	r0, #1
    3588:	695c      	ldr	r4, [r3, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:43
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    358a:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:44
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    358e:	40a8      	lsls	r0, r5
    3590:	4320      	orrs	r0, r4
    3592:	6158      	str	r0, [r3, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:47

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    3594:	3318      	adds	r3, #24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:50
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    3596:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:51
}
    359a:	bd30      	pop	{r4, r5, pc}
    359c:	0000b09c 	.word	0x0000b09c

000035a0 <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:54

void hw_timer__acknowledge_interrupt(lpc_timer_e timer, lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    35a0:	230c      	movs	r3, #12
    35a2:	4358      	muls	r0, r3
    35a4:	4b03      	ldr	r3, [pc, #12]	; (35b4 <hw_timer__acknowledge_interrupt+0x14>)
    35a6:	581a      	ldr	r2, [r3, r0]
    35a8:	2301      	movs	r3, #1
    35aa:	fa03 f101 	lsl.w	r1, r3, r1
    35ae:	6011      	str	r1, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:55
}
    35b0:	4770      	bx	lr
    35b2:	bf00      	nop
    35b4:	0000b09c 	.word	0x0000b09c

000035b8 <hw_timer__get_value>:
hw_timer__get_value():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:57

uint32_t hw_timer__get_value(lpc_timer_e timer) { return hw_timers[timer].registers->TC; }
    35b8:	230c      	movs	r3, #12
    35ba:	4358      	muls	r0, r3
    35bc:	4b01      	ldr	r3, [pc, #4]	; (35c4 <hw_timer__get_value+0xc>)
    35be:	581b      	ldr	r3, [r3, r0]
    35c0:	6898      	ldr	r0, [r3, #8]
    35c2:	4770      	bx	lr
    35c4:	0000b09c 	.word	0x0000b09c

000035c8 <hw_timer__set_value>:
hw_timer__set_value():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/hw_timer.c:59

void hw_timer__set_value(lpc_timer_e timer, uint32_t tc_value) { hw_timers[timer].registers->TC = tc_value; }
    35c8:	230c      	movs	r3, #12
    35ca:	4358      	muls	r0, r3
    35cc:	4b01      	ldr	r3, [pc, #4]	; (35d4 <hw_timer__set_value+0xc>)
    35ce:	581b      	ldr	r3, [r3, r0]
    35d0:	6099      	str	r1, [r3, #8]
    35d2:	4770      	bx	lr
    35d4:	0000b09c 	.word	0x0000b09c

000035d8 <i2c__transfer_unprotected>:
i2c__transfer_unprotected():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:217
  return status;
}

static bool i2c__transfer_unprotected(i2c_s *i2c, uint8_t slave_address, uint8_t starting_slave_memory_address,
                                      uint8_t *input_byte_pointer, const uint8_t *output_byte_pointer,
                                      uint32_t number_of_bytes_to_transfer) {
    35d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    35dc:	4604      	mov	r4, r0
    35de:	4617      	mov	r7, r2
    35e0:	461e      	mov	r6, r3
    35e2:	4688      	mov	r8, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:220
  bool status = false;
  const uint32_t timeout_ms = 3000;
  const bool rtos_is_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    35e4:	f7ff fcec 	bl	2fc0 <xTaskGetSchedulerState>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:222

  xSemaphoreTake(i2c->transfer_complete_signal, 0); // Clear potential stale transfer complete signal
    35e8:	2100      	movs	r1, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:220
  const bool rtos_is_running = (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    35ea:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:222
  xSemaphoreTake(i2c->transfer_complete_signal, 0); // Clear potential stale transfer complete signal
    35ec:	68a0      	ldr	r0, [r4, #8]
    35ee:	f7fe ffc1 	bl	2574 <xQueueSemaphoreTake>
i2c__kick_off_transfer():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:245
}

static void i2c__kick_off_transfer(i2c_s *i2c, uint8_t slave_address, uint8_t starting_slave_memory_address,
                                   uint8_t *input_byte_pointer, const uint8_t *output_byte_pointer,
                                   uint32_t number_of_bytes_to_transfer) {
  i2c->error_code = 0;
    35f2:	2300      	movs	r3, #0
    35f4:	7423      	strb	r3, [r4, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:250
  i2c->slave_address = slave_address;
  i2c->starting_slave_memory_address = starting_slave_memory_address;

  i2c->input_byte_pointer = input_byte_pointer;
  i2c->output_byte_pointer = output_byte_pointer;
    35f6:	9b06      	ldr	r3, [sp, #24]
    35f8:	61a3      	str	r3, [r4, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:251
  i2c->number_of_bytes_to_transfer = number_of_bytes_to_transfer;
    35fa:	9b07      	ldr	r3, [sp, #28]
    35fc:	61e3      	str	r3, [r4, #28]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:255

  // Send START, I2C State Machine will finish the rest through interrupts; @see i2c__handle_state_machine()
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X", (unsigned)slave_address);
  i2c__set_start_flag(i2c->registers);
    35fe:	6823      	ldr	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:246
  i2c->slave_address = slave_address;
    3600:	f884 8011 	strb.w	r8, [r4, #17]
i2c__set_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    3604:	2220      	movs	r2, #32
i2c__transfer_unprotected():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:227
  if (rtos_is_running) {
    3606:	2d02      	cmp	r5, #2
i2c__kick_off_transfer():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:247
  i2c->starting_slave_memory_address = starting_slave_memory_address;
    3608:	74a7      	strb	r7, [r4, #18]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:249
  i2c->input_byte_pointer = input_byte_pointer;
    360a:	6166      	str	r6, [r4, #20]
i2c__set_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    360c:	601a      	str	r2, [r3, #0]
i2c__transfer_unprotected():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:227
  if (rtos_is_running) {
    360e:	d10b      	bne.n	3628 <i2c__transfer_unprotected+0x50>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:229
    if (xSemaphoreTake(i2c->transfer_complete_signal, timeout_ms)) {
    3610:	f640 31b8 	movw	r1, #3000	; 0xbb8
    3614:	68a0      	ldr	r0, [r4, #8]
    3616:	f7fe ffad 	bl	2574 <xQueueSemaphoreTake>
    361a:	b118      	cbz	r0, 3624 <i2c__transfer_unprotected+0x4c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:236
    status = (0 == i2c->error_code);
    361c:	7c20      	ldrb	r0, [r4, #16]
    361e:	fab0 f080 	clz	r0, r0
    3622:	0940      	lsrs	r0, r0, #5
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:240
}
    3624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:234 (discriminator 1)
    while (!xSemaphoreTake(i2c->transfer_complete_signal, 0)) {
    3628:	2100      	movs	r1, #0
    362a:	68a0      	ldr	r0, [r4, #8]
    362c:	f7fe ffa2 	bl	2574 <xQueueSemaphoreTake>
    3630:	2800      	cmp	r0, #0
    3632:	d0f9      	beq.n	3628 <i2c__transfer_unprotected+0x50>
    3634:	e7f2      	b.n	361c <i2c__transfer_unprotected+0x44>
    3636:	Address 0x0000000000003636 is out of bounds.


00003638 <i2c__handle_interrupt>:
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:294
   * I2C__STATE_MR_SLAVE_READ_ACK For 2+ bytes:  I2C__STATE_MR_SLAVE_ACK_SENT --> ... (I2C__STATE_MR_SLAVE_ACK_SENT) -->
   * I2C__STATE_MR_SLAVE_NACK_SENT --> (stop) For 1  byte :  I2C__STATE_MR_SLAVE_NACK_SENT --> (stop)
   ***********************************************************************************************************
   */

  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    3638:	6803      	ldr	r3, [r0, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:295
  const unsigned i2c_state = lpc_i2c->STAT;
    363a:	685a      	ldr	r2, [r3, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:298
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);

  switch (i2c_state) {
    363c:	2a28      	cmp	r2, #40	; 0x28
i2c__handle_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:410
  }

  return true;
}

static void i2c__handle_interrupt(i2c_s *i2c) {
    363e:	b513      	push	{r0, r1, r4, lr}
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:298
  switch (i2c_state) {
    3640:	d057      	beq.n	36f2 <i2c__handle_interrupt+0xba>
    3642:	d80a      	bhi.n	365a <i2c__handle_interrupt+0x22>
    3644:	2a10      	cmp	r2, #16
    3646:	d02c      	beq.n	36a2 <i2c__handle_interrupt+0x6a>
    3648:	2a18      	cmp	r2, #24
    364a:	d032      	beq.n	36b2 <i2c__handle_interrupt+0x7a>
    364c:	2a08      	cmp	r2, #8
    364e:	d109      	bne.n	3664 <i2c__handle_interrupt+0x2c>
i2c__write_address():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:76
static uint8_t i2c__write_address(uint8_t slave_address) { return (slave_address & 0xFE); }
    3650:	7c41      	ldrb	r1, [r0, #17]
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:301
    lpc_i2c->DAT = i2c__write_address(i2c->slave_address);
    3652:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:318
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    3656:	6099      	str	r1, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3658:	e028      	b.n	36ac <i2c__handle_interrupt+0x74>
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:298
  switch (i2c_state) {
    365a:	2a40      	cmp	r2, #64	; 0x40
    365c:	d063      	beq.n	3726 <i2c__handle_interrupt+0xee>
    365e:	d80d      	bhi.n	367c <i2c__handle_interrupt+0x44>
    3660:	2a38      	cmp	r2, #56	; 0x38
    3662:	d077      	beq.n	3754 <i2c__handle_interrupt+0x11c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:390
    i2c->error_code = lpc_i2c->STAT;
    3664:	685a      	ldr	r2, [r3, #4]
    3666:	7402      	strb	r2, [r0, #16]
i2c__clear_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3668:	2220      	movs	r2, #32
    366a:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
  i2c->CONSET = stop_bit;
    366c:	2210      	movs	r2, #16
    366e:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3670:	2208      	movs	r2, #8
    3672:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:404
  while (i2c->CONSET & stop_bit) {
    3674:	681a      	ldr	r2, [r3, #0]
    3676:	06d2      	lsls	r2, r2, #27
    3678:	d4fc      	bmi.n	3674 <i2c__handle_interrupt+0x3c>
    367a:	e026      	b.n	36ca <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:298
  switch (i2c_state) {
    367c:	2a50      	cmp	r2, #80	; 0x50
    367e:	d05b      	beq.n	3738 <i2c__handle_interrupt+0x100>
    3680:	2a58      	cmp	r2, #88	; 0x58
    3682:	d1ef      	bne.n	3664 <i2c__handle_interrupt+0x2c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:374
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    3684:	6942      	ldr	r2, [r0, #20]
    3686:	6899      	ldr	r1, [r3, #8]
    3688:	7011      	strb	r1, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:375
    i2c->number_of_bytes_to_transfer = 0;
    368a:	2200      	movs	r2, #0
    368c:	61c2      	str	r2, [r0, #28]
i2c__clear_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    368e:	2220      	movs	r2, #32
    3690:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
  i2c->CONSET = stop_bit;
    3692:	2210      	movs	r2, #16
    3694:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3696:	2208      	movs	r2, #8
    3698:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:404
  while (i2c->CONSET & stop_bit) {
    369a:	681a      	ldr	r2, [r3, #0]
    369c:	06d1      	lsls	r1, r2, #27
    369e:	d4fc      	bmi.n	369a <i2c__handle_interrupt+0x62>
    36a0:	e013      	b.n	36ca <i2c__handle_interrupt+0x92>
i2c__read_address():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:75
static uint8_t i2c__read_address(uint8_t slave_address) { return (slave_address | 0x01); }
    36a2:	7c42      	ldrb	r2, [r0, #17]
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:306
    lpc_i2c->DAT = i2c__read_address(i2c->slave_address);
    36a4:	f042 0201 	orr.w	r2, r2, #1
    36a8:	609a      	str	r2, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    36aa:	2208      	movs	r2, #8
    36ac:	619a      	str	r2, [r3, #24]
i2c__handle_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:418
  if (stop_sent) {
    long higher_priority_task_woke = 0;
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal, &higher_priority_task_woke);
    portEND_SWITCHING_ISR(higher_priority_task_woke);
  }
}
    36ae:	b002      	add	sp, #8
    36b0:	bd10      	pop	{r4, pc}
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:315
    if (0 == i2c->number_of_bytes_to_transfer) {
    36b2:	69c4      	ldr	r4, [r0, #28]
i2c__clear_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    36b4:	2120      	movs	r1, #32
    36b6:	6199      	str	r1, [r3, #24]
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:315
    if (0 == i2c->number_of_bytes_to_transfer) {
    36b8:	2208      	movs	r2, #8
    36ba:	b9c4      	cbnz	r4, 36ee <i2c__handle_interrupt+0xb6>
i2c__clear_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    36bc:	6199      	str	r1, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
  i2c->CONSET = stop_bit;
    36be:	2110      	movs	r1, #16
    36c0:	6019      	str	r1, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    36c2:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:404
  while (i2c->CONSET & stop_bit) {
    36c4:	681a      	ldr	r2, [r3, #0]
    36c6:	06d1      	lsls	r1, r2, #27
    36c8:	d4fc      	bmi.n	36c4 <i2c__handle_interrupt+0x8c>
i2c__handle_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:414
    long higher_priority_task_woke = 0;
    36ca:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:415
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal, &higher_priority_task_woke);
    36cc:	a901      	add	r1, sp, #4
    36ce:	6880      	ldr	r0, [r0, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:414
    long higher_priority_task_woke = 0;
    36d0:	9301      	str	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:415
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal, &higher_priority_task_woke);
    36d2:	f7fe fe5f 	bl	2394 <xQueueGiveFromISR>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:416
    portEND_SWITCHING_ISR(higher_priority_task_woke);
    36d6:	9b01      	ldr	r3, [sp, #4]
    36d8:	2b00      	cmp	r3, #0
    36da:	d0e8      	beq.n	36ae <i2c__handle_interrupt+0x76>
    36dc:	4b1f      	ldr	r3, [pc, #124]	; (375c <i2c__handle_interrupt+0x124>)
    36de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    36e2:	601a      	str	r2, [r3, #0]
    36e4:	f3bf 8f4f 	dsb	sy
    36e8:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:418
}
    36ec:	e7df      	b.n	36ae <i2c__handle_interrupt+0x76>
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:318
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    36ee:	7c81      	ldrb	r1, [r0, #18]
    36f0:	e7b1      	b.n	3656 <i2c__handle_interrupt+0x1e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:326
    if (i2c__is_read_address(i2c->slave_address)) {
    36f2:	7c42      	ldrb	r2, [r0, #17]
    36f4:	07d2      	lsls	r2, r2, #31
    36f6:	d502      	bpl.n	36fe <i2c__handle_interrupt+0xc6>
i2c__set_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:88
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    36f8:	2220      	movs	r2, #32
i2c__set_ack_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:90
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    36fa:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    36fc:	e7d5      	b.n	36aa <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:330
      if (0 == i2c->number_of_bytes_to_transfer) {
    36fe:	69c2      	ldr	r2, [r0, #28]
    3700:	b94a      	cbnz	r2, 3716 <i2c__handle_interrupt+0xde>
i2c__clear_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3702:	2220      	movs	r2, #32
    3704:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:401
  i2c->CONSET = stop_bit;
    3706:	2210      	movs	r2, #16
    3708:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    370a:	2208      	movs	r2, #8
    370c:	619a      	str	r2, [r3, #24]
i2c__set_stop():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:404
  while (i2c->CONSET & stop_bit) {
    370e:	681a      	ldr	r2, [r3, #0]
    3710:	06d4      	lsls	r4, r2, #27
    3712:	d4fc      	bmi.n	370e <i2c__handle_interrupt+0xd6>
    3714:	e7d9      	b.n	36ca <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:333
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    3716:	6981      	ldr	r1, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:335
        --(i2c->number_of_bytes_to_transfer);
    3718:	3a01      	subs	r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:333
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    371a:	f811 4b01 	ldrb.w	r4, [r1], #1
    371e:	609c      	str	r4, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:334
        ++(i2c->output_byte_pointer);
    3720:	6181      	str	r1, [r0, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:335
        --(i2c->number_of_bytes_to_transfer);
    3722:	61c2      	str	r2, [r0, #28]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:87
static void i2c__clear_si_flag_for_hw_to_take_next_action(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x08; }
    3724:	e7c1      	b.n	36aa <i2c__handle_interrupt+0x72>
i2c__clear_start_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:89
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    3726:	2220      	movs	r2, #32
    3728:	619a      	str	r2, [r3, #24]
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:348
    if (i2c->number_of_bytes_to_transfer > 1) {
    372a:	69c2      	ldr	r2, [r0, #28]
    372c:	2a01      	cmp	r2, #1
    372e:	f04f 0204 	mov.w	r2, #4
    3732:	d8e2      	bhi.n	36fa <i2c__handle_interrupt+0xc2>
i2c__set_nack_flag():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:91
static void i2c__set_nack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x04; }
    3734:	619a      	str	r2, [r3, #24]
    3736:	e7b8      	b.n	36aa <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:360
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    3738:	6942      	ldr	r2, [r0, #20]
    373a:	6899      	ldr	r1, [r3, #8]
    373c:	7011      	strb	r1, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:361
    ++(i2c->input_byte_pointer);
    373e:	6942      	ldr	r2, [r0, #20]
    3740:	3201      	adds	r2, #1
    3742:	6142      	str	r2, [r0, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:362
    --(i2c->number_of_bytes_to_transfer);
    3744:	69c2      	ldr	r2, [r0, #28]
    3746:	3a01      	subs	r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:364
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    3748:	2a01      	cmp	r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:362
    --(i2c->number_of_bytes_to_transfer);
    374a:	61c2      	str	r2, [r0, #28]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:364
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    374c:	f04f 0204 	mov.w	r2, #4
    3750:	d1d3      	bne.n	36fa <i2c__handle_interrupt+0xc2>
    3752:	e7ef      	b.n	3734 <i2c__handle_interrupt+0xfc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:382
    i2c->error_code = lpc_i2c->STAT;
    3754:	685b      	ldr	r3, [r3, #4]
    3756:	7403      	strb	r3, [r0, #16]
i2c__handle_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:413
  if (stop_sent) {
    3758:	e7b7      	b.n	36ca <i2c__handle_interrupt+0x92>
    375a:	bf00      	nop
    375c:	e000ed04 	.word	0xe000ed04

00003760 <i2c2_isr>:
i2c2_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:95
static void i2c2_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__2]); }
    3760:	4801      	ldr	r0, [pc, #4]	; (3768 <i2c2_isr+0x8>)
    3762:	f7ff bf69 	b.w	3638 <i2c__handle_interrupt>
    3766:	bf00      	nop
    3768:	1000007c 	.word	0x1000007c

0000376c <i2c1_isr>:
i2c1_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:94
static void i2c1_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__1]); }
    376c:	4801      	ldr	r0, [pc, #4]	; (3774 <i2c1_isr+0x8>)
    376e:	f7ff bf63 	b.w	3638 <i2c__handle_interrupt>
    3772:	bf00      	nop
    3774:	1000005c 	.word	0x1000005c

00003778 <i2c0_isr>:
i2c0_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:93
static void i2c0_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__0]); }
    3778:	4801      	ldr	r0, [pc, #4]	; (3780 <i2c0_isr+0x8>)
    377a:	f7ff bf5d 	b.w	3638 <i2c__handle_interrupt>
    377e:	bf00      	nop
    3780:	1000003c 	.word	0x1000003c

00003784 <i2c__initialize>:
i2c__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:103
void i2c__initialize(i2c_e i2c_number, uint32_t desired_i2c_bus_speed_in_hz, uint32_t peripheral_clock_hz) {
    3784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:104
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    3788:	4b26      	ldr	r3, [pc, #152]	; (3824 <i2c__initialize+0xa0>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:103
void i2c__initialize(i2c_e i2c_number, uint32_t desired_i2c_bus_speed_in_hz, uint32_t peripheral_clock_hz) {
    378a:	4606      	mov	r6, r0
    378c:	4615      	mov	r5, r2
    378e:	4689      	mov	r9, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:104
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    3790:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:103
void i2c__initialize(i2c_e i2c_number, uint32_t desired_i2c_bus_speed_in_hz, uint32_t peripheral_clock_hz) {
    3794:	b085      	sub	sp, #20
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:104
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    3796:	ab04      	add	r3, sp, #16
    3798:	e903 0007 	stmdb	r3, {r0, r1, r2}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:105
  const lpc_peripheral_e peripheral_ids[] = {LPC_PERIPHERAL__I2C0, LPC_PERIPHERAL__I2C1, LPC_PERIPHERAL__I2C2};
    379c:	f640 330a 	movw	r3, #2826	; 0xb0a
    37a0:	f8ad 3000 	strh.w	r3, [sp]
    37a4:	230c      	movs	r3, #12
    37a6:	f88d 3002 	strb.w	r3, [sp, #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:112
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    37aa:	4a1f      	ldr	r2, [pc, #124]	; (3828 <i2c__initialize+0xa4>)
    37ac:	0173      	lsls	r3, r6, #5
    37ae:	18d7      	adds	r7, r2, r3
    37b0:	58d4      	ldr	r4, [r2, r3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:113
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    37b2:	ab04      	add	r3, sp, #16
    37b4:	4433      	add	r3, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:117
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    37b6:	2203      	movs	r2, #3
    37b8:	2100      	movs	r1, #0
    37ba:	2001      	movs	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:113
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    37bc:	f813 8c10 	ldrb.w	r8, [r3, #-16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:117
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    37c0:	f7fe fc90 	bl	20e4 <xQueueGenericCreate>
    37c4:	60b8      	str	r0, [r7, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:118
  i2c->mutex = xSemaphoreCreateMutex();
    37c6:	2001      	movs	r0, #1
    37c8:	f7fe fd73 	bl	22b2 <xQueueCreateMutex>
    37cc:	60f8      	str	r0, [r7, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:125
  lpc_peripheral__turn_on_power_to(peripheral_id);
    37ce:	4640      	mov	r0, r8
    37d0:	f000 f8c6 	bl	3960 <lpc_peripheral__turn_on_power_to>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:126
  lpc_i2c->CONCLR = 0x6C; // Clear ALL I2C Flags
    37d4:	236c      	movs	r3, #108	; 0x6c
    37d6:	61a3      	str	r3, [r4, #24]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:141
  const uint32_t freq_hz = (desired_i2c_bus_speed_in_hz > max_speed_hz) ? ideal_speed_hz : desired_i2c_bus_speed_in_hz;
    37d8:	4a14      	ldr	r2, [pc, #80]	; (382c <i2c__initialize+0xa8>)
    37da:	4b15      	ldr	r3, [pc, #84]	; (3830 <i2c__initialize+0xac>)
    37dc:	4591      	cmp	r9, r2
    37de:	bf88      	it	hi
    37e0:	4699      	movhi	r9, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:145
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    37e2:	2328      	movs	r3, #40	; 0x28
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:142
  const uint32_t half_clock_divider = (peripheral_clock_hz / freq_hz) / 2;
    37e4:	fbb5 f2f9 	udiv	r2, r5, r9
    37e8:	0852      	lsrs	r2, r2, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:145
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    37ea:	21c8      	movs	r1, #200	; 0xc8
    37ec:	4353      	muls	r3, r2
    37ee:	fbb3 f3f1 	udiv	r3, r3, r1
    37f2:	6123      	str	r3, [r4, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:146
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    37f4:	233c      	movs	r3, #60	; 0x3c
    37f6:	435a      	muls	r2, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:149
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    37f8:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:146
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    37fa:	fbb2 f2f1 	udiv	r2, r2, r1
    37fe:	6162      	str	r2, [r4, #20]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:149
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    3800:	62a3      	str	r3, [r4, #40]	; 0x28
    3802:	6263      	str	r3, [r4, #36]	; 0x24
    3804:	6223      	str	r3, [r4, #32]
    3806:	60e3      	str	r3, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:152
  lpc_i2c->CONSET = 0x40;
    3808:	2340      	movs	r3, #64	; 0x40
    380a:	6023      	str	r3, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:153
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number], i2c_structs[i2c_number].rtos_isr_trace_name);
    380c:	ab04      	add	r3, sp, #16
    380e:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    3812:	687a      	ldr	r2, [r7, #4]
    3814:	f856 1c0c 	ldr.w	r1, [r6, #-12]
    3818:	4640      	mov	r0, r8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:154
}
    381a:	b005      	add	sp, #20
    381c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:153
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number], i2c_structs[i2c_number].rtos_isr_trace_name);
    3820:	f000 b8c2 	b.w	39a8 <lpc_peripheral__enable_interrupt>
    3824:	0000b0e4 	.word	0x0000b0e4
    3828:	1000003c 	.word	0x1000003c
    382c:	000f4240 	.word	0x000f4240
    3830:	000186a0 	.word	0x000186a0

00003834 <i2c__read_slave_data>:
i2c__read_slave_data():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:172
                          uint8_t *bytes_to_read, uint32_t number_of_bytes_to_transfer) {
    3834:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    3838:	460f      	mov	r7, r1
    383a:	4690      	mov	r8, r2
i2c__transfer():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    383c:	461d      	mov	r5, r3
    383e:	b923      	cbnz	r3, 384a <i2c__read_slave_data+0x16>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:200
  bool status = false;
    3840:	2500      	movs	r5, #0
i2c__read_slave_data():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:177
}
    3842:	4628      	mov	r0, r5
    3844:	b002      	add	sp, #8
    3846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
i2c__transfer():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:204
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    384a:	4c0e      	ldr	r4, [pc, #56]	; (3884 <i2c__read_slave_data+0x50>)
    384c:	eb04 1440 	add.w	r4, r4, r0, lsl #5
    3850:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    3854:	68e0      	ldr	r0, [r4, #12]
    3856:	f7fe fe8d 	bl	2574 <xQueueSemaphoreTake>
    385a:	2800      	cmp	r0, #0
    385c:	d0f0      	beq.n	3840 <i2c__read_slave_data+0xc>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    385e:	2600      	movs	r6, #0
    3860:	9b08      	ldr	r3, [sp, #32]
    3862:	9301      	str	r3, [sp, #4]
    3864:	4642      	mov	r2, r8
    3866:	462b      	mov	r3, r5
    3868:	f047 0101 	orr.w	r1, r7, #1
    386c:	9600      	str	r6, [sp, #0]
    386e:	4620      	mov	r0, r4
    3870:	f7ff feb2 	bl	35d8 <i2c__transfer_unprotected>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:207
      xSemaphoreGive(i2c->mutex);
    3874:	4633      	mov	r3, r6
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    3876:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:207
      xSemaphoreGive(i2c->mutex);
    3878:	4632      	mov	r2, r6
    387a:	4631      	mov	r1, r6
    387c:	68e0      	ldr	r0, [r4, #12]
    387e:	f7fe fc55 	bl	212c <xQueueGenericSend>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:212
  return status;
    3882:	e7de      	b.n	3842 <i2c__read_slave_data+0xe>
    3884:	1000003c 	.word	0x1000003c

00003888 <i2c__read_single>:
i2c__read_single():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:165
uint8_t i2c__read_single(i2c_e i2c_number, uint8_t slave_address, uint8_t slave_memory_address) {
    3888:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:166
  uint8_t byte = 0;
    388a:	2300      	movs	r3, #0
    388c:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:167
  i2c__read_slave_data(i2c_number, slave_address, slave_memory_address, &byte, 1);
    3890:	2301      	movs	r3, #1
    3892:	9300      	str	r3, [sp, #0]
    3894:	f10d 030f 	add.w	r3, sp, #15
    3898:	f7ff ffcc 	bl	3834 <i2c__read_slave_data>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:169
}
    389c:	f89d 000f 	ldrb.w	r0, [sp, #15]
    38a0:	b005      	add	sp, #20
    38a2:	f85d fb04 	ldr.w	pc, [sp], #4
    38a6:	Address 0x00000000000038a6 is out of bounds.


000038a8 <i2c__write_slave_data>:
i2c__write_slave_data():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:184
                           const uint8_t *bytes_to_write, uint32_t number_of_bytes_to_transfer) {
    38a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    38aa:	460e      	mov	r6, r1
    38ac:	4617      	mov	r7, r2
i2c__transfer():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:203
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    38ae:	461d      	mov	r5, r3
    38b0:	b91b      	cbnz	r3, 38ba <i2c__write_slave_data+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:200
  bool status = false;
    38b2:	2500      	movs	r5, #0
i2c__write_slave_data():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:189
}
    38b4:	4628      	mov	r0, r5
    38b6:	b003      	add	sp, #12
    38b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
i2c__transfer():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:204
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    38ba:	4c0e      	ldr	r4, [pc, #56]	; (38f4 <i2c__write_slave_data+0x4c>)
    38bc:	eb04 1440 	add.w	r4, r4, r0, lsl #5
    38c0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    38c4:	68e0      	ldr	r0, [r4, #12]
    38c6:	f7fe fe55 	bl	2574 <xQueueSemaphoreTake>
    38ca:	2800      	cmp	r0, #0
    38cc:	d0f1      	beq.n	38b2 <i2c__write_slave_data+0xa>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    38ce:	9b08      	ldr	r3, [sp, #32]
    38d0:	463a      	mov	r2, r7
    38d2:	e9cd 5300 	strd	r5, r3, [sp]
    38d6:	f006 01fe 	and.w	r1, r6, #254	; 0xfe
    38da:	2300      	movs	r3, #0
    38dc:	4620      	mov	r0, r4
    38de:	f7ff fe7b 	bl	35d8 <i2c__transfer_unprotected>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:207
      xSemaphoreGive(i2c->mutex);
    38e2:	2300      	movs	r3, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:205
      status = i2c__transfer_unprotected(i2c, slave_address, starting_slave_memory_address, input_byte_pointer,
    38e4:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:207
      xSemaphoreGive(i2c->mutex);
    38e6:	461a      	mov	r2, r3
    38e8:	4619      	mov	r1, r3
    38ea:	68e0      	ldr	r0, [r4, #12]
    38ec:	f7fe fc1e 	bl	212c <xQueueGenericSend>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:212
  return status;
    38f0:	e7e0      	b.n	38b4 <i2c__write_slave_data+0xc>
    38f2:	bf00      	nop
    38f4:	1000003c 	.word	0x1000003c

000038f8 <i2c__detect>:
i2c__detect():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:156
bool i2c__detect(i2c_e i2c_number, uint8_t slave_address) {
    38f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:160
  uint8_t unused = 0;
    38fa:	2200      	movs	r2, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:162
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register, &unused, zero_bytes);
    38fc:	9200      	str	r2, [sp, #0]
    38fe:	f10d 030f 	add.w	r3, sp, #15
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:160
  uint8_t unused = 0;
    3902:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:162
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register, &unused, zero_bytes);
    3906:	f7ff ffcf 	bl	38a8 <i2c__write_slave_data>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:163
}
    390a:	b005      	add	sp, #20
    390c:	f85d fb04 	ldr.w	pc, [sp], #4

00003910 <i2c__write_single>:
i2c__write_single():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:179
bool i2c__write_single(i2c_e i2c_number, uint8_t slave_address, uint8_t slave_memory_address, uint8_t value) {
    3910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    3912:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:180
  return i2c__write_slave_data(i2c_number, slave_address, slave_memory_address, &value, 1);
    3916:	2301      	movs	r3, #1
    3918:	9300      	str	r3, [sp, #0]
    391a:	f10d 030f 	add.w	r3, sp, #15
    391e:	f7ff ffc3 	bl	38a8 <i2c__write_slave_data>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/i2c.c:181
}
    3922:	b005      	add	sp, #20
    3924:	f85d fb04 	ldr.w	pc, [sp], #4

00003928 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:44 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    3928:	e7fe      	b.n	3928 <lpc_peripheral__halt_handler>
    392a:	Address 0x000000000000392a is out of bounds.


0000392c <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:112

/**
 * This function is intentionally not declared at the header file
 * This is registered by the startup code and registered as the interrupt callback for each peripheral
 */
void lpc_peripheral__interrupt_dispatcher(void) {
    392c:	b508      	push	{r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:113
  vRunTimeStatIsrEntry();
    392e:	f7ff fc5b 	bl	31e8 <vRunTimeStatIsrEntry>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:118

  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset by 16.
   * We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    3932:	4b08      	ldr	r3, [pc, #32]	; (3954 <lpc_peripheral__interrupt_dispatcher+0x28>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:128
#if (0 != configUSE_TRACE_FACILITY)
  vTraceStoreISRBegin(lpc_peripheral__trace_handles[isr_num]);
  isr_to_service();
  vTraceStoreISREnd(0);
#else
  isr_to_service();
    3934:	4a08      	ldr	r2, [pc, #32]	; (3958 <lpc_peripheral__interrupt_dispatcher+0x2c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:118
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    3936:	781b      	ldrb	r3, [r3, #0]
    3938:	3b10      	subs	r3, #16
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:121
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    393a:	b2db      	uxtb	r3, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:128
  isr_to_service();
    393c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    3940:	4798      	blx	r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:133
#endif

  // http://www.keil.com/support/docs/3928.htm
  static volatile int memory_write_to_avoid_spurious_interrupt;
  memory_write_to_avoid_spurious_interrupt = 0;
    3942:	4b06      	ldr	r3, [pc, #24]	; (395c <lpc_peripheral__interrupt_dispatcher+0x30>)
    3944:	2200      	movs	r2, #0
    3946:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:134
  (void)memory_write_to_avoid_spurious_interrupt; // Avoid 'variable set but not used' warning
    3948:	681b      	ldr	r3, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:137

  vRunTimeStatIsrExit();
}
    394a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:136
  vRunTimeStatIsrExit();
    394e:	f7ff bc5f 	b.w	3210 <vRunTimeStatIsrExit>
    3952:	bf00      	nop
    3954:	e000ed04 	.word	0xe000ed04
    3958:	1000009c 	.word	0x1000009c
    395c:	100012d4 	.word	0x100012d4

00003960 <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:140

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    3960:	2859      	cmp	r0, #89	; 0x59
    3962:	d809      	bhi.n	3978 <lpc_peripheral__turn_on_power_to+0x18>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:141
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    3964:	4b05      	ldr	r3, [pc, #20]	; (397c <lpc_peripheral__turn_on_power_to+0x1c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:142
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    3966:	4a06      	ldr	r2, [pc, #24]	; (3980 <lpc_peripheral__turn_on_power_to+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:141
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    3968:	5c18      	ldrb	r0, [r3, r0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:142
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    396a:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    396e:	2301      	movs	r3, #1
    3970:	4083      	lsls	r3, r0
    3972:	430b      	orrs	r3, r1
    3974:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:144
  }
}
    3978:	4770      	bx	lr
    397a:	bf00      	nop
    397c:	0000b0ff 	.word	0x0000b0ff
    3980:	400fc000 	.word	0x400fc000

00003984 <lpc_peripheral__is_powered_on>:
lpc_peripheral__is_powered_on():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:149

bool lpc_peripheral__is_powered_on(lpc_peripheral_e peripheral) {
  bool powered_on = false;

  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    3984:	2859      	cmp	r0, #89	; 0x59
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:151
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    3986:	bf9f      	itttt	ls
    3988:	4b05      	ldrls	r3, [pc, #20]	; (39a0 <lpc_peripheral__is_powered_on+0x1c>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:150
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    398a:	4a06      	ldrls	r2, [pc, #24]	; (39a4 <lpc_peripheral__is_powered_on+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:151
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    398c:	f8d3 30c4 	ldrls.w	r3, [r3, #196]	; 0xc4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:150
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    3990:	5c10      	ldrbls	r0, [r2, r0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:151
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    3992:	bf9a      	itte	ls
    3994:	fa23 f000 	lsrls.w	r0, r3, r0
    3998:	f000 0001 	andls.w	r0, r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:147
  bool powered_on = false;
    399c:	2000      	movhi	r0, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:155
  }

  return powered_on;
}
    399e:	4770      	bx	lr
    39a0:	400fc000 	.word	0x400fc000
    39a4:	0000b0ff 	.word	0x0000b0ff

000039a8 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:161

void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral, function__void_f isr_callback,
                                      const char *name_for_rtos_trace) {
  // Sorry: Nasty hack because CAN1 shares interrupt with CAN0
  if (LPC_PERIPHERAL__CAN1 == peripheral) {
    peripheral = LPC_PERIPHERAL__CAN0;
    39a8:	2859      	cmp	r0, #89	; 0x59
    39aa:	bf08      	it	eq
    39ac:	2019      	moveq	r0, #25
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:163
  }
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    39ae:	4b08      	ldr	r3, [pc, #32]	; (39d0 <lpc_peripheral__enable_interrupt+0x28>)
    39b0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:182
   * priority higher than the RTOS interrupt (note that higher priority means lower number)
   *
   * Unless you really know what you are doing, never call NVIC_SetPriority() with a priority other than:
   *    NVIC_SetPriority(peripheral, RTOS_HIGHEST_INTERRUPT_PRIORITY + 1);
   */
  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    39b4:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  if ((int32_t)(IRQn) >= 0)
    39b6:	2b00      	cmp	r3, #0
    39b8:	db08      	blt.n	39cc <lpc_peripheral__enable_interrupt+0x24>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    39ba:	2201      	movs	r2, #1
    39bc:	f000 001f 	and.w	r0, r0, #31
    39c0:	fa02 f000 	lsl.w	r0, r2, r0
    39c4:	095b      	lsrs	r3, r3, #5
    39c6:	4a03      	ldr	r2, [pc, #12]	; (39d4 <lpc_peripheral__enable_interrupt+0x2c>)
    39c8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/lpc_peripherals.c:184
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    39cc:	4770      	bx	lr
    39ce:	bf00      	nop
    39d0:	1000009c 	.word	0x1000009c
    39d4:	e000e100 	.word	0xe000e100

000039d8 <ssp2__dma_transfer_block>:
ssp2__dma_transfer_block():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:111
  // These registers are only initialized once, but this optimization makes no measurable difference
  // ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  // ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
}

ssp_dma_error_e ssp2__dma_transfer_block(unsigned char *buffer_pointer, uint32_t num_bytes, bool is_write_op) {
    39d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:112
  uint32_t dummyBuffer = 0xffffffff;
    39da:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:115

  // DMA is limited to 12-bit transfer size
  if (num_bytes >= 0x1000) {
    39de:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:112
  uint32_t dummyBuffer = 0xffffffff;
    39e2:	9301      	str	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:115
  if (num_bytes >= 0x1000) {
    39e4:	d236      	bcs.n	3a54 <ssp2__dma_transfer_block+0x7c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:120
    return SSP_DMA__ERROR_LENGTH;
  }

  // DMA channels should not be busy
  if ((ssp2__dma_tx->CConfig & 1) || (ssp2__dma_rx->CConfig & 1)) {
    39e6:	4c1d      	ldr	r4, [pc, #116]	; (3a5c <ssp2__dma_transfer_block+0x84>)
    39e8:	6923      	ldr	r3, [r4, #16]
    39ea:	07de      	lsls	r6, r3, #31
    39ec:	d434      	bmi.n	3a58 <ssp2__dma_transfer_block+0x80>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:120 (discriminator 1)
    39ee:	4b1c      	ldr	r3, [pc, #112]	; (3a60 <ssp2__dma_transfer_block+0x88>)
    39f0:	691d      	ldr	r5, [r3, #16]
    39f2:	07ed      	lsls	r5, r5, #31
    39f4:	d430      	bmi.n	3a58 <ssp2__dma_transfer_block+0x80>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:170

  /**
   * Clear existing terminal count and error interrupts otherwise
   * DMA will not start.
   */
  LPC_GPDMA->IntTCClear = (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
    39f6:	4d1b      	ldr	r5, [pc, #108]	; (3a64 <ssp2__dma_transfer_block+0x8c>)
    39f8:	2603      	movs	r6, #3
    39fa:	60ae      	str	r6, [r5, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:171
  LPC_GPDMA->IntErrClr = (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
    39fc:	612e      	str	r6, [r5, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:184
   *      - Read data into buffer_pointer
   *      - Increment destination
   *
   * Note: Setting destination burst of 2 or 4 bytes makes no difference (1 << 15)
   */
  ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
    39fe:	4d1a      	ldr	r5, [pc, #104]	; (3a68 <ssp2__dma_transfer_block+0x90>)
    3a00:	601d      	str	r5, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:185
  if (is_write_op) {
    3a02:	b302      	cbz	r2, 3a46 <ssp2__dma_transfer_block+0x6e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:186
    ssp2__dma_rx->CDestAddr = (uint32_t)(&dummyBuffer);
    3a04:	ae01      	add	r6, sp, #4
    3a06:	605e      	str	r6, [r3, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:187
    ssp2__dma_rx->CControl = num_bytes | terminal_count_interrupt_enable;
    3a08:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:190
  } else {
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address | terminal_count_interrupt_enable;
    3a0c:	60de      	str	r6, [r3, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:192
  }
  ssp2__dma_rx->CConfig = (SSP2__DMA_REQUEST_RX << 1) | transfer_peripheral_to_memory | dma_enable;
    3a0e:	f241 060f 	movw	r6, #4111	; 0x100f
    3a12:	611e      	str	r6, [r3, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:203
   *      - Increment source data
   * For read operation:
   *      - Source data is buffer with 0xFF
   *      - Don't increment source data
   */
  if (is_write_op) {
    3a14:	b1da      	cbz	r2, 3a4e <ssp2__dma_transfer_block+0x76>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:204
    ssp2__dma_tx->CSrcAddr = (uint32_t)(buffer_pointer);
    3a16:	6020      	str	r0, [r4, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:205
    ssp2__dma_tx->CControl = num_bytes | increment_source_address;
    3a18:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:211
  } else {
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    ssp2__dma_tx->CControl = num_bytes;
  }
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  ssp2__dma_tx->CConfig = (SSP2__DMA_REQUEST_TX << 6) | transfer_memory_to_peripheral | dma_enable;
    3a1c:	f640 1281 	movw	r2, #2433	; 0x981
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:208
    ssp2__dma_tx->CControl = num_bytes;
    3a20:	60e1      	str	r1, [r4, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:210
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
    3a22:	6065      	str	r5, [r4, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:211
  ssp2__dma_tx->CConfig = (SSP2__DMA_REQUEST_TX << 6) | transfer_memory_to_peripheral | dma_enable;
    3a24:	6122      	str	r2, [r4, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:218
  /**
   * Channel must be fully configured and then enabled separately.
   * Setting DMACR's Rx/Tx bits should trigger the DMA
   */
  static const uint32_t enable_rx_tx_dma_triggers = 0x03;
  LPC_SSP2->DMACR |= enable_rx_tx_dma_triggers;
    3a26:	4a11      	ldr	r2, [pc, #68]	; (3a6c <ssp2__dma_transfer_block+0x94>)
    3a28:	6a51      	ldr	r1, [r2, #36]	; 0x24
    3a2a:	f041 0103 	orr.w	r1, r1, #3
    3a2e:	6251      	str	r1, [r2, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:220 (discriminator 1)

  while ((ssp2__dma_rx->CControl & 0xfff)) {
    3a30:	68d8      	ldr	r0, [r3, #12]
    3a32:	f3c0 000b 	ubfx	r0, r0, #0, #12
    3a36:	2800      	cmp	r0, #0
    3a38:	d1fa      	bne.n	3a30 <ssp2__dma_transfer_block+0x58>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:223
    ; // Poll for DMA transfer to complete
  }
  LPC_SSP2->DMACR &= ~enable_rx_tx_dma_triggers;
    3a3a:	6a53      	ldr	r3, [r2, #36]	; 0x24
    3a3c:	f023 0303 	bic.w	r3, r3, #3
    3a40:	6253      	str	r3, [r2, #36]	; 0x24
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:226

  return SSP_DMA__ERROR_NONE;
    3a42:	b002      	add	sp, #8
    3a44:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:189
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    3a46:	6058      	str	r0, [r3, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:190
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address | terminal_count_interrupt_enable;
    3a48:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
    3a4c:	e7de      	b.n	3a0c <ssp2__dma_transfer_block+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:207
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    3a4e:	aa01      	add	r2, sp, #4
    3a50:	6022      	str	r2, [r4, #0]
    3a52:	e7e3      	b.n	3a1c <ssp2__dma_transfer_block+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:116
    return SSP_DMA__ERROR_LENGTH;
    3a54:	2001      	movs	r0, #1
    3a56:	e7f4      	b.n	3a42 <ssp2__dma_transfer_block+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:121
    return SSP_DMA__ERROR_BUSY;
    3a58:	2002      	movs	r0, #2
    3a5a:	e7f2      	b.n	3a42 <ssp2__dma_transfer_block+0x6a>
    3a5c:	20080100 	.word	0x20080100
    3a60:	20080120 	.word	0x20080120
    3a64:	20080000 	.word	0x20080000
    3a68:	400ac008 	.word	0x400ac008
    3a6c:	400ac000 	.word	0x400ac000

00003a70 <ssp2__set_max_clock>:
ssp2__set_max_clock():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:61
void ssp2__set_max_clock(uint32_t max_clock_khz) {
    3a70:	b510      	push	{r4, lr}
    3a72:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:63
  const uint32_t cpu_clock_khz = clock__get_core_clock_hz() / 1000UL;
    3a74:	f7fc fbd2 	bl	21c <clock__get_core_clock_hz>
    3a78:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    3a7c:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:62
  uint8_t divider = 2;
    3a80:	2302      	movs	r3, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:66
  while (max_clock_khz < (cpu_clock_khz / divider) && divider <= 254) {
    3a82:	fbb0 f2f3 	udiv	r2, r0, r3
    3a86:	42a2      	cmp	r2, r4
    3a88:	d802      	bhi.n	3a90 <ssp2__set_max_clock+0x20>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:70
  LPC_SSP2->CPSR = divider;
    3a8a:	4a03      	ldr	r2, [pc, #12]	; (3a98 <ssp2__set_max_clock+0x28>)
    3a8c:	6113      	str	r3, [r2, #16]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:71
}
    3a8e:	bd10      	pop	{r4, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:67
    divider += 2;
    3a90:	3302      	adds	r3, #2
    3a92:	b2db      	uxtb	r3, r3
    3a94:	e7f5      	b.n	3a82 <ssp2__set_max_clock+0x12>
    3a96:	bf00      	nop
    3a98:	400ac000 	.word	0x400ac000

00003a9c <ssp2__initialize>:
ssp2__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:51
void ssp2__initialize(uint32_t max_clock_khz) {
    3a9c:	b510      	push	{r4, lr}
    3a9e:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:52
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__SSP2);
    3aa0:	2024      	movs	r0, #36	; 0x24
    3aa2:	f7ff ff5d 	bl	3960 <lpc_peripheral__turn_on_power_to>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:54
  LPC_SSP2->CR0 = 7;        // 8-bit mode
    3aa6:	4b0b      	ldr	r3, [pc, #44]	; (3ad4 <ssp2__initialize+0x38>)
    3aa8:	2207      	movs	r2, #7
    3aaa:	601a      	str	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:55
  LPC_SSP2->CR1 = (1 << 1); // Enable SSP as Master
    3aac:	2202      	movs	r2, #2
    3aae:	605a      	str	r2, [r3, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:56
  ssp2__set_max_clock(max_clock_khz);
    3ab0:	4620      	mov	r0, r4
    3ab2:	f7ff ffdd 	bl	3a70 <ssp2__set_max_clock>
ssp2__dma_init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:94
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__GPDMA);
    3ab6:	201a      	movs	r0, #26
    3ab8:	f7ff ff52 	bl	3960 <lpc_peripheral__turn_on_power_to>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:97
  LPC_GPDMA->Config = enable_bitmask;
    3abc:	4b06      	ldr	r3, [pc, #24]	; (3ad8 <ssp2__initialize+0x3c>)
    3abe:	2201      	movs	r2, #1
    3ac0:	631a      	str	r2, [r3, #48]	; 0x30
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:98
  while (!(LPC_GPDMA->Config & enable_bitmask)) {
    3ac2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    3ac4:	07d2      	lsls	r2, r2, #31
    3ac6:	d5fc      	bpl.n	3ac2 <ssp2__initialize+0x26>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:103
  ssp2__dma_rx->CLLI = 0;
    3ac8:	4a04      	ldr	r2, [pc, #16]	; (3adc <ssp2__initialize+0x40>)
    3aca:	2300      	movs	r3, #0
    3acc:	6093      	str	r3, [r2, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:104
  ssp2__dma_tx->CLLI = 0;
    3ace:	f842 3c18 	str.w	r3, [r2, #-24]
ssp2__initialize():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:59
}
    3ad2:	bd10      	pop	{r4, pc}
    3ad4:	400ac000 	.word	0x400ac000
    3ad8:	20080000 	.word	0x20080000
    3adc:	20080120 	.word	0x20080120

00003ae0 <ssp2__exchange_byte>:
ssp2__exchange_byte():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:74
  LPC_SSP2->DR = byte_to_transmit;
    3ae0:	4b03      	ldr	r3, [pc, #12]	; (3af0 <ssp2__exchange_byte+0x10>)
    3ae2:	6098      	str	r0, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:76 (discriminator 1)
  while (LPC_SSP2->SR & (1 << 4)) {
    3ae4:	68da      	ldr	r2, [r3, #12]
    3ae6:	06d2      	lsls	r2, r2, #27
    3ae8:	d4fc      	bmi.n	3ae4 <ssp2__exchange_byte+0x4>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:80
  return (uint8_t)(LPC_SSP2->DR & 0xFF);
    3aea:	6898      	ldr	r0, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:81
}
    3aec:	b2c0      	uxtb	r0, r0
    3aee:	4770      	bx	lr
    3af0:	400ac000 	.word	0x400ac000

00003af4 <ssp2__dma_write_block>:
ssp2__dma_write_block():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:85
  ssp2__dma_transfer_block((unsigned char *)output_block, number_of_bytes, is_write_operation);
    3af4:	2201      	movs	r2, #1
    3af6:	f7ff bf6f 	b.w	39d8 <ssp2__dma_transfer_block>

00003afa <ssp2__dma_read_block>:
ssp2__dma_read_block():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/ssp2.c:90
  ssp2__dma_transfer_block(input_block, number_of_bytes, !is_write_operation);
    3afa:	2200      	movs	r2, #0
    3afc:	f7ff bf6c 	b.w	39d8 <ssp2__dma_transfer_block>

00003b00 <uart__isr_common>:
uart__isr_common():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:143
    transmitter_empty = (1 << 0),
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason = (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    3b00:	6802      	ldr	r2, [r0, #0]
    3b02:	6893      	ldr	r3, [r2, #8]
    3b04:	f3c3 0342 	ubfx	r3, r3, #1, #3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:145

  switch (interrupt_reason) {
    3b08:	2b02      	cmp	r3, #2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:133
static void uart__isr_common(uart_s *uart_type) {
    3b0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    3b0c:	4606      	mov	r6, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:145
  switch (interrupt_reason) {
    3b0e:	d023      	beq.n	3b58 <uart__isr_common+0x58>
    3b10:	2b06      	cmp	r3, #6
    3b12:	d021      	beq.n	3b58 <uart__isr_common+0x58>
    3b14:	2b01      	cmp	r3, #1
    3b16:	d134      	bne.n	3b82 <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:74
  char transmit_byte = 0;
    3b18:	2400      	movs	r4, #0
    3b1a:	f88d 4003 	strb.w	r4, [sp, #3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:76
  BaseType_t higher_priority_task_woke = 0;
    3b1e:	9401      	str	r4, [sp, #4]
    3b20:	2510      	movs	r5, #16
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:79
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte, &higher_priority_task_woke)) {
    3b22:	aa01      	add	r2, sp, #4
    3b24:	f10d 0103 	add.w	r1, sp, #3
    3b28:	68b0      	ldr	r0, [r6, #8]
    3b2a:	f7fe fde3 	bl	26f4 <xQueueReceiveFromISR>
    3b2e:	b148      	cbz	r0, 3b44 <uart__isr_common+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:80
      uart_type->registers->THR = transmit_byte;
    3b30:	6833      	ldr	r3, [r6, #0]
    3b32:	f89d 2003 	ldrb.w	r2, [sp, #3]
    3b36:	701a      	strb	r2, [r3, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:81
      if (higher_priority_task_woke) {
    3b38:	9b01      	ldr	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:82
        context_switch_required = true;
    3b3a:	2b00      	cmp	r3, #0
    3b3c:	bf18      	it	ne
    3b3e:	2401      	movne	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:78
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    3b40:	3d01      	subs	r5, #1
    3b42:	d1ee      	bne.n	3b22 <uart__isr_common+0x22>
uart__isr_common():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:162
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    3b44:	b30c      	cbz	r4, 3b8a <uart__isr_common+0x8a>
    3b46:	4b12      	ldr	r3, [pc, #72]	; (3b90 <uart__isr_common+0x90>)
    3b48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3b4c:	601a      	str	r2, [r3, #0]
    3b4e:	f3bf 8f4f 	dsb	sy
    3b52:	f3bf 8f6f 	isb	sy
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:163
}
    3b56:	e018      	b.n	3b8a <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:96
  BaseType_t higher_priority_task_woke = 0;
    3b58:	2400      	movs	r4, #0
    3b5a:	9401      	str	r4, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:102
  while (uart_type->registers->LSR & char_available_bitmask) {
    3b5c:	6833      	ldr	r3, [r6, #0]
    3b5e:	7d1a      	ldrb	r2, [r3, #20]
    3b60:	07d2      	lsls	r2, r2, #31
    3b62:	d5ef      	bpl.n	3b44 <uart__isr_common+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:103
    const char received_byte = uart_type->registers->RBR;
    3b64:	781b      	ldrb	r3, [r3, #0]
    3b66:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:104
    xQueueSendFromISR(uart_type->queue_receive, &received_byte, &higher_priority_task_woke);
    3b6a:	aa01      	add	r2, sp, #4
    3b6c:	2300      	movs	r3, #0
    3b6e:	f10d 0103 	add.w	r1, sp, #3
    3b72:	68f0      	ldr	r0, [r6, #12]
    3b74:	f7fe fbb0 	bl	22d8 <xQueueGenericSendFromISR>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:106
    if (higher_priority_task_woke) {
    3b78:	9b01      	ldr	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:107
      context_switch_required = true;
    3b7a:	2b00      	cmp	r3, #0
    3b7c:	bf18      	it	ne
    3b7e:	2401      	movne	r4, #1
    3b80:	e7ec      	b.n	3b5c <uart__isr_common+0x5c>
uart__isr_common():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:156
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    3b82:	7d13      	ldrb	r3, [r2, #20]
    3b84:	b2db      	uxtb	r3, r3
    3b86:	9301      	str	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:157
    (void)unused_to_clear_isr;
    3b88:	9b01      	ldr	r3, [sp, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:163
}
    3b8a:	b002      	add	sp, #8
    3b8c:	bd70      	pop	{r4, r5, r6, pc}
    3b8e:	bf00      	nop
    3b90:	e000ed04 	.word	0xe000ed04

00003b94 <uart3_isr>:
uart3_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:131
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    3b94:	4801      	ldr	r0, [pc, #4]	; (3b9c <uart3_isr+0x8>)
    3b96:	f7ff bfb3 	b.w	3b00 <uart__isr_common>
    3b9a:	bf00      	nop
    3b9c:	10000170 	.word	0x10000170

00003ba0 <uart2_isr>:
uart2_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:130
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    3ba0:	4801      	ldr	r0, [pc, #4]	; (3ba8 <uart2_isr+0x8>)
    3ba2:	f7ff bfad 	b.w	3b00 <uart__isr_common>
    3ba6:	bf00      	nop
    3ba8:	10000160 	.word	0x10000160

00003bac <uart1_isr>:
uart1_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:129
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    3bac:	4801      	ldr	r0, [pc, #4]	; (3bb4 <uart1_isr+0x8>)
    3bae:	f7ff bfa7 	b.w	3b00 <uart__isr_common>
    3bb2:	bf00      	nop
    3bb4:	10000150 	.word	0x10000150

00003bb8 <uart0_isr>:
uart0_isr():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:128
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    3bb8:	4801      	ldr	r0, [pc, #4]	; (3bc0 <uart0_isr+0x8>)
    3bba:	f7ff bfa1 	b.w	3b00 <uart__isr_common>
    3bbe:	bf00      	nop
    3bc0:	10000140 	.word	0x10000140

00003bc4 <uart__init>:
uart__init():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:172
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    3bc4:	4b13      	ldr	r3, [pc, #76]	; (3c14 <uart__init+0x50>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:171
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    3bc6:	b570      	push	{r4, r5, r6, lr}
    3bc8:	4616      	mov	r6, r2
    3bca:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:172
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    3bcc:	5c18      	ldrb	r0, [r3, r0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:171
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    3bce:	460c      	mov	r4, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175

  const float roundup_offset = 0.5;
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    3bd0:	0136      	lsls	r6, r6, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:172
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    3bd2:	f7ff fec5 	bl	3960 <lpc_peripheral__turn_on_power_to>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    3bd6:	fbb4 f3f6 	udiv	r3, r4, r6
    3bda:	ee07 3a90 	vmov	s15, r3
    3bde:	eef8 7a67 	vcvt.f32.u32	s15, s15
    3be2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    3be6:	ee77 7a87 	vadd.f32	s15, s15, s14
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:182
  const uint8_t eight_bit_datalen = 3;

  // 2-stop bits helps improve baud rate error; you can remove this if bandwidth is critical to you
  const uint8_t stop_bits_is_2 = (1 << 2);

  lpc_uart *uart_regs = uarts[uart].registers;
    3bea:	012d      	lsls	r5, r5, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    3bec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:182
  lpc_uart *uart_regs = uarts[uart].registers;
    3bf0:	4a09      	ldr	r2, [pc, #36]	; (3c18 <uart__init+0x54>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    3bf2:	ee17 3a90 	vmov	r3, s15
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:182
  lpc_uart *uart_regs = uarts[uart].registers;
    3bf6:	5952      	ldr	r2, [r2, r5]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:175
  const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    3bf8:	b29b      	uxth	r3, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:184

  uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    3bfa:	2180      	movs	r1, #128	; 0x80
    3bfc:	7311      	strb	r1, [r2, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:185
  uart_regs->DLM = (divider >> 8) & 0xFF;
    3bfe:	0a19      	lsrs	r1, r3, #8
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:186
  uart_regs->DLL = (divider >> 0) & 0xFF;
    3c00:	b2db      	uxtb	r3, r3
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:185
  uart_regs->DLM = (divider >> 8) & 0xFF;
    3c02:	7111      	strb	r1, [r2, #4]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:186
  uart_regs->DLL = (divider >> 0) & 0xFF;
    3c04:	7013      	strb	r3, [r2, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:192

  /* Bootloader uses Uart0 fractional dividers and can wreck havoc in our baud rate code, so re-initialize it
   * Lesson learned: DO NOT RELY ON RESET VALUES
   */
  const uint32_t default_reset_fdr_value = (1 << 4);
  uart_regs->FDR = default_reset_fdr_value;
    3c06:	2310      	movs	r3, #16
    3c08:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:193
  uart_regs->LCR = eight_bit_datalen | stop_bits_is_2; // DLAB is reset back to zero also
    3c0c:	2307      	movs	r3, #7
    3c0e:	7313      	strb	r3, [r2, #12]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:194
}
    3c10:	bd70      	pop	{r4, r5, r6, pc}
    3c12:	bf00      	nop
    3c14:	0000b184 	.word	0x0000b184
    3c18:	10000140 	.word	0x10000140

00003c1c <uart__is_initialized>:
uart__is_initialized():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:197

bool uart__is_initialized(uart_e uart) {
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) && (0 != uarts[uart].registers->LCR);
    3c1c:	4b07      	ldr	r3, [pc, #28]	; (3c3c <uart__is_initialized+0x20>)
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:196
bool uart__is_initialized(uart_e uart) {
    3c1e:	b510      	push	{r4, lr}
    3c20:	4604      	mov	r4, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:197
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) && (0 != uarts[uart].registers->LCR);
    3c22:	5c18      	ldrb	r0, [r3, r0]
    3c24:	f7ff feae 	bl	3984 <lpc_peripheral__is_powered_on>
    3c28:	b130      	cbz	r0, 3c38 <uart__is_initialized+0x1c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:197 (discriminator 1)
    3c2a:	0124      	lsls	r4, r4, #4
    3c2c:	4b04      	ldr	r3, [pc, #16]	; (3c40 <uart__is_initialized+0x24>)
    3c2e:	591b      	ldr	r3, [r3, r4]
    3c30:	7b18      	ldrb	r0, [r3, #12]
    3c32:	3000      	adds	r0, #0
    3c34:	bf18      	it	ne
    3c36:	2001      	movne	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:198 (discriminator 6)
}
    3c38:	bd10      	pop	{r4, pc}
    3c3a:	bf00      	nop
    3c3c:	0000b184 	.word	0x0000b184
    3c40:	10000140 	.word	0x10000140

00003c44 <uart__is_transmit_queue_initialized>:
uart__is_transmit_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:63
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    3c44:	4b03      	ldr	r3, [pc, #12]	; (3c54 <uart__is_transmit_queue_initialized+0x10>)
    3c46:	eb03 1000 	add.w	r0, r3, r0, lsl #4
    3c4a:	6880      	ldr	r0, [r0, #8]
uart__is_transmit_queue_initialized():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:200

bool uart__is_transmit_queue_initialized(uart_e uart) { return uart__is_transmit_queue_enabled(uart); }
    3c4c:	3000      	adds	r0, #0
    3c4e:	bf18      	it	ne
    3c50:	2001      	movne	r0, #1
    3c52:	4770      	bx	lr
    3c54:	10000140 	.word	0x10000140

00003c58 <uart__enable_queues>:
uart__enable_queues():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:202

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive, QueueHandle_t queue_transmit) {
    3c58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    3c5c:	4607      	mov	r7, r0
    3c5e:	4689      	mov	r9, r1
    3c60:	4690      	mov	r8, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:207
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    3c62:	f7ff ffdb 	bl	3c1c <uart__is_initialized>
    3c66:	4606      	mov	r6, r0
    3c68:	b918      	cbnz	r0, 3c72 <uart__enable_queues+0x1a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:203
  bool status = false;
    3c6a:	2600      	movs	r6, #0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:231
      uart__enable_receive_and_transmit_interrupts(uart);
    }
  }

  return status;
}
    3c6c:	4630      	mov	r0, r6
    3c6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uart__is_receive_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    3c72:	4c14      	ldr	r4, [pc, #80]	; (3cc4 <uart__enable_queues+0x6c>)
    3c74:	013d      	lsls	r5, r7, #4
    3c76:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:209
    if (!uart__is_receive_queue_enabled(uart) && NULL != queue_receive) {
    3c78:	68da      	ldr	r2, [r3, #12]
    3c7a:	b922      	cbnz	r2, 3c86 <uart__enable_queues+0x2e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:209 (discriminator 1)
    3c7c:	f1b9 0f00 	cmp.w	r9, #0
    3c80:	d001      	beq.n	3c86 <uart__enable_queues+0x2e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:210
      uart_type->queue_receive = queue_receive;
    3c82:	f8c3 900c 	str.w	r9, [r3, #12]
uart__is_transmit_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:63
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    3c86:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:216
    if (!uart__is_transmit_queue_enabled(uart) && NULL != queue_transmit) {
    3c88:	689a      	ldr	r2, [r3, #8]
    3c8a:	b922      	cbnz	r2, 3c96 <uart__enable_queues+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:216 (discriminator 1)
    3c8c:	f1b8 0f00 	cmp.w	r8, #0
    3c90:	d001      	beq.n	3c96 <uart__enable_queues+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:217
      uart_type->queue_transmit = queue_transmit;
    3c92:	f8c3 8008 	str.w	r8, [r3, #8]
uart__is_receive_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    3c96:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:224
    status = uart__is_receive_queue_enabled(uart) && uart__is_transmit_queue_enabled(uart);
    3c98:	68da      	ldr	r2, [r3, #12]
    3c9a:	2a00      	cmp	r2, #0
    3c9c:	d0e5      	beq.n	3c6a <uart__enable_queues+0x12>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:225
    if (status) {
    3c9e:	689a      	ldr	r2, [r3, #8]
    3ca0:	2a00      	cmp	r2, #0
    3ca2:	d0e2      	beq.n	3c6a <uart__enable_queues+0x12>
uart__enable_receive_and_transmit_interrupts():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:116
  lpc_peripheral__enable_interrupt(uart_peripheral_ids[uart], uart__isrs[uart], uart_type->rtos_isr_trace_name);
    3ca4:	685a      	ldr	r2, [r3, #4]
    3ca6:	4b08      	ldr	r3, [pc, #32]	; (3cc8 <uart__enable_queues+0x70>)
    3ca8:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
    3cac:	4b07      	ldr	r3, [pc, #28]	; (3ccc <uart__enable_queues+0x74>)
    3cae:	5dd8      	ldrb	r0, [r3, r7]
    3cb0:	f7ff fe7a 	bl	39a8 <lpc_peripheral__enable_interrupt>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:121
  uart_type->registers->FCR = enable_rx_tx_fifo;
    3cb4:	5963      	ldr	r3, [r4, r5]
    3cb6:	2241      	movs	r2, #65	; 0x41
    3cb8:	721a      	strb	r2, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:122
  uart_type->registers->FCR = reset_rx_tx_fifo;
    3cba:	2206      	movs	r2, #6
    3cbc:	721a      	strb	r2, [r3, #8]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:125
  uart_type->registers->IER = enable_rx_tx_interrupts;
    3cbe:	2207      	movs	r2, #7
    3cc0:	605a      	str	r2, [r3, #4]
    3cc2:	e7d3      	b.n	3c6c <uart__enable_queues+0x14>
    3cc4:	10000140 	.word	0x10000140
    3cc8:	0000b174 	.word	0x0000b174
    3ccc:	0000b184 	.word	0x0000b184

00003cd0 <uart__polled_put>:
uart__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:261
  }

  return status;
}

bool uart__polled_put(uart_e uart, char output_byte) {
    3cd0:	b538      	push	{r3, r4, r5, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:263
  bool status = false;
  lpc_uart *uart_regs = uarts[uart].registers;
    3cd2:	4a07      	ldr	r2, [pc, #28]	; (3cf0 <uart__polled_put+0x20>)
    3cd4:	0103      	lsls	r3, r0, #4
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:261
bool uart__polled_put(uart_e uart, char output_byte) {
    3cd6:	460d      	mov	r5, r1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:263
  lpc_uart *uart_regs = uarts[uart].registers;
    3cd8:	58d4      	ldr	r4, [r2, r3]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:265

  if (uart__is_initialized(uart)) {
    3cda:	f7ff ff9f 	bl	3c1c <uart__is_initialized>
    3cde:	b130      	cbz	r0, 3cee <uart__polled_put+0x1e>
uart__wait_for_transmit_to_complete():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:67
  while (!(uart_regs->LSR & transmitter_empty)) {
    3ce0:	7d23      	ldrb	r3, [r4, #20]
    3ce2:	069a      	lsls	r2, r3, #26
    3ce4:	d5fc      	bpl.n	3ce0 <uart__polled_put+0x10>
uart__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:270
    status = true;

    // Wait for any prior transmission to complete
    uart__wait_for_transmit_to_complete(uart_regs);
    uart_regs->THR = output_byte;
    3ce6:	7025      	strb	r5, [r4, #0]
uart__wait_for_transmit_to_complete():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:67
  while (!(uart_regs->LSR & transmitter_empty)) {
    3ce8:	7d23      	ldrb	r3, [r4, #20]
    3cea:	069b      	lsls	r3, r3, #26
    3cec:	d5fc      	bpl.n	3ce8 <uart__polled_put+0x18>
uart__polled_put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:275
    uart__wait_for_transmit_to_complete(uart_regs);
  }

  return status;
}
    3cee:	bd38      	pop	{r3, r4, r5, pc}
    3cf0:	10000140 	.word	0x10000140

00003cf4 <uart__get>:
uart__get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:277

bool uart__get(uart_e uart, char *input_byte, uint32_t timeout_ms) {
    3cf4:	b570      	push	{r4, r5, r6, lr}
    3cf6:	4604      	mov	r4, r0
    3cf8:	460e      	mov	r6, r1
    3cfa:	4615      	mov	r5, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:279
  bool status = false;
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    3cfc:	f7ff f960 	bl	2fc0 <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    3d00:	4b0e      	ldr	r3, [pc, #56]	; (3d3c <uart__get+0x48>)
    3d02:	eb03 1304 	add.w	r3, r3, r4, lsl #4
    3d06:	68dc      	ldr	r4, [r3, #12]
uart__get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:285

  /* If a user calls this function without the RTOS running, we fail gracefully.
   * We do not desire to perform polling because that would involve time keeping
   * without an RTOS which increases the driver complexity.
   */
  if (uart__is_receive_queue_enabled(uart) && rtos_is_running) {
    3d08:	b1b4      	cbz	r4, 3d38 <uart__get+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:285 (discriminator 1)
    3d0a:	2802      	cmp	r0, #2
    3d0c:	d114      	bne.n	3d38 <uart__get+0x44>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:286
    status = xQueueReceive(uarts[uart].queue_receive, input_byte, RTOS_MS_TO_TICKS(timeout_ms));
    3d0e:	1c6b      	adds	r3, r5, #1
    3d10:	d009      	beq.n	3d26 <uart__get+0x32>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:286 (discriminator 1)
    3d12:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    3d16:	fba5 0100 	umull	r0, r1, r5, r0
    3d1a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3d1e:	2300      	movs	r3, #0
    3d20:	f000 f876 	bl	3e10 <__aeabi_uldivmod>
    3d24:	4605      	mov	r5, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:286 (discriminator 4)
    3d26:	462a      	mov	r2, r5
    3d28:	4631      	mov	r1, r6
    3d2a:	4620      	mov	r0, r4
    3d2c:	f7fe fb84 	bl	2438 <xQueueReceive>
    3d30:	3000      	adds	r0, #0
    3d32:	bf18      	it	ne
    3d34:	2001      	movne	r0, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:290
  }

  return status;
}
    3d36:	bd70      	pop	{r4, r5, r6, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:278
  bool status = false;
    3d38:	2000      	movs	r0, #0
    3d3a:	e7fc      	b.n	3d36 <uart__get+0x42>
    3d3c:	10000140 	.word	0x10000140

00003d40 <uart__polled_get>:
uart__polled_get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:233
bool uart__polled_get(uart_e uart, char *input_byte) {
    3d40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    3d44:	4605      	mov	r5, r0
    3d46:	460e      	mov	r6, r1
uart__is_receive_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    3d48:	4c11      	ldr	r4, [pc, #68]	; (3d90 <uart__polled_get+0x50>)
uart__polled_get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:236
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    3d4a:	f7ff f939 	bl	2fc0 <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    3d4e:	012f      	lsls	r7, r5, #4
    3d50:	19e3      	adds	r3, r4, r7
uart__polled_get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:236
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    3d52:	4681      	mov	r9, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:239
  if (uart__is_initialized(uart)) {
    3d54:	4628      	mov	r0, r5
uart__is_receive_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:62
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    3d56:	f8d3 800c 	ldr.w	r8, [r3, #12]
uart__polled_get():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:239
  if (uart__is_initialized(uart)) {
    3d5a:	f7ff ff5f 	bl	3c1c <uart__is_initialized>
    3d5e:	b198      	cbz	r0, 3d88 <uart__polled_get+0x48>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:246
    if (rtos_is_running && queue_is_enabled) {
    3d60:	f1b9 0f02 	cmp.w	r9, #2
    3d64:	d10a      	bne.n	3d7c <uart__polled_get+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:246 (discriminator 1)
    3d66:	f1b8 0f00 	cmp.w	r8, #0
    3d6a:	d007      	beq.n	3d7c <uart__polled_get+0x3c>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:247
      status = uart__get(uart, input_byte, UINT32_MAX);
    3d6c:	4631      	mov	r1, r6
    3d6e:	4628      	mov	r0, r5
    3d70:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:259
}
    3d74:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:247
      status = uart__get(uart, input_byte, UINT32_MAX);
    3d78:	f7ff bfbc 	b.w	3cf4 <uart__get>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:249
      lpc_uart *uart_regs = uarts[uart].registers;
    3d7c:	59e3      	ldr	r3, [r4, r7]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:252 (discriminator 1)
      while (!(uart_regs->LSR & char_available_bitmask)) {
    3d7e:	7d1a      	ldrb	r2, [r3, #20]
    3d80:	07d2      	lsls	r2, r2, #31
    3d82:	d5fc      	bpl.n	3d7e <uart__polled_get+0x3e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:254
      *input_byte = uart_regs->RBR;
    3d84:	781b      	ldrb	r3, [r3, #0]
    3d86:	7033      	strb	r3, [r6, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:259
}
    3d88:	2000      	movs	r0, #0
    3d8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    3d8e:	bf00      	nop
    3d90:	10000140 	.word	0x10000140

00003d94 <uart__put>:
uart__put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:292

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    3d94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    3d96:	4605      	mov	r5, r0
uart__is_transmit_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:63
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    3d98:	4e1c      	ldr	r6, [pc, #112]	; (3e0c <uart__put+0x78>)
uart__put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:292
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    3d9a:	f88d 1007 	strb.w	r1, [sp, #7]
uart__is_transmit_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:63
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    3d9e:	012d      	lsls	r5, r5, #4
uart__put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:292
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    3da0:	4617      	mov	r7, r2
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:294
  bool status = false;
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    3da2:	f7ff f90d 	bl	2fc0 <xTaskGetSchedulerState>
uart__is_transmit_queue_enabled():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:63
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    3da6:	1973      	adds	r3, r6, r5
    3da8:	689c      	ldr	r4, [r3, #8]
uart__put():
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:296

  if (uart__is_transmit_queue_enabled(uart) && rtos_is_running) {
    3daa:	b354      	cbz	r4, 3e02 <uart__put+0x6e>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:296 (discriminator 1)
    3dac:	2802      	cmp	r0, #2
    3dae:	d12b      	bne.n	3e08 <uart__put+0x74>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:298
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte, RTOS_MS_TO_TICKS(timeout_ms));
    3db0:	1c79      	adds	r1, r7, #1
    3db2:	d009      	beq.n	3dc8 <uart__put+0x34>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:298 (discriminator 1)
    3db4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    3db8:	fba7 0100 	umull	r0, r1, r7, r0
    3dbc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3dc0:	2300      	movs	r3, #0
    3dc2:	f000 f825 	bl	3e10 <__aeabi_uldivmod>
    3dc6:	4607      	mov	r7, r0
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:298 (discriminator 4)
    3dc8:	2300      	movs	r3, #0
    3dca:	463a      	mov	r2, r7
    3dcc:	f10d 0107 	add.w	r1, sp, #7
    3dd0:	4620      	mov	r0, r4
    3dd2:	f7fe f9ab 	bl	212c <xQueueGenericSend>
    3dd6:	1c04      	adds	r4, r0, #0
    3dd8:	bf18      	it	ne
    3dda:	2401      	movne	r4, #1
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:304 (discriminator 4)

    /* 'Transmit Complete Interrupt' may have already fired when we get here, so if there is no further pending data
     * to be sent, it will not fire again to send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    3ddc:	f7fd fed2 	bl	1b84 <vPortEnterCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:306 (discriminator 4)
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    3de0:	1973      	adds	r3, r6, r5
    3de2:	5975      	ldr	r5, [r6, r5]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:309 (discriminator 4)
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    3de4:	7d2a      	ldrb	r2, [r5, #20]
    3de6:	0652      	lsls	r2, r2, #25
    3de8:	d509      	bpl.n	3dfe <uart__put+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:313
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API  variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte, NULL)) {
    3dea:	2200      	movs	r2, #0
    3dec:	f10d 0107 	add.w	r1, sp, #7
    3df0:	6898      	ldr	r0, [r3, #8]
    3df2:	f7fe fc7f 	bl	26f4 <xQueueReceiveFromISR>
    3df6:	b110      	cbz	r0, 3dfe <uart__put+0x6a>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:314
          uart_regs->THR = output_byte;
    3df8:	f89d 3007 	ldrb.w	r3, [sp, #7]
    3dfc:	702b      	strb	r3, [r5, #0]
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:318
        }
      }
    }
    portEXIT_CRITICAL();
    3dfe:	f7fd fee3 	bl	1bc8 <vPortExitCritical>
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:322
  }

  return status;
}
    3e02:	4620      	mov	r0, r4
    3e04:	b003      	add	sp, #12
    3e06:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/sean/Movies/sjtwo-c/projects/lpc40xx_freertos/l3_drivers/sources/uart.c:293
  bool status = false;
    3e08:	2400      	movs	r4, #0
    3e0a:	e7fa      	b.n	3e02 <uart__put+0x6e>
    3e0c:	10000140 	.word	0x10000140

00003e10 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    3e10:	b953      	cbnz	r3, 3e28 <__aeabi_uldivmod+0x18>
    3e12:	b94a      	cbnz	r2, 3e28 <__aeabi_uldivmod+0x18>
    3e14:	2900      	cmp	r1, #0
    3e16:	bf08      	it	eq
    3e18:	2800      	cmpeq	r0, #0
    3e1a:	bf1c      	itt	ne
    3e1c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
    3e20:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    3e24:	f000 b974 	b.w	4110 <__aeabi_idiv0>
    3e28:	f1ad 0c08 	sub.w	ip, sp, #8
    3e2c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    3e30:	f000 f806 	bl	3e40 <__udivmoddi4>
    3e34:	f8dd e004 	ldr.w	lr, [sp, #4]
    3e38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    3e3c:	b004      	add	sp, #16
    3e3e:	4770      	bx	lr

00003e40 <__udivmoddi4>:
__udivmoddi4():
    3e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    3e44:	9e08      	ldr	r6, [sp, #32]
    3e46:	4604      	mov	r4, r0
    3e48:	4688      	mov	r8, r1
    3e4a:	2b00      	cmp	r3, #0
    3e4c:	f040 8085 	bne.w	3f5a <__udivmoddi4+0x11a>
    3e50:	428a      	cmp	r2, r1
    3e52:	4615      	mov	r5, r2
    3e54:	d948      	bls.n	3ee8 <__udivmoddi4+0xa8>
    3e56:	fab2 f282 	clz	r2, r2
    3e5a:	b14a      	cbz	r2, 3e70 <__udivmoddi4+0x30>
    3e5c:	f1c2 0720 	rsb	r7, r2, #32
    3e60:	fa01 f302 	lsl.w	r3, r1, r2
    3e64:	fa20 f707 	lsr.w	r7, r0, r7
    3e68:	4095      	lsls	r5, r2
    3e6a:	ea47 0803 	orr.w	r8, r7, r3
    3e6e:	4094      	lsls	r4, r2
    3e70:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    3e74:	0c23      	lsrs	r3, r4, #16
    3e76:	fbb8 f7fe 	udiv	r7, r8, lr
    3e7a:	fa1f fc85 	uxth.w	ip, r5
    3e7e:	fb0e 8817 	mls	r8, lr, r7, r8
    3e82:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    3e86:	fb07 f10c 	mul.w	r1, r7, ip
    3e8a:	4299      	cmp	r1, r3
    3e8c:	d909      	bls.n	3ea2 <__udivmoddi4+0x62>
    3e8e:	18eb      	adds	r3, r5, r3
    3e90:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
    3e94:	f080 80e3 	bcs.w	405e <__udivmoddi4+0x21e>
    3e98:	4299      	cmp	r1, r3
    3e9a:	f240 80e0 	bls.w	405e <__udivmoddi4+0x21e>
    3e9e:	3f02      	subs	r7, #2
    3ea0:	442b      	add	r3, r5
    3ea2:	1a5b      	subs	r3, r3, r1
    3ea4:	b2a4      	uxth	r4, r4
    3ea6:	fbb3 f0fe 	udiv	r0, r3, lr
    3eaa:	fb0e 3310 	mls	r3, lr, r0, r3
    3eae:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    3eb2:	fb00 fc0c 	mul.w	ip, r0, ip
    3eb6:	45a4      	cmp	ip, r4
    3eb8:	d909      	bls.n	3ece <__udivmoddi4+0x8e>
    3eba:	192c      	adds	r4, r5, r4
    3ebc:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    3ec0:	f080 80cb 	bcs.w	405a <__udivmoddi4+0x21a>
    3ec4:	45a4      	cmp	ip, r4
    3ec6:	f240 80c8 	bls.w	405a <__udivmoddi4+0x21a>
    3eca:	3802      	subs	r0, #2
    3ecc:	442c      	add	r4, r5
    3ece:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    3ed2:	eba4 040c 	sub.w	r4, r4, ip
    3ed6:	2700      	movs	r7, #0
    3ed8:	b11e      	cbz	r6, 3ee2 <__udivmoddi4+0xa2>
    3eda:	40d4      	lsrs	r4, r2
    3edc:	2300      	movs	r3, #0
    3ede:	e9c6 4300 	strd	r4, r3, [r6]
    3ee2:	4639      	mov	r1, r7
    3ee4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    3ee8:	2a00      	cmp	r2, #0
    3eea:	d053      	beq.n	3f94 <__udivmoddi4+0x154>
    3eec:	fab2 f282 	clz	r2, r2
    3ef0:	2a00      	cmp	r2, #0
    3ef2:	f040 80b6 	bne.w	4062 <__udivmoddi4+0x222>
    3ef6:	1b49      	subs	r1, r1, r5
    3ef8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    3efc:	fa1f f885 	uxth.w	r8, r5
    3f00:	2701      	movs	r7, #1
    3f02:	fbb1 fcfe 	udiv	ip, r1, lr
    3f06:	0c23      	lsrs	r3, r4, #16
    3f08:	fb0e 111c 	mls	r1, lr, ip, r1
    3f0c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    3f10:	fb08 f10c 	mul.w	r1, r8, ip
    3f14:	4299      	cmp	r1, r3
    3f16:	d907      	bls.n	3f28 <__udivmoddi4+0xe8>
    3f18:	18eb      	adds	r3, r5, r3
    3f1a:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
    3f1e:	d202      	bcs.n	3f26 <__udivmoddi4+0xe6>
    3f20:	4299      	cmp	r1, r3
    3f22:	f200 80ec 	bhi.w	40fe <__udivmoddi4+0x2be>
    3f26:	4684      	mov	ip, r0
    3f28:	1a59      	subs	r1, r3, r1
    3f2a:	b2a3      	uxth	r3, r4
    3f2c:	fbb1 f0fe 	udiv	r0, r1, lr
    3f30:	fb0e 1410 	mls	r4, lr, r0, r1
    3f34:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    3f38:	fb08 f800 	mul.w	r8, r8, r0
    3f3c:	45a0      	cmp	r8, r4
    3f3e:	d907      	bls.n	3f50 <__udivmoddi4+0x110>
    3f40:	192c      	adds	r4, r5, r4
    3f42:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    3f46:	d202      	bcs.n	3f4e <__udivmoddi4+0x10e>
    3f48:	45a0      	cmp	r8, r4
    3f4a:	f200 80dc 	bhi.w	4106 <__udivmoddi4+0x2c6>
    3f4e:	4618      	mov	r0, r3
    3f50:	eba4 0408 	sub.w	r4, r4, r8
    3f54:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    3f58:	e7be      	b.n	3ed8 <__udivmoddi4+0x98>
    3f5a:	428b      	cmp	r3, r1
    3f5c:	d908      	bls.n	3f70 <__udivmoddi4+0x130>
    3f5e:	2e00      	cmp	r6, #0
    3f60:	d078      	beq.n	4054 <__udivmoddi4+0x214>
    3f62:	2700      	movs	r7, #0
    3f64:	e9c6 0100 	strd	r0, r1, [r6]
    3f68:	4638      	mov	r0, r7
    3f6a:	4639      	mov	r1, r7
    3f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    3f70:	fab3 f783 	clz	r7, r3
    3f74:	b97f      	cbnz	r7, 3f96 <__udivmoddi4+0x156>
    3f76:	428b      	cmp	r3, r1
    3f78:	d302      	bcc.n	3f80 <__udivmoddi4+0x140>
    3f7a:	4282      	cmp	r2, r0
    3f7c:	f200 80bd 	bhi.w	40fa <__udivmoddi4+0x2ba>
    3f80:	1a84      	subs	r4, r0, r2
    3f82:	eb61 0303 	sbc.w	r3, r1, r3
    3f86:	2001      	movs	r0, #1
    3f88:	4698      	mov	r8, r3
    3f8a:	2e00      	cmp	r6, #0
    3f8c:	d0a9      	beq.n	3ee2 <__udivmoddi4+0xa2>
    3f8e:	e9c6 4800 	strd	r4, r8, [r6]
    3f92:	e7a6      	b.n	3ee2 <__udivmoddi4+0xa2>
    3f94:	deff      	udf	#255	; 0xff
    3f96:	f1c7 0520 	rsb	r5, r7, #32
    3f9a:	40bb      	lsls	r3, r7
    3f9c:	fa22 fc05 	lsr.w	ip, r2, r5
    3fa0:	ea4c 0c03 	orr.w	ip, ip, r3
    3fa4:	fa01 f407 	lsl.w	r4, r1, r7
    3fa8:	fa20 f805 	lsr.w	r8, r0, r5
    3fac:	fa21 f305 	lsr.w	r3, r1, r5
    3fb0:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    3fb4:	ea48 0404 	orr.w	r4, r8, r4
    3fb8:	fbb3 f9fe 	udiv	r9, r3, lr
    3fbc:	0c21      	lsrs	r1, r4, #16
    3fbe:	fb0e 3319 	mls	r3, lr, r9, r3
    3fc2:	fa1f f88c 	uxth.w	r8, ip
    3fc6:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    3fca:	fb09 fa08 	mul.w	sl, r9, r8
    3fce:	459a      	cmp	sl, r3
    3fd0:	fa02 f207 	lsl.w	r2, r2, r7
    3fd4:	fa00 f107 	lsl.w	r1, r0, r7
    3fd8:	d90b      	bls.n	3ff2 <__udivmoddi4+0x1b2>
    3fda:	eb1c 0303 	adds.w	r3, ip, r3
    3fde:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
    3fe2:	f080 8088 	bcs.w	40f6 <__udivmoddi4+0x2b6>
    3fe6:	459a      	cmp	sl, r3
    3fe8:	f240 8085 	bls.w	40f6 <__udivmoddi4+0x2b6>
    3fec:	f1a9 0902 	sub.w	r9, r9, #2
    3ff0:	4463      	add	r3, ip
    3ff2:	eba3 030a 	sub.w	r3, r3, sl
    3ff6:	b2a4      	uxth	r4, r4
    3ff8:	fbb3 f0fe 	udiv	r0, r3, lr
    3ffc:	fb0e 3310 	mls	r3, lr, r0, r3
    4000:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    4004:	fb00 f808 	mul.w	r8, r0, r8
    4008:	45a0      	cmp	r8, r4
    400a:	d908      	bls.n	401e <__udivmoddi4+0x1de>
    400c:	eb1c 0404 	adds.w	r4, ip, r4
    4010:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4014:	d26b      	bcs.n	40ee <__udivmoddi4+0x2ae>
    4016:	45a0      	cmp	r8, r4
    4018:	d969      	bls.n	40ee <__udivmoddi4+0x2ae>
    401a:	3802      	subs	r0, #2
    401c:	4464      	add	r4, ip
    401e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    4022:	eba4 0408 	sub.w	r4, r4, r8
    4026:	fba0 8902 	umull	r8, r9, r0, r2
    402a:	454c      	cmp	r4, r9
    402c:	46c6      	mov	lr, r8
    402e:	464b      	mov	r3, r9
    4030:	d354      	bcc.n	40dc <__udivmoddi4+0x29c>
    4032:	d051      	beq.n	40d8 <__udivmoddi4+0x298>
    4034:	2e00      	cmp	r6, #0
    4036:	d069      	beq.n	410c <__udivmoddi4+0x2cc>
    4038:	ebb1 020e 	subs.w	r2, r1, lr
    403c:	eb64 0403 	sbc.w	r4, r4, r3
    4040:	fa04 f505 	lsl.w	r5, r4, r5
    4044:	fa22 f307 	lsr.w	r3, r2, r7
    4048:	40fc      	lsrs	r4, r7
    404a:	431d      	orrs	r5, r3
    404c:	e9c6 5400 	strd	r5, r4, [r6]
    4050:	2700      	movs	r7, #0
    4052:	e746      	b.n	3ee2 <__udivmoddi4+0xa2>
    4054:	4637      	mov	r7, r6
    4056:	4630      	mov	r0, r6
    4058:	e743      	b.n	3ee2 <__udivmoddi4+0xa2>
    405a:	4618      	mov	r0, r3
    405c:	e737      	b.n	3ece <__udivmoddi4+0x8e>
    405e:	4607      	mov	r7, r0
    4060:	e71f      	b.n	3ea2 <__udivmoddi4+0x62>
    4062:	f1c2 0320 	rsb	r3, r2, #32
    4066:	fa20 f703 	lsr.w	r7, r0, r3
    406a:	4095      	lsls	r5, r2
    406c:	fa01 f002 	lsl.w	r0, r1, r2
    4070:	fa21 f303 	lsr.w	r3, r1, r3
    4074:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    4078:	4338      	orrs	r0, r7
    407a:	0c01      	lsrs	r1, r0, #16
    407c:	fbb3 f7fe 	udiv	r7, r3, lr
    4080:	fa1f f885 	uxth.w	r8, r5
    4084:	fb0e 3317 	mls	r3, lr, r7, r3
    4088:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    408c:	fb07 f308 	mul.w	r3, r7, r8
    4090:	428b      	cmp	r3, r1
    4092:	fa04 f402 	lsl.w	r4, r4, r2
    4096:	d907      	bls.n	40a8 <__udivmoddi4+0x268>
    4098:	1869      	adds	r1, r5, r1
    409a:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
    409e:	d228      	bcs.n	40f2 <__udivmoddi4+0x2b2>
    40a0:	428b      	cmp	r3, r1
    40a2:	d926      	bls.n	40f2 <__udivmoddi4+0x2b2>
    40a4:	3f02      	subs	r7, #2
    40a6:	4429      	add	r1, r5
    40a8:	1acb      	subs	r3, r1, r3
    40aa:	b281      	uxth	r1, r0
    40ac:	fbb3 f0fe 	udiv	r0, r3, lr
    40b0:	fb0e 3310 	mls	r3, lr, r0, r3
    40b4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    40b8:	fb00 f308 	mul.w	r3, r0, r8
    40bc:	428b      	cmp	r3, r1
    40be:	d907      	bls.n	40d0 <__udivmoddi4+0x290>
    40c0:	1869      	adds	r1, r5, r1
    40c2:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    40c6:	d210      	bcs.n	40ea <__udivmoddi4+0x2aa>
    40c8:	428b      	cmp	r3, r1
    40ca:	d90e      	bls.n	40ea <__udivmoddi4+0x2aa>
    40cc:	3802      	subs	r0, #2
    40ce:	4429      	add	r1, r5
    40d0:	1ac9      	subs	r1, r1, r3
    40d2:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    40d6:	e714      	b.n	3f02 <__udivmoddi4+0xc2>
    40d8:	4541      	cmp	r1, r8
    40da:	d2ab      	bcs.n	4034 <__udivmoddi4+0x1f4>
    40dc:	ebb8 0e02 	subs.w	lr, r8, r2
    40e0:	eb69 020c 	sbc.w	r2, r9, ip
    40e4:	3801      	subs	r0, #1
    40e6:	4613      	mov	r3, r2
    40e8:	e7a4      	b.n	4034 <__udivmoddi4+0x1f4>
    40ea:	4660      	mov	r0, ip
    40ec:	e7f0      	b.n	40d0 <__udivmoddi4+0x290>
    40ee:	4618      	mov	r0, r3
    40f0:	e795      	b.n	401e <__udivmoddi4+0x1de>
    40f2:	4667      	mov	r7, ip
    40f4:	e7d8      	b.n	40a8 <__udivmoddi4+0x268>
    40f6:	4681      	mov	r9, r0
    40f8:	e77b      	b.n	3ff2 <__udivmoddi4+0x1b2>
    40fa:	4638      	mov	r0, r7
    40fc:	e745      	b.n	3f8a <__udivmoddi4+0x14a>
    40fe:	f1ac 0c02 	sub.w	ip, ip, #2
    4102:	442b      	add	r3, r5
    4104:	e710      	b.n	3f28 <__udivmoddi4+0xe8>
    4106:	3802      	subs	r0, #2
    4108:	442c      	add	r4, r5
    410a:	e721      	b.n	3f50 <__udivmoddi4+0x110>
    410c:	4637      	mov	r7, r6
    410e:	e6e8      	b.n	3ee2 <__udivmoddi4+0xa2>

00004110 <__aeabi_idiv0>:
__aeabi_idiv0():
    4110:	4770      	bx	lr
    4112:	bf00      	nop

00004114 <atoi>:
atoi():
    4114:	220a      	movs	r2, #10
    4116:	2100      	movs	r1, #0
    4118:	f002 b986 	b.w	6428 <strtol>

0000411c <fiprintf>:
fiprintf():
    411c:	b40e      	push	{r1, r2, r3}
    411e:	b503      	push	{r0, r1, lr}
    4120:	4601      	mov	r1, r0
    4122:	ab03      	add	r3, sp, #12
    4124:	4805      	ldr	r0, [pc, #20]	; (413c <fiprintf+0x20>)
    4126:	f853 2b04 	ldr.w	r2, [r3], #4
    412a:	6800      	ldr	r0, [r0, #0]
    412c:	9301      	str	r3, [sp, #4]
    412e:	f000 f99d 	bl	446c <_vfiprintf_r>
    4132:	b002      	add	sp, #8
    4134:	f85d eb04 	ldr.w	lr, [sp], #4
    4138:	b003      	add	sp, #12
    413a:	4770      	bx	lr
    413c:	10000180 	.word	0x10000180

00004140 <_fputs_r>:
_fputs_r():
    4140:	b570      	push	{r4, r5, r6, lr}
    4142:	460e      	mov	r6, r1
    4144:	4614      	mov	r4, r2
    4146:	4605      	mov	r5, r0
    4148:	b118      	cbz	r0, 4152 <_fputs_r+0x12>
    414a:	6983      	ldr	r3, [r0, #24]
    414c:	b90b      	cbnz	r3, 4152 <_fputs_r+0x12>
    414e:	f003 fa0d 	bl	756c <__sinit>
    4152:	4b2b      	ldr	r3, [pc, #172]	; (4200 <_fputs_r+0xc0>)
    4154:	429c      	cmp	r4, r3
    4156:	d11e      	bne.n	4196 <_fputs_r+0x56>
    4158:	686c      	ldr	r4, [r5, #4]
    415a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    415c:	07da      	lsls	r2, r3, #31
    415e:	d405      	bmi.n	416c <_fputs_r+0x2c>
    4160:	89a3      	ldrh	r3, [r4, #12]
    4162:	059b      	lsls	r3, r3, #22
    4164:	d402      	bmi.n	416c <_fputs_r+0x2c>
    4166:	6da0      	ldr	r0, [r4, #88]	; 0x58
    4168:	f000 f86b 	bl	4242 <__retarget_lock_acquire_recursive>
    416c:	89a3      	ldrh	r3, [r4, #12]
    416e:	0718      	lsls	r0, r3, #28
    4170:	d51b      	bpl.n	41aa <_fputs_r+0x6a>
    4172:	6923      	ldr	r3, [r4, #16]
    4174:	b1cb      	cbz	r3, 41aa <_fputs_r+0x6a>
    4176:	3e01      	subs	r6, #1
    4178:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    417c:	bb39      	cbnz	r1, 41ce <_fputs_r+0x8e>
    417e:	6e65      	ldr	r5, [r4, #100]	; 0x64
    4180:	f015 0501 	ands.w	r5, r5, #1
    4184:	d139      	bne.n	41fa <_fputs_r+0xba>
    4186:	89a3      	ldrh	r3, [r4, #12]
    4188:	0599      	lsls	r1, r3, #22
    418a:	d402      	bmi.n	4192 <_fputs_r+0x52>
    418c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    418e:	f000 f859 	bl	4244 <__retarget_lock_release_recursive>
    4192:	4628      	mov	r0, r5
    4194:	bd70      	pop	{r4, r5, r6, pc}
    4196:	4b1b      	ldr	r3, [pc, #108]	; (4204 <_fputs_r+0xc4>)
    4198:	429c      	cmp	r4, r3
    419a:	d101      	bne.n	41a0 <_fputs_r+0x60>
    419c:	68ac      	ldr	r4, [r5, #8]
    419e:	e7dc      	b.n	415a <_fputs_r+0x1a>
    41a0:	4b19      	ldr	r3, [pc, #100]	; (4208 <_fputs_r+0xc8>)
    41a2:	429c      	cmp	r4, r3
    41a4:	bf08      	it	eq
    41a6:	68ec      	ldreq	r4, [r5, #12]
    41a8:	e7d7      	b.n	415a <_fputs_r+0x1a>
    41aa:	4621      	mov	r1, r4
    41ac:	4628      	mov	r0, r5
    41ae:	f002 f9ff 	bl	65b0 <__swsetup_r>
    41b2:	2800      	cmp	r0, #0
    41b4:	d0df      	beq.n	4176 <_fputs_r+0x36>
    41b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    41b8:	07da      	lsls	r2, r3, #31
    41ba:	d405      	bmi.n	41c8 <_fputs_r+0x88>
    41bc:	89a3      	ldrh	r3, [r4, #12]
    41be:	059b      	lsls	r3, r3, #22
    41c0:	d402      	bmi.n	41c8 <_fputs_r+0x88>
    41c2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    41c4:	f000 f83e 	bl	4244 <__retarget_lock_release_recursive>
    41c8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    41cc:	e7e1      	b.n	4192 <_fputs_r+0x52>
    41ce:	68a3      	ldr	r3, [r4, #8]
    41d0:	3b01      	subs	r3, #1
    41d2:	2b00      	cmp	r3, #0
    41d4:	60a3      	str	r3, [r4, #8]
    41d6:	da04      	bge.n	41e2 <_fputs_r+0xa2>
    41d8:	69a2      	ldr	r2, [r4, #24]
    41da:	4293      	cmp	r3, r2
    41dc:	db06      	blt.n	41ec <_fputs_r+0xac>
    41de:	290a      	cmp	r1, #10
    41e0:	d004      	beq.n	41ec <_fputs_r+0xac>
    41e2:	6823      	ldr	r3, [r4, #0]
    41e4:	1c5a      	adds	r2, r3, #1
    41e6:	6022      	str	r2, [r4, #0]
    41e8:	7019      	strb	r1, [r3, #0]
    41ea:	e7c5      	b.n	4178 <_fputs_r+0x38>
    41ec:	4622      	mov	r2, r4
    41ee:	4628      	mov	r0, r5
    41f0:	f002 f98c 	bl	650c <__swbuf_r>
    41f4:	3001      	adds	r0, #1
    41f6:	d1bf      	bne.n	4178 <_fputs_r+0x38>
    41f8:	e7dd      	b.n	41b6 <_fputs_r+0x76>
    41fa:	460d      	mov	r5, r1
    41fc:	e7c9      	b.n	4192 <_fputs_r+0x52>
    41fe:	bf00      	nop
    4200:	0000b358 	.word	0x0000b358
    4204:	0000b378 	.word	0x0000b378
    4208:	0000b338 	.word	0x0000b338

0000420c <fputs>:
fputs():
    420c:	4b02      	ldr	r3, [pc, #8]	; (4218 <fputs+0xc>)
    420e:	460a      	mov	r2, r1
    4210:	4601      	mov	r1, r0
    4212:	6818      	ldr	r0, [r3, #0]
    4214:	f7ff bf94 	b.w	4140 <_fputs_r>
    4218:	10000180 	.word	0x10000180

0000421c <getchar>:
getchar():
    421c:	4b07      	ldr	r3, [pc, #28]	; (423c <getchar+0x20>)
    421e:	b510      	push	{r4, lr}
    4220:	681c      	ldr	r4, [r3, #0]
    4222:	b124      	cbz	r4, 422e <getchar+0x12>
    4224:	69a3      	ldr	r3, [r4, #24]
    4226:	b913      	cbnz	r3, 422e <getchar+0x12>
    4228:	4620      	mov	r0, r4
    422a:	f003 f99f 	bl	756c <__sinit>
    422e:	6861      	ldr	r1, [r4, #4]
    4230:	4620      	mov	r0, r4
    4232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    4236:	f003 bd7b 	b.w	7d30 <_getc_r>
    423a:	bf00      	nop
    423c:	10000180 	.word	0x10000180

00004240 <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
    4240:	4770      	bx	lr

00004242 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    4242:	4770      	bx	lr

00004244 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    4244:	4770      	bx	lr
    4246:	Address 0x0000000000004246 is out of bounds.


00004248 <malloc>:
malloc():
    4248:	4b02      	ldr	r3, [pc, #8]	; (4254 <malloc+0xc>)
    424a:	4601      	mov	r1, r0
    424c:	6818      	ldr	r0, [r3, #0]
    424e:	f000 b889 	b.w	4364 <_malloc_r>
    4252:	bf00      	nop
    4254:	10000180 	.word	0x10000180

00004258 <free>:
free():
    4258:	4b02      	ldr	r3, [pc, #8]	; (4264 <free+0xc>)
    425a:	4601      	mov	r1, r0
    425c:	6818      	ldr	r0, [r3, #0]
    425e:	f000 b833 	b.w	42c8 <_free_r>
    4262:	bf00      	nop
    4264:	10000180 	.word	0x10000180

00004268 <memcpy>:
memcpy():
    4268:	440a      	add	r2, r1
    426a:	4291      	cmp	r1, r2
    426c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4270:	d100      	bne.n	4274 <memcpy+0xc>
    4272:	4770      	bx	lr
    4274:	b510      	push	{r4, lr}
    4276:	f811 4b01 	ldrb.w	r4, [r1], #1
    427a:	f803 4f01 	strb.w	r4, [r3, #1]!
    427e:	4291      	cmp	r1, r2
    4280:	d1f9      	bne.n	4276 <memcpy+0xe>
    4282:	bd10      	pop	{r4, pc}

00004284 <memmove>:
memmove():
    4284:	4288      	cmp	r0, r1
    4286:	b510      	push	{r4, lr}
    4288:	eb01 0302 	add.w	r3, r1, r2
    428c:	d902      	bls.n	4294 <memmove+0x10>
    428e:	4283      	cmp	r3, r0
    4290:	461c      	mov	r4, r3
    4292:	d807      	bhi.n	42a4 <memmove+0x20>
    4294:	1e42      	subs	r2, r0, #1
    4296:	4299      	cmp	r1, r3
    4298:	d008      	beq.n	42ac <memmove+0x28>
    429a:	f811 4b01 	ldrb.w	r4, [r1], #1
    429e:	f802 4f01 	strb.w	r4, [r2, #1]!
    42a2:	e7f8      	b.n	4296 <memmove+0x12>
    42a4:	1883      	adds	r3, r0, r2
    42a6:	1a9a      	subs	r2, r3, r2
    42a8:	429a      	cmp	r2, r3
    42aa:	d100      	bne.n	42ae <memmove+0x2a>
    42ac:	bd10      	pop	{r4, pc}
    42ae:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
    42b2:	f803 1d01 	strb.w	r1, [r3, #-1]!
    42b6:	e7f7      	b.n	42a8 <memmove+0x24>

000042b8 <memset>:
memset():
    42b8:	4402      	add	r2, r0
    42ba:	4603      	mov	r3, r0
    42bc:	4293      	cmp	r3, r2
    42be:	d100      	bne.n	42c2 <memset+0xa>
    42c0:	4770      	bx	lr
    42c2:	f803 1b01 	strb.w	r1, [r3], #1
    42c6:	e7f9      	b.n	42bc <memset+0x4>

000042c8 <_free_r>:
_free_r():
    42c8:	b538      	push	{r3, r4, r5, lr}
    42ca:	4605      	mov	r5, r0
    42cc:	2900      	cmp	r1, #0
    42ce:	d045      	beq.n	435c <_free_r+0x94>
    42d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
    42d4:	1f0c      	subs	r4, r1, #4
    42d6:	2b00      	cmp	r3, #0
    42d8:	bfb8      	it	lt
    42da:	18e4      	addlt	r4, r4, r3
    42dc:	f003 fe38 	bl	7f50 <__malloc_lock>
    42e0:	4a1f      	ldr	r2, [pc, #124]	; (4360 <_free_r+0x98>)
    42e2:	6813      	ldr	r3, [r2, #0]
    42e4:	4610      	mov	r0, r2
    42e6:	b933      	cbnz	r3, 42f6 <_free_r+0x2e>
    42e8:	6063      	str	r3, [r4, #4]
    42ea:	6014      	str	r4, [r2, #0]
    42ec:	4628      	mov	r0, r5
    42ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    42f2:	f003 be33 	b.w	7f5c <__malloc_unlock>
    42f6:	42a3      	cmp	r3, r4
    42f8:	d90c      	bls.n	4314 <_free_r+0x4c>
    42fa:	6821      	ldr	r1, [r4, #0]
    42fc:	1862      	adds	r2, r4, r1
    42fe:	4293      	cmp	r3, r2
    4300:	bf04      	itt	eq
    4302:	681a      	ldreq	r2, [r3, #0]
    4304:	685b      	ldreq	r3, [r3, #4]
    4306:	6063      	str	r3, [r4, #4]
    4308:	bf04      	itt	eq
    430a:	1852      	addeq	r2, r2, r1
    430c:	6022      	streq	r2, [r4, #0]
    430e:	6004      	str	r4, [r0, #0]
    4310:	e7ec      	b.n	42ec <_free_r+0x24>
    4312:	4613      	mov	r3, r2
    4314:	685a      	ldr	r2, [r3, #4]
    4316:	b10a      	cbz	r2, 431c <_free_r+0x54>
    4318:	42a2      	cmp	r2, r4
    431a:	d9fa      	bls.n	4312 <_free_r+0x4a>
    431c:	6819      	ldr	r1, [r3, #0]
    431e:	1858      	adds	r0, r3, r1
    4320:	42a0      	cmp	r0, r4
    4322:	d10b      	bne.n	433c <_free_r+0x74>
    4324:	6820      	ldr	r0, [r4, #0]
    4326:	4401      	add	r1, r0
    4328:	1858      	adds	r0, r3, r1
    432a:	4282      	cmp	r2, r0
    432c:	6019      	str	r1, [r3, #0]
    432e:	d1dd      	bne.n	42ec <_free_r+0x24>
    4330:	6810      	ldr	r0, [r2, #0]
    4332:	6852      	ldr	r2, [r2, #4]
    4334:	605a      	str	r2, [r3, #4]
    4336:	4401      	add	r1, r0
    4338:	6019      	str	r1, [r3, #0]
    433a:	e7d7      	b.n	42ec <_free_r+0x24>
    433c:	d902      	bls.n	4344 <_free_r+0x7c>
    433e:	230c      	movs	r3, #12
    4340:	602b      	str	r3, [r5, #0]
    4342:	e7d3      	b.n	42ec <_free_r+0x24>
    4344:	6820      	ldr	r0, [r4, #0]
    4346:	1821      	adds	r1, r4, r0
    4348:	428a      	cmp	r2, r1
    434a:	bf04      	itt	eq
    434c:	6811      	ldreq	r1, [r2, #0]
    434e:	6852      	ldreq	r2, [r2, #4]
    4350:	6062      	str	r2, [r4, #4]
    4352:	bf04      	itt	eq
    4354:	1809      	addeq	r1, r1, r0
    4356:	6021      	streq	r1, [r4, #0]
    4358:	605c      	str	r4, [r3, #4]
    435a:	e7c7      	b.n	42ec <_free_r+0x24>
    435c:	bd38      	pop	{r3, r4, r5, pc}
    435e:	bf00      	nop
    4360:	100012d8 	.word	0x100012d8

00004364 <_malloc_r>:
_malloc_r():
    4364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4366:	1ccd      	adds	r5, r1, #3
    4368:	f025 0503 	bic.w	r5, r5, #3
    436c:	3508      	adds	r5, #8
    436e:	2d0c      	cmp	r5, #12
    4370:	bf38      	it	cc
    4372:	250c      	movcc	r5, #12
    4374:	2d00      	cmp	r5, #0
    4376:	4606      	mov	r6, r0
    4378:	db01      	blt.n	437e <_malloc_r+0x1a>
    437a:	42a9      	cmp	r1, r5
    437c:	d903      	bls.n	4386 <_malloc_r+0x22>
    437e:	230c      	movs	r3, #12
    4380:	6033      	str	r3, [r6, #0]
    4382:	2000      	movs	r0, #0
    4384:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4386:	f003 fde3 	bl	7f50 <__malloc_lock>
    438a:	4921      	ldr	r1, [pc, #132]	; (4410 <_malloc_r+0xac>)
    438c:	680a      	ldr	r2, [r1, #0]
    438e:	4614      	mov	r4, r2
    4390:	b99c      	cbnz	r4, 43ba <_malloc_r+0x56>
    4392:	4f20      	ldr	r7, [pc, #128]	; (4414 <_malloc_r+0xb0>)
    4394:	683b      	ldr	r3, [r7, #0]
    4396:	b923      	cbnz	r3, 43a2 <_malloc_r+0x3e>
    4398:	4621      	mov	r1, r4
    439a:	4630      	mov	r0, r6
    439c:	f001 f854 	bl	5448 <_sbrk_r>
    43a0:	6038      	str	r0, [r7, #0]
    43a2:	4629      	mov	r1, r5
    43a4:	4630      	mov	r0, r6
    43a6:	f001 f84f 	bl	5448 <_sbrk_r>
    43aa:	1c43      	adds	r3, r0, #1
    43ac:	d123      	bne.n	43f6 <_malloc_r+0x92>
    43ae:	230c      	movs	r3, #12
    43b0:	6033      	str	r3, [r6, #0]
    43b2:	4630      	mov	r0, r6
    43b4:	f003 fdd2 	bl	7f5c <__malloc_unlock>
    43b8:	e7e3      	b.n	4382 <_malloc_r+0x1e>
    43ba:	6823      	ldr	r3, [r4, #0]
    43bc:	1b5b      	subs	r3, r3, r5
    43be:	d417      	bmi.n	43f0 <_malloc_r+0x8c>
    43c0:	2b0b      	cmp	r3, #11
    43c2:	d903      	bls.n	43cc <_malloc_r+0x68>
    43c4:	6023      	str	r3, [r4, #0]
    43c6:	441c      	add	r4, r3
    43c8:	6025      	str	r5, [r4, #0]
    43ca:	e004      	b.n	43d6 <_malloc_r+0x72>
    43cc:	6863      	ldr	r3, [r4, #4]
    43ce:	42a2      	cmp	r2, r4
    43d0:	bf0c      	ite	eq
    43d2:	600b      	streq	r3, [r1, #0]
    43d4:	6053      	strne	r3, [r2, #4]
    43d6:	4630      	mov	r0, r6
    43d8:	f003 fdc0 	bl	7f5c <__malloc_unlock>
    43dc:	f104 000b 	add.w	r0, r4, #11
    43e0:	1d23      	adds	r3, r4, #4
    43e2:	f020 0007 	bic.w	r0, r0, #7
    43e6:	1ac2      	subs	r2, r0, r3
    43e8:	d0cc      	beq.n	4384 <_malloc_r+0x20>
    43ea:	1a1b      	subs	r3, r3, r0
    43ec:	50a3      	str	r3, [r4, r2]
    43ee:	e7c9      	b.n	4384 <_malloc_r+0x20>
    43f0:	4622      	mov	r2, r4
    43f2:	6864      	ldr	r4, [r4, #4]
    43f4:	e7cc      	b.n	4390 <_malloc_r+0x2c>
    43f6:	1cc4      	adds	r4, r0, #3
    43f8:	f024 0403 	bic.w	r4, r4, #3
    43fc:	42a0      	cmp	r0, r4
    43fe:	d0e3      	beq.n	43c8 <_malloc_r+0x64>
    4400:	1a21      	subs	r1, r4, r0
    4402:	4630      	mov	r0, r6
    4404:	f001 f820 	bl	5448 <_sbrk_r>
    4408:	3001      	adds	r0, #1
    440a:	d1dd      	bne.n	43c8 <_malloc_r+0x64>
    440c:	e7cf      	b.n	43ae <_malloc_r+0x4a>
    440e:	bf00      	nop
    4410:	100012d8 	.word	0x100012d8
    4414:	100012dc 	.word	0x100012dc

00004418 <__sfputc_r>:
__sfputc_r():
    4418:	6893      	ldr	r3, [r2, #8]
    441a:	3b01      	subs	r3, #1
    441c:	2b00      	cmp	r3, #0
    441e:	b410      	push	{r4}
    4420:	6093      	str	r3, [r2, #8]
    4422:	da08      	bge.n	4436 <__sfputc_r+0x1e>
    4424:	6994      	ldr	r4, [r2, #24]
    4426:	42a3      	cmp	r3, r4
    4428:	db01      	blt.n	442e <__sfputc_r+0x16>
    442a:	290a      	cmp	r1, #10
    442c:	d103      	bne.n	4436 <__sfputc_r+0x1e>
    442e:	f85d 4b04 	ldr.w	r4, [sp], #4
    4432:	f002 b86b 	b.w	650c <__swbuf_r>
    4436:	6813      	ldr	r3, [r2, #0]
    4438:	1c58      	adds	r0, r3, #1
    443a:	6010      	str	r0, [r2, #0]
    443c:	7019      	strb	r1, [r3, #0]
    443e:	4608      	mov	r0, r1
    4440:	f85d 4b04 	ldr.w	r4, [sp], #4
    4444:	4770      	bx	lr

00004446 <__sfputs_r>:
__sfputs_r():
    4446:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4448:	4606      	mov	r6, r0
    444a:	460f      	mov	r7, r1
    444c:	4614      	mov	r4, r2
    444e:	18d5      	adds	r5, r2, r3
    4450:	42ac      	cmp	r4, r5
    4452:	d101      	bne.n	4458 <__sfputs_r+0x12>
    4454:	2000      	movs	r0, #0
    4456:	e007      	b.n	4468 <__sfputs_r+0x22>
    4458:	463a      	mov	r2, r7
    445a:	f814 1b01 	ldrb.w	r1, [r4], #1
    445e:	4630      	mov	r0, r6
    4460:	f7ff ffda 	bl	4418 <__sfputc_r>
    4464:	1c43      	adds	r3, r0, #1
    4466:	d1f3      	bne.n	4450 <__sfputs_r+0xa>
    4468:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    446a:	Address 0x000000000000446a is out of bounds.


0000446c <_vfiprintf_r>:
_vfprintf_r():
    446c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4470:	460d      	mov	r5, r1
    4472:	b09d      	sub	sp, #116	; 0x74
    4474:	4614      	mov	r4, r2
    4476:	461e      	mov	r6, r3
    4478:	4607      	mov	r7, r0
    447a:	b118      	cbz	r0, 4484 <_vfiprintf_r+0x18>
    447c:	6983      	ldr	r3, [r0, #24]
    447e:	b90b      	cbnz	r3, 4484 <_vfiprintf_r+0x18>
    4480:	f003 f874 	bl	756c <__sinit>
    4484:	4b85      	ldr	r3, [pc, #532]	; (469c <_vfiprintf_r+0x230>)
    4486:	429d      	cmp	r5, r3
    4488:	d11b      	bne.n	44c2 <_vfiprintf_r+0x56>
    448a:	687d      	ldr	r5, [r7, #4]
    448c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    448e:	07d9      	lsls	r1, r3, #31
    4490:	d405      	bmi.n	449e <_vfiprintf_r+0x32>
    4492:	89ab      	ldrh	r3, [r5, #12]
    4494:	059a      	lsls	r2, r3, #22
    4496:	d402      	bmi.n	449e <_vfiprintf_r+0x32>
    4498:	6da8      	ldr	r0, [r5, #88]	; 0x58
    449a:	f7ff fed2 	bl	4242 <__retarget_lock_acquire_recursive>
    449e:	89ab      	ldrh	r3, [r5, #12]
    44a0:	071b      	lsls	r3, r3, #28
    44a2:	d501      	bpl.n	44a8 <_vfiprintf_r+0x3c>
    44a4:	692b      	ldr	r3, [r5, #16]
    44a6:	b9eb      	cbnz	r3, 44e4 <_vfiprintf_r+0x78>
    44a8:	4629      	mov	r1, r5
    44aa:	4638      	mov	r0, r7
    44ac:	f002 f880 	bl	65b0 <__swsetup_r>
    44b0:	b1c0      	cbz	r0, 44e4 <_vfiprintf_r+0x78>
    44b2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    44b4:	07d8      	lsls	r0, r3, #31
    44b6:	d50e      	bpl.n	44d6 <_vfiprintf_r+0x6a>
    44b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    44bc:	b01d      	add	sp, #116	; 0x74
    44be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    44c2:	4b77      	ldr	r3, [pc, #476]	; (46a0 <_vfiprintf_r+0x234>)
    44c4:	429d      	cmp	r5, r3
    44c6:	d101      	bne.n	44cc <_vfiprintf_r+0x60>
    44c8:	68bd      	ldr	r5, [r7, #8]
    44ca:	e7df      	b.n	448c <_vfiprintf_r+0x20>
    44cc:	4b75      	ldr	r3, [pc, #468]	; (46a4 <_vfiprintf_r+0x238>)
    44ce:	429d      	cmp	r5, r3
    44d0:	bf08      	it	eq
    44d2:	68fd      	ldreq	r5, [r7, #12]
    44d4:	e7da      	b.n	448c <_vfiprintf_r+0x20>
    44d6:	89ab      	ldrh	r3, [r5, #12]
    44d8:	0599      	lsls	r1, r3, #22
    44da:	d4ed      	bmi.n	44b8 <_vfiprintf_r+0x4c>
    44dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
    44de:	f7ff feb1 	bl	4244 <__retarget_lock_release_recursive>
    44e2:	e7e9      	b.n	44b8 <_vfiprintf_r+0x4c>
    44e4:	2300      	movs	r3, #0
    44e6:	9309      	str	r3, [sp, #36]	; 0x24
    44e8:	2320      	movs	r3, #32
    44ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    44ee:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 46a8 <_vfiprintf_r+0x23c>
    44f2:	9603      	str	r6, [sp, #12]
    44f4:	2330      	movs	r3, #48	; 0x30
    44f6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    44fa:	f04f 0a01 	mov.w	sl, #1
    44fe:	4623      	mov	r3, r4
    4500:	461e      	mov	r6, r3
    4502:	f813 2b01 	ldrb.w	r2, [r3], #1
    4506:	b10a      	cbz	r2, 450c <_vfiprintf_r+0xa0>
    4508:	2a25      	cmp	r2, #37	; 0x25
    450a:	d1f9      	bne.n	4500 <_vfiprintf_r+0x94>
    450c:	ebb6 0b04 	subs.w	fp, r6, r4
    4510:	d00b      	beq.n	452a <_vfiprintf_r+0xbe>
    4512:	465b      	mov	r3, fp
    4514:	4622      	mov	r2, r4
    4516:	4629      	mov	r1, r5
    4518:	4638      	mov	r0, r7
    451a:	f7ff ff94 	bl	4446 <__sfputs_r>
    451e:	3001      	adds	r0, #1
    4520:	f000 80a3 	beq.w	466a <_vfiprintf_r+0x1fe>
    4524:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4526:	445b      	add	r3, fp
    4528:	9309      	str	r3, [sp, #36]	; 0x24
    452a:	7833      	ldrb	r3, [r6, #0]
    452c:	2b00      	cmp	r3, #0
    452e:	f000 809c 	beq.w	466a <_vfiprintf_r+0x1fe>
    4532:	2300      	movs	r3, #0
    4534:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    4538:	e9cd 2305 	strd	r2, r3, [sp, #20]
    453c:	3601      	adds	r6, #1
    453e:	9304      	str	r3, [sp, #16]
    4540:	9307      	str	r3, [sp, #28]
    4542:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    4546:	931a      	str	r3, [sp, #104]	; 0x68
    4548:	4634      	mov	r4, r6
    454a:	2205      	movs	r2, #5
    454c:	f814 1b01 	ldrb.w	r1, [r4], #1
    4550:	4855      	ldr	r0, [pc, #340]	; (46a8 <_vfiprintf_r+0x23c>)
    4552:	f003 fcad 	bl	7eb0 <memchr>
    4556:	9b04      	ldr	r3, [sp, #16]
    4558:	b9c0      	cbnz	r0, 458c <_vfiprintf_r+0x120>
    455a:	06da      	lsls	r2, r3, #27
    455c:	bf44      	itt	mi
    455e:	2220      	movmi	r2, #32
    4560:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    4564:	0718      	lsls	r0, r3, #28
    4566:	bf44      	itt	mi
    4568:	222b      	movmi	r2, #43	; 0x2b
    456a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    456e:	7832      	ldrb	r2, [r6, #0]
    4570:	2a2a      	cmp	r2, #42	; 0x2a
    4572:	d013      	beq.n	459c <_vfiprintf_r+0x130>
    4574:	9a07      	ldr	r2, [sp, #28]
    4576:	4634      	mov	r4, r6
    4578:	2000      	movs	r0, #0
    457a:	260a      	movs	r6, #10
    457c:	4621      	mov	r1, r4
    457e:	f811 3b01 	ldrb.w	r3, [r1], #1
    4582:	3b30      	subs	r3, #48	; 0x30
    4584:	2b09      	cmp	r3, #9
    4586:	d94b      	bls.n	4620 <_vfiprintf_r+0x1b4>
    4588:	b970      	cbnz	r0, 45a8 <_vfiprintf_r+0x13c>
    458a:	e014      	b.n	45b6 <_vfiprintf_r+0x14a>
    458c:	eba0 0009 	sub.w	r0, r0, r9
    4590:	fa0a f000 	lsl.w	r0, sl, r0
    4594:	4318      	orrs	r0, r3
    4596:	9004      	str	r0, [sp, #16]
    4598:	4626      	mov	r6, r4
    459a:	e7d5      	b.n	4548 <_vfiprintf_r+0xdc>
    459c:	9a03      	ldr	r2, [sp, #12]
    459e:	1d11      	adds	r1, r2, #4
    45a0:	6812      	ldr	r2, [r2, #0]
    45a2:	9103      	str	r1, [sp, #12]
    45a4:	2a00      	cmp	r2, #0
    45a6:	db01      	blt.n	45ac <_vfiprintf_r+0x140>
    45a8:	9207      	str	r2, [sp, #28]
    45aa:	e004      	b.n	45b6 <_vfiprintf_r+0x14a>
    45ac:	4252      	negs	r2, r2
    45ae:	f043 0302 	orr.w	r3, r3, #2
    45b2:	9207      	str	r2, [sp, #28]
    45b4:	9304      	str	r3, [sp, #16]
    45b6:	7823      	ldrb	r3, [r4, #0]
    45b8:	2b2e      	cmp	r3, #46	; 0x2e
    45ba:	d10c      	bne.n	45d6 <_vfiprintf_r+0x16a>
    45bc:	7863      	ldrb	r3, [r4, #1]
    45be:	2b2a      	cmp	r3, #42	; 0x2a
    45c0:	d133      	bne.n	462a <_vfiprintf_r+0x1be>
    45c2:	9b03      	ldr	r3, [sp, #12]
    45c4:	1d1a      	adds	r2, r3, #4
    45c6:	681b      	ldr	r3, [r3, #0]
    45c8:	9203      	str	r2, [sp, #12]
    45ca:	2b00      	cmp	r3, #0
    45cc:	bfb8      	it	lt
    45ce:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    45d2:	3402      	adds	r4, #2
    45d4:	9305      	str	r3, [sp, #20]
    45d6:	4e35      	ldr	r6, [pc, #212]	; (46ac <_vfiprintf_r+0x240>)
    45d8:	7821      	ldrb	r1, [r4, #0]
    45da:	2203      	movs	r2, #3
    45dc:	4630      	mov	r0, r6
    45de:	f003 fc67 	bl	7eb0 <memchr>
    45e2:	b138      	cbz	r0, 45f4 <_vfiprintf_r+0x188>
    45e4:	2340      	movs	r3, #64	; 0x40
    45e6:	1b80      	subs	r0, r0, r6
    45e8:	fa03 f000 	lsl.w	r0, r3, r0
    45ec:	9b04      	ldr	r3, [sp, #16]
    45ee:	4303      	orrs	r3, r0
    45f0:	3401      	adds	r4, #1
    45f2:	9304      	str	r3, [sp, #16]
    45f4:	f814 1b01 	ldrb.w	r1, [r4], #1
    45f8:	482d      	ldr	r0, [pc, #180]	; (46b0 <_vfiprintf_r+0x244>)
    45fa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    45fe:	2206      	movs	r2, #6
    4600:	f003 fc56 	bl	7eb0 <memchr>
    4604:	2800      	cmp	r0, #0
    4606:	d03f      	beq.n	4688 <_vfiprintf_r+0x21c>
    4608:	4b2a      	ldr	r3, [pc, #168]	; (46b4 <_vfiprintf_r+0x248>)
    460a:	bb13      	cbnz	r3, 4652 <_vfiprintf_r+0x1e6>
    460c:	9b03      	ldr	r3, [sp, #12]
    460e:	3307      	adds	r3, #7
    4610:	f023 0307 	bic.w	r3, r3, #7
    4614:	3308      	adds	r3, #8
    4616:	9303      	str	r3, [sp, #12]
    4618:	9b09      	ldr	r3, [sp, #36]	; 0x24
    461a:	4443      	add	r3, r8
    461c:	9309      	str	r3, [sp, #36]	; 0x24
    461e:	e76e      	b.n	44fe <_vfiprintf_r+0x92>
    4620:	fb06 3202 	mla	r2, r6, r2, r3
    4624:	2001      	movs	r0, #1
    4626:	460c      	mov	r4, r1
    4628:	e7a8      	b.n	457c <_vfiprintf_r+0x110>
    462a:	2300      	movs	r3, #0
    462c:	3401      	adds	r4, #1
    462e:	9305      	str	r3, [sp, #20]
    4630:	4619      	mov	r1, r3
    4632:	260a      	movs	r6, #10
    4634:	4620      	mov	r0, r4
    4636:	f810 2b01 	ldrb.w	r2, [r0], #1
    463a:	3a30      	subs	r2, #48	; 0x30
    463c:	2a09      	cmp	r2, #9
    463e:	d903      	bls.n	4648 <_vfiprintf_r+0x1dc>
    4640:	2b00      	cmp	r3, #0
    4642:	d0c8      	beq.n	45d6 <_vfiprintf_r+0x16a>
    4644:	9105      	str	r1, [sp, #20]
    4646:	e7c6      	b.n	45d6 <_vfiprintf_r+0x16a>
    4648:	fb06 2101 	mla	r1, r6, r1, r2
    464c:	2301      	movs	r3, #1
    464e:	4604      	mov	r4, r0
    4650:	e7f0      	b.n	4634 <_vfiprintf_r+0x1c8>
    4652:	ab03      	add	r3, sp, #12
    4654:	9300      	str	r3, [sp, #0]
    4656:	462a      	mov	r2, r5
    4658:	4b17      	ldr	r3, [pc, #92]	; (46b8 <_vfiprintf_r+0x24c>)
    465a:	a904      	add	r1, sp, #16
    465c:	4638      	mov	r0, r7
    465e:	f000 f8bd 	bl	47dc <_printf_float>
    4662:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    4666:	4680      	mov	r8, r0
    4668:	d1d6      	bne.n	4618 <_vfiprintf_r+0x1ac>
    466a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    466c:	07d9      	lsls	r1, r3, #31
    466e:	d405      	bmi.n	467c <_vfiprintf_r+0x210>
    4670:	89ab      	ldrh	r3, [r5, #12]
    4672:	059a      	lsls	r2, r3, #22
    4674:	d402      	bmi.n	467c <_vfiprintf_r+0x210>
    4676:	6da8      	ldr	r0, [r5, #88]	; 0x58
    4678:	f7ff fde4 	bl	4244 <__retarget_lock_release_recursive>
    467c:	89ab      	ldrh	r3, [r5, #12]
    467e:	065b      	lsls	r3, r3, #25
    4680:	f53f af1a 	bmi.w	44b8 <_vfiprintf_r+0x4c>
    4684:	9809      	ldr	r0, [sp, #36]	; 0x24
    4686:	e719      	b.n	44bc <_vfiprintf_r+0x50>
    4688:	ab03      	add	r3, sp, #12
    468a:	9300      	str	r3, [sp, #0]
    468c:	462a      	mov	r2, r5
    468e:	4b0a      	ldr	r3, [pc, #40]	; (46b8 <_vfiprintf_r+0x24c>)
    4690:	a904      	add	r1, sp, #16
    4692:	4638      	mov	r0, r7
    4694:	f000 fb42 	bl	4d1c <_printf_i>
    4698:	e7e3      	b.n	4662 <_vfiprintf_r+0x1f6>
    469a:	bf00      	nop
    469c:	0000b358 	.word	0x0000b358
    46a0:	0000b378 	.word	0x0000b378
    46a4:	0000b338 	.word	0x0000b338
    46a8:	0000b290 	.word	0x0000b290
    46ac:	0000b296 	.word	0x0000b296
    46b0:	0000b29a 	.word	0x0000b29a
    46b4:	000047dd 	.word	0x000047dd
    46b8:	00004447 	.word	0x00004447

000046bc <__cvt>:
__cvt():
    46bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    46c0:	ec55 4b10 	vmov	r4, r5, d0
    46c4:	2d00      	cmp	r5, #0
    46c6:	460e      	mov	r6, r1
    46c8:	4691      	mov	r9, r2
    46ca:	4619      	mov	r1, r3
    46cc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    46d0:	f04f 0200 	mov.w	r2, #0
    46d4:	da03      	bge.n	46de <__cvt+0x22>
    46d6:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    46da:	461d      	mov	r5, r3
    46dc:	222d      	movs	r2, #45	; 0x2d
    46de:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    46e0:	700a      	strb	r2, [r1, #0]
    46e2:	f027 0720 	bic.w	r7, r7, #32
    46e6:	2f46      	cmp	r7, #70	; 0x46
    46e8:	d004      	beq.n	46f4 <__cvt+0x38>
    46ea:	2f45      	cmp	r7, #69	; 0x45
    46ec:	d100      	bne.n	46f0 <__cvt+0x34>
    46ee:	3601      	adds	r6, #1
    46f0:	2102      	movs	r1, #2
    46f2:	e000      	b.n	46f6 <__cvt+0x3a>
    46f4:	2103      	movs	r1, #3
    46f6:	ab03      	add	r3, sp, #12
    46f8:	9301      	str	r3, [sp, #4]
    46fa:	ab02      	add	r3, sp, #8
    46fc:	9300      	str	r3, [sp, #0]
    46fe:	4632      	mov	r2, r6
    4700:	4653      	mov	r3, sl
    4702:	ec45 4b10 	vmov	d0, r4, r5
    4706:	f002 f84b 	bl	67a0 <_dtoa_r>
    470a:	2f47      	cmp	r7, #71	; 0x47
    470c:	4680      	mov	r8, r0
    470e:	d102      	bne.n	4716 <__cvt+0x5a>
    4710:	f019 0f01 	tst.w	r9, #1
    4714:	d022      	beq.n	475c <__cvt+0xa0>
    4716:	2f46      	cmp	r7, #70	; 0x46
    4718:	eb08 0906 	add.w	r9, r8, r6
    471c:	d111      	bne.n	4742 <__cvt+0x86>
    471e:	f898 3000 	ldrb.w	r3, [r8]
    4722:	2b30      	cmp	r3, #48	; 0x30
    4724:	d10a      	bne.n	473c <__cvt+0x80>
    4726:	2200      	movs	r2, #0
    4728:	2300      	movs	r3, #0
    472a:	4620      	mov	r0, r4
    472c:	4629      	mov	r1, r5
    472e:	f005 fb69 	bl	9e04 <__aeabi_dcmpeq>
    4732:	b918      	cbnz	r0, 473c <__cvt+0x80>
    4734:	f1c6 0601 	rsb	r6, r6, #1
    4738:	f8ca 6000 	str.w	r6, [sl]
    473c:	f8da 3000 	ldr.w	r3, [sl]
    4740:	4499      	add	r9, r3
    4742:	2200      	movs	r2, #0
    4744:	2300      	movs	r3, #0
    4746:	4620      	mov	r0, r4
    4748:	4629      	mov	r1, r5
    474a:	f005 fb5b 	bl	9e04 <__aeabi_dcmpeq>
    474e:	b108      	cbz	r0, 4754 <__cvt+0x98>
    4750:	f8cd 900c 	str.w	r9, [sp, #12]
    4754:	2230      	movs	r2, #48	; 0x30
    4756:	9b03      	ldr	r3, [sp, #12]
    4758:	454b      	cmp	r3, r9
    475a:	d308      	bcc.n	476e <__cvt+0xb2>
    475c:	9b03      	ldr	r3, [sp, #12]
    475e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    4760:	eba3 0308 	sub.w	r3, r3, r8
    4764:	4640      	mov	r0, r8
    4766:	6013      	str	r3, [r2, #0]
    4768:	b004      	add	sp, #16
    476a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    476e:	1c59      	adds	r1, r3, #1
    4770:	9103      	str	r1, [sp, #12]
    4772:	701a      	strb	r2, [r3, #0]
    4774:	e7ef      	b.n	4756 <__cvt+0x9a>

00004776 <__exponent>:
__exponent():
    4776:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4778:	2900      	cmp	r1, #0
    477a:	bfba      	itte	lt
    477c:	4249      	neglt	r1, r1
    477e:	232d      	movlt	r3, #45	; 0x2d
    4780:	232b      	movge	r3, #43	; 0x2b
    4782:	2909      	cmp	r1, #9
    4784:	7002      	strb	r2, [r0, #0]
    4786:	7043      	strb	r3, [r0, #1]
    4788:	dd21      	ble.n	47ce <__exponent+0x58>
    478a:	f10d 0307 	add.w	r3, sp, #7
    478e:	461f      	mov	r7, r3
    4790:	260a      	movs	r6, #10
    4792:	fb91 f2f6 	sdiv	r2, r1, r6
    4796:	fb06 1412 	mls	r4, r6, r2, r1
    479a:	3430      	adds	r4, #48	; 0x30
    479c:	2963      	cmp	r1, #99	; 0x63
    479e:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
    47a2:	f803 4c01 	strb.w	r4, [r3, #-1]
    47a6:	dc0a      	bgt.n	47be <__exponent+0x48>
    47a8:	3230      	adds	r2, #48	; 0x30
    47aa:	f805 2c01 	strb.w	r2, [r5, #-1]
    47ae:	3b02      	subs	r3, #2
    47b0:	1c82      	adds	r2, r0, #2
    47b2:	42bb      	cmp	r3, r7
    47b4:	4614      	mov	r4, r2
    47b6:	d305      	bcc.n	47c4 <__exponent+0x4e>
    47b8:	1a20      	subs	r0, r4, r0
    47ba:	b003      	add	sp, #12
    47bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    47be:	462b      	mov	r3, r5
    47c0:	4611      	mov	r1, r2
    47c2:	e7e6      	b.n	4792 <__exponent+0x1c>
    47c4:	f813 1b01 	ldrb.w	r1, [r3], #1
    47c8:	f802 1b01 	strb.w	r1, [r2], #1
    47cc:	e7f1      	b.n	47b2 <__exponent+0x3c>
    47ce:	2330      	movs	r3, #48	; 0x30
    47d0:	4419      	add	r1, r3
    47d2:	7083      	strb	r3, [r0, #2]
    47d4:	1d04      	adds	r4, r0, #4
    47d6:	70c1      	strb	r1, [r0, #3]
    47d8:	e7ee      	b.n	47b8 <__exponent+0x42>
    47da:	Address 0x00000000000047da is out of bounds.


000047dc <_printf_float>:
_printf_float():
    47dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    47e0:	b08d      	sub	sp, #52	; 0x34
    47e2:	460c      	mov	r4, r1
    47e4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    47e8:	4616      	mov	r6, r2
    47ea:	461f      	mov	r7, r3
    47ec:	4605      	mov	r5, r0
    47ee:	f003 fadf 	bl	7db0 <_localeconv_r>
    47f2:	6803      	ldr	r3, [r0, #0]
    47f4:	9306      	str	r3, [sp, #24]
    47f6:	4618      	mov	r0, r3
    47f8:	f000 ff47 	bl	568a <strlen>
    47fc:	2300      	movs	r3, #0
    47fe:	930a      	str	r3, [sp, #40]	; 0x28
    4800:	f8d8 3000 	ldr.w	r3, [r8]
    4804:	9007      	str	r0, [sp, #28]
    4806:	3307      	adds	r3, #7
    4808:	f023 0307 	bic.w	r3, r3, #7
    480c:	f103 0208 	add.w	r2, r3, #8
    4810:	f894 a018 	ldrb.w	sl, [r4, #24]
    4814:	f8d4 b000 	ldr.w	fp, [r4]
    4818:	f8c8 2000 	str.w	r2, [r8]
    481c:	e9d3 2300 	ldrd	r2, r3, [r3]
    4820:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    4824:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
    4828:	ed8d 7b04 	vstr	d7, [sp, #16]
    482c:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
    4830:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
    4834:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    4838:	4ba6      	ldr	r3, [pc, #664]	; (4ad4 <_printf_float+0x2f8>)
    483a:	4640      	mov	r0, r8
    483c:	4649      	mov	r1, r9
    483e:	f005 fb13 	bl	9e68 <__aeabi_dcmpun>
    4842:	bb70      	cbnz	r0, 48a2 <_printf_float+0xc6>
    4844:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    4848:	4ba2      	ldr	r3, [pc, #648]	; (4ad4 <_printf_float+0x2f8>)
    484a:	4640      	mov	r0, r8
    484c:	4649      	mov	r1, r9
    484e:	f005 faed 	bl	9e2c <__aeabi_dcmple>
    4852:	bb30      	cbnz	r0, 48a2 <_printf_float+0xc6>
    4854:	2200      	movs	r2, #0
    4856:	2300      	movs	r3, #0
    4858:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    485c:	f005 fadc 	bl	9e18 <__aeabi_dcmplt>
    4860:	b110      	cbz	r0, 4868 <_printf_float+0x8c>
    4862:	232d      	movs	r3, #45	; 0x2d
    4864:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    4868:	4a9b      	ldr	r2, [pc, #620]	; (4ad8 <_printf_float+0x2fc>)
    486a:	4b9c      	ldr	r3, [pc, #624]	; (4adc <_printf_float+0x300>)
    486c:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    4870:	bf94      	ite	ls
    4872:	4690      	movls	r8, r2
    4874:	4698      	movhi	r8, r3
    4876:	2303      	movs	r3, #3
    4878:	f02b 0204 	bic.w	r2, fp, #4
    487c:	6123      	str	r3, [r4, #16]
    487e:	6022      	str	r2, [r4, #0]
    4880:	f04f 0900 	mov.w	r9, #0
    4884:	9700      	str	r7, [sp, #0]
    4886:	4633      	mov	r3, r6
    4888:	aa0b      	add	r2, sp, #44	; 0x2c
    488a:	4621      	mov	r1, r4
    488c:	4628      	mov	r0, r5
    488e:	f000 f9cf 	bl	4c30 <_printf_common>
    4892:	3001      	adds	r0, #1
    4894:	f040 808c 	bne.w	49b0 <_printf_float+0x1d4>
    4898:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    489c:	b00d      	add	sp, #52	; 0x34
    489e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48a2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    48a6:	4610      	mov	r0, r2
    48a8:	4619      	mov	r1, r3
    48aa:	f005 fadd 	bl	9e68 <__aeabi_dcmpun>
    48ae:	b140      	cbz	r0, 48c2 <_printf_float+0xe6>
    48b0:	9b05      	ldr	r3, [sp, #20]
    48b2:	4a8b      	ldr	r2, [pc, #556]	; (4ae0 <_printf_float+0x304>)
    48b4:	2b00      	cmp	r3, #0
    48b6:	bfbc      	itt	lt
    48b8:	232d      	movlt	r3, #45	; 0x2d
    48ba:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
    48be:	4b89      	ldr	r3, [pc, #548]	; (4ae4 <_printf_float+0x308>)
    48c0:	e7d4      	b.n	486c <_printf_float+0x90>
    48c2:	6863      	ldr	r3, [r4, #4]
    48c4:	1c5a      	adds	r2, r3, #1
    48c6:	f00a 09df 	and.w	r9, sl, #223	; 0xdf
    48ca:	d13e      	bne.n	494a <_printf_float+0x16e>
    48cc:	2306      	movs	r3, #6
    48ce:	6063      	str	r3, [r4, #4]
    48d0:	2300      	movs	r3, #0
    48d2:	9303      	str	r3, [sp, #12]
    48d4:	ab0a      	add	r3, sp, #40	; 0x28
    48d6:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    48da:	e9cd a301 	strd	sl, r3, [sp, #4]
    48de:	ab09      	add	r3, sp, #36	; 0x24
    48e0:	9300      	str	r3, [sp, #0]
    48e2:	6861      	ldr	r1, [r4, #4]
    48e4:	6022      	str	r2, [r4, #0]
    48e6:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    48ea:	ed9d 0b04 	vldr	d0, [sp, #16]
    48ee:	4628      	mov	r0, r5
    48f0:	f7ff fee4 	bl	46bc <__cvt>
    48f4:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    48f8:	4680      	mov	r8, r0
    48fa:	9909      	ldr	r1, [sp, #36]	; 0x24
    48fc:	d108      	bne.n	4910 <_printf_float+0x134>
    48fe:	1cc8      	adds	r0, r1, #3
    4900:	db02      	blt.n	4908 <_printf_float+0x12c>
    4902:	6863      	ldr	r3, [r4, #4]
    4904:	4299      	cmp	r1, r3
    4906:	dd41      	ble.n	498c <_printf_float+0x1b0>
    4908:	f1aa 0a02 	sub.w	sl, sl, #2
    490c:	fa5f fa8a 	uxtb.w	sl, sl
    4910:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    4914:	d820      	bhi.n	4958 <_printf_float+0x17c>
    4916:	3901      	subs	r1, #1
    4918:	4652      	mov	r2, sl
    491a:	f104 0050 	add.w	r0, r4, #80	; 0x50
    491e:	9109      	str	r1, [sp, #36]	; 0x24
    4920:	f7ff ff29 	bl	4776 <__exponent>
    4924:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4926:	1813      	adds	r3, r2, r0
    4928:	2a01      	cmp	r2, #1
    492a:	4681      	mov	r9, r0
    492c:	6123      	str	r3, [r4, #16]
    492e:	dc02      	bgt.n	4936 <_printf_float+0x15a>
    4930:	6822      	ldr	r2, [r4, #0]
    4932:	07d2      	lsls	r2, r2, #31
    4934:	d501      	bpl.n	493a <_printf_float+0x15e>
    4936:	3301      	adds	r3, #1
    4938:	6123      	str	r3, [r4, #16]
    493a:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    493e:	2b00      	cmp	r3, #0
    4940:	d0a0      	beq.n	4884 <_printf_float+0xa8>
    4942:	232d      	movs	r3, #45	; 0x2d
    4944:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    4948:	e79c      	b.n	4884 <_printf_float+0xa8>
    494a:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    494e:	d1bf      	bne.n	48d0 <_printf_float+0xf4>
    4950:	2b00      	cmp	r3, #0
    4952:	d1bd      	bne.n	48d0 <_printf_float+0xf4>
    4954:	2301      	movs	r3, #1
    4956:	e7ba      	b.n	48ce <_printf_float+0xf2>
    4958:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    495c:	d118      	bne.n	4990 <_printf_float+0x1b4>
    495e:	2900      	cmp	r1, #0
    4960:	6863      	ldr	r3, [r4, #4]
    4962:	dd0b      	ble.n	497c <_printf_float+0x1a0>
    4964:	6121      	str	r1, [r4, #16]
    4966:	b913      	cbnz	r3, 496e <_printf_float+0x192>
    4968:	6822      	ldr	r2, [r4, #0]
    496a:	07d0      	lsls	r0, r2, #31
    496c:	d502      	bpl.n	4974 <_printf_float+0x198>
    496e:	3301      	adds	r3, #1
    4970:	440b      	add	r3, r1
    4972:	6123      	str	r3, [r4, #16]
    4974:	65a1      	str	r1, [r4, #88]	; 0x58
    4976:	f04f 0900 	mov.w	r9, #0
    497a:	e7de      	b.n	493a <_printf_float+0x15e>
    497c:	b913      	cbnz	r3, 4984 <_printf_float+0x1a8>
    497e:	6822      	ldr	r2, [r4, #0]
    4980:	07d2      	lsls	r2, r2, #31
    4982:	d501      	bpl.n	4988 <_printf_float+0x1ac>
    4984:	3302      	adds	r3, #2
    4986:	e7f4      	b.n	4972 <_printf_float+0x196>
    4988:	2301      	movs	r3, #1
    498a:	e7f2      	b.n	4972 <_printf_float+0x196>
    498c:	f04f 0a67 	mov.w	sl, #103	; 0x67
    4990:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4992:	4299      	cmp	r1, r3
    4994:	db05      	blt.n	49a2 <_printf_float+0x1c6>
    4996:	6823      	ldr	r3, [r4, #0]
    4998:	6121      	str	r1, [r4, #16]
    499a:	07d8      	lsls	r0, r3, #31
    499c:	d5ea      	bpl.n	4974 <_printf_float+0x198>
    499e:	1c4b      	adds	r3, r1, #1
    49a0:	e7e7      	b.n	4972 <_printf_float+0x196>
    49a2:	2900      	cmp	r1, #0
    49a4:	bfd4      	ite	le
    49a6:	f1c1 0202 	rsble	r2, r1, #2
    49aa:	2201      	movgt	r2, #1
    49ac:	4413      	add	r3, r2
    49ae:	e7e0      	b.n	4972 <_printf_float+0x196>
    49b0:	6823      	ldr	r3, [r4, #0]
    49b2:	055a      	lsls	r2, r3, #21
    49b4:	d407      	bmi.n	49c6 <_printf_float+0x1ea>
    49b6:	6923      	ldr	r3, [r4, #16]
    49b8:	4642      	mov	r2, r8
    49ba:	4631      	mov	r1, r6
    49bc:	4628      	mov	r0, r5
    49be:	47b8      	blx	r7
    49c0:	3001      	adds	r0, #1
    49c2:	d12b      	bne.n	4a1c <_printf_float+0x240>
    49c4:	e768      	b.n	4898 <_printf_float+0xbc>
    49c6:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    49ca:	f240 80dc 	bls.w	4b86 <_printf_float+0x3aa>
    49ce:	2200      	movs	r2, #0
    49d0:	2300      	movs	r3, #0
    49d2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    49d6:	f005 fa15 	bl	9e04 <__aeabi_dcmpeq>
    49da:	2800      	cmp	r0, #0
    49dc:	d033      	beq.n	4a46 <_printf_float+0x26a>
    49de:	2301      	movs	r3, #1
    49e0:	4a41      	ldr	r2, [pc, #260]	; (4ae8 <_printf_float+0x30c>)
    49e2:	4631      	mov	r1, r6
    49e4:	4628      	mov	r0, r5
    49e6:	47b8      	blx	r7
    49e8:	3001      	adds	r0, #1
    49ea:	f43f af55 	beq.w	4898 <_printf_float+0xbc>
    49ee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    49f2:	429a      	cmp	r2, r3
    49f4:	db02      	blt.n	49fc <_printf_float+0x220>
    49f6:	6823      	ldr	r3, [r4, #0]
    49f8:	07d8      	lsls	r0, r3, #31
    49fa:	d50f      	bpl.n	4a1c <_printf_float+0x240>
    49fc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    4a00:	4631      	mov	r1, r6
    4a02:	4628      	mov	r0, r5
    4a04:	47b8      	blx	r7
    4a06:	3001      	adds	r0, #1
    4a08:	f43f af46 	beq.w	4898 <_printf_float+0xbc>
    4a0c:	f04f 0800 	mov.w	r8, #0
    4a10:	f104 091a 	add.w	r9, r4, #26
    4a14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4a16:	3b01      	subs	r3, #1
    4a18:	4543      	cmp	r3, r8
    4a1a:	dc09      	bgt.n	4a30 <_printf_float+0x254>
    4a1c:	6823      	ldr	r3, [r4, #0]
    4a1e:	079b      	lsls	r3, r3, #30
    4a20:	f100 8101 	bmi.w	4c26 <_printf_float+0x44a>
    4a24:	68e0      	ldr	r0, [r4, #12]
    4a26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    4a28:	4298      	cmp	r0, r3
    4a2a:	bfb8      	it	lt
    4a2c:	4618      	movlt	r0, r3
    4a2e:	e735      	b.n	489c <_printf_float+0xc0>
    4a30:	2301      	movs	r3, #1
    4a32:	464a      	mov	r2, r9
    4a34:	4631      	mov	r1, r6
    4a36:	4628      	mov	r0, r5
    4a38:	47b8      	blx	r7
    4a3a:	3001      	adds	r0, #1
    4a3c:	f43f af2c 	beq.w	4898 <_printf_float+0xbc>
    4a40:	f108 0801 	add.w	r8, r8, #1
    4a44:	e7e6      	b.n	4a14 <_printf_float+0x238>
    4a46:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4a48:	2b00      	cmp	r3, #0
    4a4a:	dc2b      	bgt.n	4aa4 <_printf_float+0x2c8>
    4a4c:	2301      	movs	r3, #1
    4a4e:	4a26      	ldr	r2, [pc, #152]	; (4ae8 <_printf_float+0x30c>)
    4a50:	4631      	mov	r1, r6
    4a52:	4628      	mov	r0, r5
    4a54:	47b8      	blx	r7
    4a56:	3001      	adds	r0, #1
    4a58:	f43f af1e 	beq.w	4898 <_printf_float+0xbc>
    4a5c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    4a60:	4313      	orrs	r3, r2
    4a62:	d102      	bne.n	4a6a <_printf_float+0x28e>
    4a64:	6823      	ldr	r3, [r4, #0]
    4a66:	07d9      	lsls	r1, r3, #31
    4a68:	d5d8      	bpl.n	4a1c <_printf_float+0x240>
    4a6a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    4a6e:	4631      	mov	r1, r6
    4a70:	4628      	mov	r0, r5
    4a72:	47b8      	blx	r7
    4a74:	3001      	adds	r0, #1
    4a76:	f43f af0f 	beq.w	4898 <_printf_float+0xbc>
    4a7a:	f04f 0900 	mov.w	r9, #0
    4a7e:	f104 0a1a 	add.w	sl, r4, #26
    4a82:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4a84:	425b      	negs	r3, r3
    4a86:	454b      	cmp	r3, r9
    4a88:	dc01      	bgt.n	4a8e <_printf_float+0x2b2>
    4a8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4a8c:	e794      	b.n	49b8 <_printf_float+0x1dc>
    4a8e:	2301      	movs	r3, #1
    4a90:	4652      	mov	r2, sl
    4a92:	4631      	mov	r1, r6
    4a94:	4628      	mov	r0, r5
    4a96:	47b8      	blx	r7
    4a98:	3001      	adds	r0, #1
    4a9a:	f43f aefd 	beq.w	4898 <_printf_float+0xbc>
    4a9e:	f109 0901 	add.w	r9, r9, #1
    4aa2:	e7ee      	b.n	4a82 <_printf_float+0x2a6>
    4aa4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4aa6:	6da3      	ldr	r3, [r4, #88]	; 0x58
    4aa8:	429a      	cmp	r2, r3
    4aaa:	bfa8      	it	ge
    4aac:	461a      	movge	r2, r3
    4aae:	2a00      	cmp	r2, #0
    4ab0:	4691      	mov	r9, r2
    4ab2:	dd07      	ble.n	4ac4 <_printf_float+0x2e8>
    4ab4:	4613      	mov	r3, r2
    4ab6:	4631      	mov	r1, r6
    4ab8:	4642      	mov	r2, r8
    4aba:	4628      	mov	r0, r5
    4abc:	47b8      	blx	r7
    4abe:	3001      	adds	r0, #1
    4ac0:	f43f aeea 	beq.w	4898 <_printf_float+0xbc>
    4ac4:	f104 031a 	add.w	r3, r4, #26
    4ac8:	f04f 0b00 	mov.w	fp, #0
    4acc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    4ad0:	9304      	str	r3, [sp, #16]
    4ad2:	e015      	b.n	4b00 <_printf_float+0x324>
    4ad4:	7fefffff 	.word	0x7fefffff
    4ad8:	0000b2a1 	.word	0x0000b2a1
    4adc:	0000b2a5 	.word	0x0000b2a5
    4ae0:	0000b2a9 	.word	0x0000b2a9
    4ae4:	0000b2ad 	.word	0x0000b2ad
    4ae8:	0000ac18 	.word	0x0000ac18
    4aec:	2301      	movs	r3, #1
    4aee:	9a04      	ldr	r2, [sp, #16]
    4af0:	4631      	mov	r1, r6
    4af2:	4628      	mov	r0, r5
    4af4:	47b8      	blx	r7
    4af6:	3001      	adds	r0, #1
    4af8:	f43f aece 	beq.w	4898 <_printf_float+0xbc>
    4afc:	f10b 0b01 	add.w	fp, fp, #1
    4b00:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    4b04:	ebaa 0309 	sub.w	r3, sl, r9
    4b08:	455b      	cmp	r3, fp
    4b0a:	dcef      	bgt.n	4aec <_printf_float+0x310>
    4b0c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    4b10:	429a      	cmp	r2, r3
    4b12:	db1b      	blt.n	4b4c <_printf_float+0x370>
    4b14:	6823      	ldr	r3, [r4, #0]
    4b16:	07da      	lsls	r2, r3, #31
    4b18:	d418      	bmi.n	4b4c <_printf_float+0x370>
    4b1a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    4b1e:	4592      	cmp	sl, r2
    4b20:	db1c      	blt.n	4b5c <_printf_float+0x380>
    4b22:	eba3 090a 	sub.w	r9, r3, sl
    4b26:	f1b9 0f00 	cmp.w	r9, #0
    4b2a:	dd08      	ble.n	4b3e <_printf_float+0x362>
    4b2c:	464b      	mov	r3, r9
    4b2e:	eb08 020a 	add.w	r2, r8, sl
    4b32:	4631      	mov	r1, r6
    4b34:	4628      	mov	r0, r5
    4b36:	47b8      	blx	r7
    4b38:	3001      	adds	r0, #1
    4b3a:	f43f aead 	beq.w	4898 <_printf_float+0xbc>
    4b3e:	f04f 0800 	mov.w	r8, #0
    4b42:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    4b46:	f104 0a1a 	add.w	sl, r4, #26
    4b4a:	e014      	b.n	4b76 <_printf_float+0x39a>
    4b4c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    4b50:	4631      	mov	r1, r6
    4b52:	4628      	mov	r0, r5
    4b54:	47b8      	blx	r7
    4b56:	3001      	adds	r0, #1
    4b58:	d1df      	bne.n	4b1a <_printf_float+0x33e>
    4b5a:	e69d      	b.n	4898 <_printf_float+0xbc>
    4b5c:	eba3 0902 	sub.w	r9, r3, r2
    4b60:	e7e1      	b.n	4b26 <_printf_float+0x34a>
    4b62:	2301      	movs	r3, #1
    4b64:	4652      	mov	r2, sl
    4b66:	4631      	mov	r1, r6
    4b68:	4628      	mov	r0, r5
    4b6a:	47b8      	blx	r7
    4b6c:	3001      	adds	r0, #1
    4b6e:	f43f ae93 	beq.w	4898 <_printf_float+0xbc>
    4b72:	f108 0801 	add.w	r8, r8, #1
    4b76:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    4b7a:	1a9b      	subs	r3, r3, r2
    4b7c:	eba3 0309 	sub.w	r3, r3, r9
    4b80:	4543      	cmp	r3, r8
    4b82:	dcee      	bgt.n	4b62 <_printf_float+0x386>
    4b84:	e74a      	b.n	4a1c <_printf_float+0x240>
    4b86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    4b88:	2a01      	cmp	r2, #1
    4b8a:	dc01      	bgt.n	4b90 <_printf_float+0x3b4>
    4b8c:	07db      	lsls	r3, r3, #31
    4b8e:	d537      	bpl.n	4c00 <_printf_float+0x424>
    4b90:	2301      	movs	r3, #1
    4b92:	4642      	mov	r2, r8
    4b94:	4631      	mov	r1, r6
    4b96:	4628      	mov	r0, r5
    4b98:	47b8      	blx	r7
    4b9a:	3001      	adds	r0, #1
    4b9c:	f43f ae7c 	beq.w	4898 <_printf_float+0xbc>
    4ba0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    4ba4:	4631      	mov	r1, r6
    4ba6:	4628      	mov	r0, r5
    4ba8:	47b8      	blx	r7
    4baa:	3001      	adds	r0, #1
    4bac:	f43f ae74 	beq.w	4898 <_printf_float+0xbc>
    4bb0:	2200      	movs	r2, #0
    4bb2:	2300      	movs	r3, #0
    4bb4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    4bb8:	f005 f924 	bl	9e04 <__aeabi_dcmpeq>
    4bbc:	b9d8      	cbnz	r0, 4bf6 <_printf_float+0x41a>
    4bbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4bc0:	f108 0201 	add.w	r2, r8, #1
    4bc4:	3b01      	subs	r3, #1
    4bc6:	4631      	mov	r1, r6
    4bc8:	4628      	mov	r0, r5
    4bca:	47b8      	blx	r7
    4bcc:	3001      	adds	r0, #1
    4bce:	d10e      	bne.n	4bee <_printf_float+0x412>
    4bd0:	e662      	b.n	4898 <_printf_float+0xbc>
    4bd2:	2301      	movs	r3, #1
    4bd4:	4652      	mov	r2, sl
    4bd6:	4631      	mov	r1, r6
    4bd8:	4628      	mov	r0, r5
    4bda:	47b8      	blx	r7
    4bdc:	3001      	adds	r0, #1
    4bde:	f43f ae5b 	beq.w	4898 <_printf_float+0xbc>
    4be2:	f108 0801 	add.w	r8, r8, #1
    4be6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    4be8:	3b01      	subs	r3, #1
    4bea:	4543      	cmp	r3, r8
    4bec:	dcf1      	bgt.n	4bd2 <_printf_float+0x3f6>
    4bee:	464b      	mov	r3, r9
    4bf0:	f104 0250 	add.w	r2, r4, #80	; 0x50
    4bf4:	e6e1      	b.n	49ba <_printf_float+0x1de>
    4bf6:	f04f 0800 	mov.w	r8, #0
    4bfa:	f104 0a1a 	add.w	sl, r4, #26
    4bfe:	e7f2      	b.n	4be6 <_printf_float+0x40a>
    4c00:	2301      	movs	r3, #1
    4c02:	4642      	mov	r2, r8
    4c04:	e7df      	b.n	4bc6 <_printf_float+0x3ea>
    4c06:	2301      	movs	r3, #1
    4c08:	464a      	mov	r2, r9
    4c0a:	4631      	mov	r1, r6
    4c0c:	4628      	mov	r0, r5
    4c0e:	47b8      	blx	r7
    4c10:	3001      	adds	r0, #1
    4c12:	f43f ae41 	beq.w	4898 <_printf_float+0xbc>
    4c16:	f108 0801 	add.w	r8, r8, #1
    4c1a:	68e3      	ldr	r3, [r4, #12]
    4c1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    4c1e:	1a9b      	subs	r3, r3, r2
    4c20:	4543      	cmp	r3, r8
    4c22:	dcf0      	bgt.n	4c06 <_printf_float+0x42a>
    4c24:	e6fe      	b.n	4a24 <_printf_float+0x248>
    4c26:	f04f 0800 	mov.w	r8, #0
    4c2a:	f104 0919 	add.w	r9, r4, #25
    4c2e:	e7f4      	b.n	4c1a <_printf_float+0x43e>

00004c30 <_printf_common>:
_printf_common():
    4c30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4c34:	4691      	mov	r9, r2
    4c36:	461f      	mov	r7, r3
    4c38:	688a      	ldr	r2, [r1, #8]
    4c3a:	690b      	ldr	r3, [r1, #16]
    4c3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
    4c40:	4293      	cmp	r3, r2
    4c42:	bfb8      	it	lt
    4c44:	4613      	movlt	r3, r2
    4c46:	f8c9 3000 	str.w	r3, [r9]
    4c4a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    4c4e:	4606      	mov	r6, r0
    4c50:	460c      	mov	r4, r1
    4c52:	b112      	cbz	r2, 4c5a <_printf_common+0x2a>
    4c54:	3301      	adds	r3, #1
    4c56:	f8c9 3000 	str.w	r3, [r9]
    4c5a:	6823      	ldr	r3, [r4, #0]
    4c5c:	0699      	lsls	r1, r3, #26
    4c5e:	bf42      	ittt	mi
    4c60:	f8d9 3000 	ldrmi.w	r3, [r9]
    4c64:	3302      	addmi	r3, #2
    4c66:	f8c9 3000 	strmi.w	r3, [r9]
    4c6a:	6825      	ldr	r5, [r4, #0]
    4c6c:	f015 0506 	ands.w	r5, r5, #6
    4c70:	d107      	bne.n	4c82 <_printf_common+0x52>
    4c72:	f104 0a19 	add.w	sl, r4, #25
    4c76:	68e3      	ldr	r3, [r4, #12]
    4c78:	f8d9 2000 	ldr.w	r2, [r9]
    4c7c:	1a9b      	subs	r3, r3, r2
    4c7e:	42ab      	cmp	r3, r5
    4c80:	dc28      	bgt.n	4cd4 <_printf_common+0xa4>
    4c82:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    4c86:	6822      	ldr	r2, [r4, #0]
    4c88:	3300      	adds	r3, #0
    4c8a:	bf18      	it	ne
    4c8c:	2301      	movne	r3, #1
    4c8e:	0692      	lsls	r2, r2, #26
    4c90:	d42d      	bmi.n	4cee <_printf_common+0xbe>
    4c92:	f104 0243 	add.w	r2, r4, #67	; 0x43
    4c96:	4639      	mov	r1, r7
    4c98:	4630      	mov	r0, r6
    4c9a:	47c0      	blx	r8
    4c9c:	3001      	adds	r0, #1
    4c9e:	d020      	beq.n	4ce2 <_printf_common+0xb2>
    4ca0:	6823      	ldr	r3, [r4, #0]
    4ca2:	68e5      	ldr	r5, [r4, #12]
    4ca4:	f8d9 2000 	ldr.w	r2, [r9]
    4ca8:	f003 0306 	and.w	r3, r3, #6
    4cac:	2b04      	cmp	r3, #4
    4cae:	bf08      	it	eq
    4cb0:	1aad      	subeq	r5, r5, r2
    4cb2:	68a3      	ldr	r3, [r4, #8]
    4cb4:	6922      	ldr	r2, [r4, #16]
    4cb6:	bf0c      	ite	eq
    4cb8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    4cbc:	2500      	movne	r5, #0
    4cbe:	4293      	cmp	r3, r2
    4cc0:	bfc4      	itt	gt
    4cc2:	1a9b      	subgt	r3, r3, r2
    4cc4:	18ed      	addgt	r5, r5, r3
    4cc6:	f04f 0900 	mov.w	r9, #0
    4cca:	341a      	adds	r4, #26
    4ccc:	454d      	cmp	r5, r9
    4cce:	d11a      	bne.n	4d06 <_printf_common+0xd6>
    4cd0:	2000      	movs	r0, #0
    4cd2:	e008      	b.n	4ce6 <_printf_common+0xb6>
    4cd4:	2301      	movs	r3, #1
    4cd6:	4652      	mov	r2, sl
    4cd8:	4639      	mov	r1, r7
    4cda:	4630      	mov	r0, r6
    4cdc:	47c0      	blx	r8
    4cde:	3001      	adds	r0, #1
    4ce0:	d103      	bne.n	4cea <_printf_common+0xba>
    4ce2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4ce6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4cea:	3501      	adds	r5, #1
    4cec:	e7c3      	b.n	4c76 <_printf_common+0x46>
    4cee:	18e1      	adds	r1, r4, r3
    4cf0:	1c5a      	adds	r2, r3, #1
    4cf2:	2030      	movs	r0, #48	; 0x30
    4cf4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    4cf8:	4422      	add	r2, r4
    4cfa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    4cfe:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    4d02:	3302      	adds	r3, #2
    4d04:	e7c5      	b.n	4c92 <_printf_common+0x62>
    4d06:	2301      	movs	r3, #1
    4d08:	4622      	mov	r2, r4
    4d0a:	4639      	mov	r1, r7
    4d0c:	4630      	mov	r0, r6
    4d0e:	47c0      	blx	r8
    4d10:	3001      	adds	r0, #1
    4d12:	d0e6      	beq.n	4ce2 <_printf_common+0xb2>
    4d14:	f109 0901 	add.w	r9, r9, #1
    4d18:	e7d8      	b.n	4ccc <_printf_common+0x9c>
    4d1a:	Address 0x0000000000004d1a is out of bounds.


00004d1c <_printf_i>:
_printf_i():
    4d1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    4d20:	4606      	mov	r6, r0
    4d22:	460c      	mov	r4, r1
    4d24:	f101 0043 	add.w	r0, r1, #67	; 0x43
    4d28:	7e09      	ldrb	r1, [r1, #24]
    4d2a:	b085      	sub	sp, #20
    4d2c:	296e      	cmp	r1, #110	; 0x6e
    4d2e:	4698      	mov	r8, r3
    4d30:	4617      	mov	r7, r2
    4d32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    4d34:	f000 80ba 	beq.w	4eac <_printf_i+0x190>
    4d38:	d824      	bhi.n	4d84 <_printf_i+0x68>
    4d3a:	2963      	cmp	r1, #99	; 0x63
    4d3c:	d039      	beq.n	4db2 <_printf_i+0x96>
    4d3e:	d80a      	bhi.n	4d56 <_printf_i+0x3a>
    4d40:	2900      	cmp	r1, #0
    4d42:	f000 80c3 	beq.w	4ecc <_printf_i+0x1b0>
    4d46:	2958      	cmp	r1, #88	; 0x58
    4d48:	f000 8091 	beq.w	4e6e <_printf_i+0x152>
    4d4c:	f104 0542 	add.w	r5, r4, #66	; 0x42
    4d50:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    4d54:	e035      	b.n	4dc2 <_printf_i+0xa6>
    4d56:	2964      	cmp	r1, #100	; 0x64
    4d58:	d001      	beq.n	4d5e <_printf_i+0x42>
    4d5a:	2969      	cmp	r1, #105	; 0x69
    4d5c:	d1f6      	bne.n	4d4c <_printf_i+0x30>
    4d5e:	6825      	ldr	r5, [r4, #0]
    4d60:	681a      	ldr	r2, [r3, #0]
    4d62:	f015 0f80 	tst.w	r5, #128	; 0x80
    4d66:	f102 0104 	add.w	r1, r2, #4
    4d6a:	d02c      	beq.n	4dc6 <_printf_i+0xaa>
    4d6c:	6812      	ldr	r2, [r2, #0]
    4d6e:	6019      	str	r1, [r3, #0]
    4d70:	2a00      	cmp	r2, #0
    4d72:	da03      	bge.n	4d7c <_printf_i+0x60>
    4d74:	232d      	movs	r3, #45	; 0x2d
    4d76:	4252      	negs	r2, r2
    4d78:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    4d7c:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 4f3c <_printf_i+0x220>
    4d80:	230a      	movs	r3, #10
    4d82:	e03f      	b.n	4e04 <_printf_i+0xe8>
    4d84:	2973      	cmp	r1, #115	; 0x73
    4d86:	f000 80a5 	beq.w	4ed4 <_printf_i+0x1b8>
    4d8a:	d808      	bhi.n	4d9e <_printf_i+0x82>
    4d8c:	296f      	cmp	r1, #111	; 0x6f
    4d8e:	d021      	beq.n	4dd4 <_printf_i+0xb8>
    4d90:	2970      	cmp	r1, #112	; 0x70
    4d92:	d1db      	bne.n	4d4c <_printf_i+0x30>
    4d94:	6822      	ldr	r2, [r4, #0]
    4d96:	f042 0220 	orr.w	r2, r2, #32
    4d9a:	6022      	str	r2, [r4, #0]
    4d9c:	e003      	b.n	4da6 <_printf_i+0x8a>
    4d9e:	2975      	cmp	r1, #117	; 0x75
    4da0:	d018      	beq.n	4dd4 <_printf_i+0xb8>
    4da2:	2978      	cmp	r1, #120	; 0x78
    4da4:	d1d2      	bne.n	4d4c <_printf_i+0x30>
    4da6:	2278      	movs	r2, #120	; 0x78
    4da8:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    4dac:	f8df c190 	ldr.w	ip, [pc, #400]	; 4f40 <_printf_i+0x224>
    4db0:	e061      	b.n	4e76 <_printf_i+0x15a>
    4db2:	681a      	ldr	r2, [r3, #0]
    4db4:	1d11      	adds	r1, r2, #4
    4db6:	6019      	str	r1, [r3, #0]
    4db8:	6813      	ldr	r3, [r2, #0]
    4dba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    4dbe:	f104 0542 	add.w	r5, r4, #66	; 0x42
    4dc2:	2301      	movs	r3, #1
    4dc4:	e093      	b.n	4eee <_printf_i+0x1d2>
    4dc6:	6812      	ldr	r2, [r2, #0]
    4dc8:	6019      	str	r1, [r3, #0]
    4dca:	f015 0f40 	tst.w	r5, #64	; 0x40
    4dce:	bf18      	it	ne
    4dd0:	b212      	sxthne	r2, r2
    4dd2:	e7cd      	b.n	4d70 <_printf_i+0x54>
    4dd4:	f8d4 c000 	ldr.w	ip, [r4]
    4dd8:	681a      	ldr	r2, [r3, #0]
    4dda:	f01c 0f80 	tst.w	ip, #128	; 0x80
    4dde:	f102 0504 	add.w	r5, r2, #4
    4de2:	601d      	str	r5, [r3, #0]
    4de4:	d001      	beq.n	4dea <_printf_i+0xce>
    4de6:	6812      	ldr	r2, [r2, #0]
    4de8:	e003      	b.n	4df2 <_printf_i+0xd6>
    4dea:	f01c 0f40 	tst.w	ip, #64	; 0x40
    4dee:	d0fa      	beq.n	4de6 <_printf_i+0xca>
    4df0:	8812      	ldrh	r2, [r2, #0]
    4df2:	f8df c148 	ldr.w	ip, [pc, #328]	; 4f3c <_printf_i+0x220>
    4df6:	296f      	cmp	r1, #111	; 0x6f
    4df8:	bf0c      	ite	eq
    4dfa:	2308      	moveq	r3, #8
    4dfc:	230a      	movne	r3, #10
    4dfe:	2100      	movs	r1, #0
    4e00:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    4e04:	6865      	ldr	r5, [r4, #4]
    4e06:	60a5      	str	r5, [r4, #8]
    4e08:	2d00      	cmp	r5, #0
    4e0a:	bfa2      	ittt	ge
    4e0c:	6821      	ldrge	r1, [r4, #0]
    4e0e:	f021 0104 	bicge.w	r1, r1, #4
    4e12:	6021      	strge	r1, [r4, #0]
    4e14:	b90a      	cbnz	r2, 4e1a <_printf_i+0xfe>
    4e16:	2d00      	cmp	r5, #0
    4e18:	d046      	beq.n	4ea8 <_printf_i+0x18c>
    4e1a:	4605      	mov	r5, r0
    4e1c:	fbb2 f1f3 	udiv	r1, r2, r3
    4e20:	fb03 2e11 	mls	lr, r3, r1, r2
    4e24:	4293      	cmp	r3, r2
    4e26:	f81c e00e 	ldrb.w	lr, [ip, lr]
    4e2a:	f805 ed01 	strb.w	lr, [r5, #-1]!
    4e2e:	d939      	bls.n	4ea4 <_printf_i+0x188>
    4e30:	2b08      	cmp	r3, #8
    4e32:	d10b      	bne.n	4e4c <_printf_i+0x130>
    4e34:	6823      	ldr	r3, [r4, #0]
    4e36:	07da      	lsls	r2, r3, #31
    4e38:	d508      	bpl.n	4e4c <_printf_i+0x130>
    4e3a:	6923      	ldr	r3, [r4, #16]
    4e3c:	6862      	ldr	r2, [r4, #4]
    4e3e:	429a      	cmp	r2, r3
    4e40:	bfde      	ittt	le
    4e42:	2330      	movle	r3, #48	; 0x30
    4e44:	f805 3c01 	strble.w	r3, [r5, #-1]
    4e48:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    4e4c:	1b40      	subs	r0, r0, r5
    4e4e:	6120      	str	r0, [r4, #16]
    4e50:	f8cd 8000 	str.w	r8, [sp]
    4e54:	463b      	mov	r3, r7
    4e56:	aa03      	add	r2, sp, #12
    4e58:	4621      	mov	r1, r4
    4e5a:	4630      	mov	r0, r6
    4e5c:	f7ff fee8 	bl	4c30 <_printf_common>
    4e60:	3001      	adds	r0, #1
    4e62:	d149      	bne.n	4ef8 <_printf_i+0x1dc>
    4e64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    4e68:	b005      	add	sp, #20
    4e6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    4e6e:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 4f3c <_printf_i+0x220>
    4e72:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    4e76:	681d      	ldr	r5, [r3, #0]
    4e78:	6821      	ldr	r1, [r4, #0]
    4e7a:	f855 2b04 	ldr.w	r2, [r5], #4
    4e7e:	601d      	str	r5, [r3, #0]
    4e80:	060d      	lsls	r5, r1, #24
    4e82:	d50b      	bpl.n	4e9c <_printf_i+0x180>
    4e84:	07cd      	lsls	r5, r1, #31
    4e86:	bf44      	itt	mi
    4e88:	f041 0120 	orrmi.w	r1, r1, #32
    4e8c:	6021      	strmi	r1, [r4, #0]
    4e8e:	b91a      	cbnz	r2, 4e98 <_printf_i+0x17c>
    4e90:	6823      	ldr	r3, [r4, #0]
    4e92:	f023 0320 	bic.w	r3, r3, #32
    4e96:	6023      	str	r3, [r4, #0]
    4e98:	2310      	movs	r3, #16
    4e9a:	e7b0      	b.n	4dfe <_printf_i+0xe2>
    4e9c:	064b      	lsls	r3, r1, #25
    4e9e:	bf48      	it	mi
    4ea0:	b292      	uxthmi	r2, r2
    4ea2:	e7ef      	b.n	4e84 <_printf_i+0x168>
    4ea4:	460a      	mov	r2, r1
    4ea6:	e7b9      	b.n	4e1c <_printf_i+0x100>
    4ea8:	4605      	mov	r5, r0
    4eaa:	e7c1      	b.n	4e30 <_printf_i+0x114>
    4eac:	681a      	ldr	r2, [r3, #0]
    4eae:	f8d4 c000 	ldr.w	ip, [r4]
    4eb2:	6961      	ldr	r1, [r4, #20]
    4eb4:	1d15      	adds	r5, r2, #4
    4eb6:	601d      	str	r5, [r3, #0]
    4eb8:	f01c 0f80 	tst.w	ip, #128	; 0x80
    4ebc:	6813      	ldr	r3, [r2, #0]
    4ebe:	d001      	beq.n	4ec4 <_printf_i+0x1a8>
    4ec0:	6019      	str	r1, [r3, #0]
    4ec2:	e003      	b.n	4ecc <_printf_i+0x1b0>
    4ec4:	f01c 0f40 	tst.w	ip, #64	; 0x40
    4ec8:	d0fa      	beq.n	4ec0 <_printf_i+0x1a4>
    4eca:	8019      	strh	r1, [r3, #0]
    4ecc:	2300      	movs	r3, #0
    4ece:	6123      	str	r3, [r4, #16]
    4ed0:	4605      	mov	r5, r0
    4ed2:	e7bd      	b.n	4e50 <_printf_i+0x134>
    4ed4:	681a      	ldr	r2, [r3, #0]
    4ed6:	1d11      	adds	r1, r2, #4
    4ed8:	6019      	str	r1, [r3, #0]
    4eda:	6815      	ldr	r5, [r2, #0]
    4edc:	6862      	ldr	r2, [r4, #4]
    4ede:	2100      	movs	r1, #0
    4ee0:	4628      	mov	r0, r5
    4ee2:	f002 ffe5 	bl	7eb0 <memchr>
    4ee6:	b108      	cbz	r0, 4eec <_printf_i+0x1d0>
    4ee8:	1b40      	subs	r0, r0, r5
    4eea:	6060      	str	r0, [r4, #4]
    4eec:	6863      	ldr	r3, [r4, #4]
    4eee:	6123      	str	r3, [r4, #16]
    4ef0:	2300      	movs	r3, #0
    4ef2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    4ef6:	e7ab      	b.n	4e50 <_printf_i+0x134>
    4ef8:	6923      	ldr	r3, [r4, #16]
    4efa:	462a      	mov	r2, r5
    4efc:	4639      	mov	r1, r7
    4efe:	4630      	mov	r0, r6
    4f00:	47c0      	blx	r8
    4f02:	3001      	adds	r0, #1
    4f04:	d0ae      	beq.n	4e64 <_printf_i+0x148>
    4f06:	6823      	ldr	r3, [r4, #0]
    4f08:	079b      	lsls	r3, r3, #30
    4f0a:	d413      	bmi.n	4f34 <_printf_i+0x218>
    4f0c:	68e0      	ldr	r0, [r4, #12]
    4f0e:	9b03      	ldr	r3, [sp, #12]
    4f10:	4298      	cmp	r0, r3
    4f12:	bfb8      	it	lt
    4f14:	4618      	movlt	r0, r3
    4f16:	e7a7      	b.n	4e68 <_printf_i+0x14c>
    4f18:	2301      	movs	r3, #1
    4f1a:	464a      	mov	r2, r9
    4f1c:	4639      	mov	r1, r7
    4f1e:	4630      	mov	r0, r6
    4f20:	47c0      	blx	r8
    4f22:	3001      	adds	r0, #1
    4f24:	d09e      	beq.n	4e64 <_printf_i+0x148>
    4f26:	3501      	adds	r5, #1
    4f28:	68e3      	ldr	r3, [r4, #12]
    4f2a:	9a03      	ldr	r2, [sp, #12]
    4f2c:	1a9b      	subs	r3, r3, r2
    4f2e:	42ab      	cmp	r3, r5
    4f30:	dcf2      	bgt.n	4f18 <_printf_i+0x1fc>
    4f32:	e7eb      	b.n	4f0c <_printf_i+0x1f0>
    4f34:	2500      	movs	r5, #0
    4f36:	f104 0919 	add.w	r9, r4, #25
    4f3a:	e7f5      	b.n	4f28 <_printf_i+0x20c>
    4f3c:	0000b2b1 	.word	0x0000b2b1
    4f40:	0000b2c2 	.word	0x0000b2c2

00004f44 <_scanf_float>:
_scanf_float():
    4f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4f48:	b087      	sub	sp, #28
    4f4a:	4617      	mov	r7, r2
    4f4c:	9303      	str	r3, [sp, #12]
    4f4e:	688b      	ldr	r3, [r1, #8]
    4f50:	1e5a      	subs	r2, r3, #1
    4f52:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    4f56:	bf83      	ittte	hi
    4f58:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    4f5c:	195b      	addhi	r3, r3, r5
    4f5e:	9302      	strhi	r3, [sp, #8]
    4f60:	2300      	movls	r3, #0
    4f62:	bf86      	itte	hi
    4f64:	f240 135d 	movwhi	r3, #349	; 0x15d
    4f68:	608b      	strhi	r3, [r1, #8]
    4f6a:	9302      	strls	r3, [sp, #8]
    4f6c:	680b      	ldr	r3, [r1, #0]
    4f6e:	468b      	mov	fp, r1
    4f70:	2500      	movs	r5, #0
    4f72:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
    4f76:	f84b 3b1c 	str.w	r3, [fp], #28
    4f7a:	e9cd 5504 	strd	r5, r5, [sp, #16]
    4f7e:	4681      	mov	r9, r0
    4f80:	460c      	mov	r4, r1
    4f82:	465e      	mov	r6, fp
    4f84:	46aa      	mov	sl, r5
    4f86:	46a8      	mov	r8, r5
    4f88:	9501      	str	r5, [sp, #4]
    4f8a:	68a2      	ldr	r2, [r4, #8]
    4f8c:	b182      	cbz	r2, 4fb0 <_scanf_float+0x6c>
    4f8e:	683b      	ldr	r3, [r7, #0]
    4f90:	781b      	ldrb	r3, [r3, #0]
    4f92:	2b49      	cmp	r3, #73	; 0x49
    4f94:	d075      	beq.n	5082 <_scanf_float+0x13e>
    4f96:	d84f      	bhi.n	5038 <_scanf_float+0xf4>
    4f98:	2b39      	cmp	r3, #57	; 0x39
    4f9a:	d841      	bhi.n	5020 <_scanf_float+0xdc>
    4f9c:	2b31      	cmp	r3, #49	; 0x31
    4f9e:	f080 8087 	bcs.w	50b0 <_scanf_float+0x16c>
    4fa2:	2b2d      	cmp	r3, #45	; 0x2d
    4fa4:	f000 808f 	beq.w	50c6 <_scanf_float+0x182>
    4fa8:	d817      	bhi.n	4fda <_scanf_float+0x96>
    4faa:	2b2b      	cmp	r3, #43	; 0x2b
    4fac:	f000 808b 	beq.w	50c6 <_scanf_float+0x182>
    4fb0:	f1b8 0f00 	cmp.w	r8, #0
    4fb4:	d003      	beq.n	4fbe <_scanf_float+0x7a>
    4fb6:	6823      	ldr	r3, [r4, #0]
    4fb8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
    4fbc:	6023      	str	r3, [r4, #0]
    4fbe:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    4fc2:	f1ba 0f01 	cmp.w	sl, #1
    4fc6:	f200 80dd 	bhi.w	5184 <_scanf_float+0x240>
    4fca:	455e      	cmp	r6, fp
    4fcc:	f200 80cf 	bhi.w	516e <_scanf_float+0x22a>
    4fd0:	2501      	movs	r5, #1
    4fd2:	4628      	mov	r0, r5
    4fd4:	b007      	add	sp, #28
    4fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4fda:	2b2e      	cmp	r3, #46	; 0x2e
    4fdc:	f000 8093 	beq.w	5106 <_scanf_float+0x1c2>
    4fe0:	2b30      	cmp	r3, #48	; 0x30
    4fe2:	d1e5      	bne.n	4fb0 <_scanf_float+0x6c>
    4fe4:	6821      	ldr	r1, [r4, #0]
    4fe6:	05c8      	lsls	r0, r1, #23
    4fe8:	d562      	bpl.n	50b0 <_scanf_float+0x16c>
    4fea:	9b02      	ldr	r3, [sp, #8]
    4fec:	f021 0180 	bic.w	r1, r1, #128	; 0x80
    4ff0:	6021      	str	r1, [r4, #0]
    4ff2:	f108 0801 	add.w	r8, r8, #1
    4ff6:	b11b      	cbz	r3, 5000 <_scanf_float+0xbc>
    4ff8:	3b01      	subs	r3, #1
    4ffa:	3201      	adds	r2, #1
    4ffc:	9302      	str	r3, [sp, #8]
    4ffe:	60a2      	str	r2, [r4, #8]
    5000:	68a3      	ldr	r3, [r4, #8]
    5002:	3b01      	subs	r3, #1
    5004:	60a3      	str	r3, [r4, #8]
    5006:	6923      	ldr	r3, [r4, #16]
    5008:	3301      	adds	r3, #1
    500a:	6123      	str	r3, [r4, #16]
    500c:	687b      	ldr	r3, [r7, #4]
    500e:	3b01      	subs	r3, #1
    5010:	2b00      	cmp	r3, #0
    5012:	607b      	str	r3, [r7, #4]
    5014:	f340 80a2 	ble.w	515c <_scanf_float+0x218>
    5018:	683b      	ldr	r3, [r7, #0]
    501a:	3301      	adds	r3, #1
    501c:	603b      	str	r3, [r7, #0]
    501e:	e7b4      	b.n	4f8a <_scanf_float+0x46>
    5020:	2b45      	cmp	r3, #69	; 0x45
    5022:	d07a      	beq.n	511a <_scanf_float+0x1d6>
    5024:	2b46      	cmp	r3, #70	; 0x46
    5026:	d064      	beq.n	50f2 <_scanf_float+0x1ae>
    5028:	2b41      	cmp	r3, #65	; 0x41
    502a:	d1c1      	bne.n	4fb0 <_scanf_float+0x6c>
    502c:	f1ba 0f01 	cmp.w	sl, #1
    5030:	d1be      	bne.n	4fb0 <_scanf_float+0x6c>
    5032:	f04f 0a02 	mov.w	sl, #2
    5036:	e043      	b.n	50c0 <_scanf_float+0x17c>
    5038:	2b65      	cmp	r3, #101	; 0x65
    503a:	d06e      	beq.n	511a <_scanf_float+0x1d6>
    503c:	d81a      	bhi.n	5074 <_scanf_float+0x130>
    503e:	2b54      	cmp	r3, #84	; 0x54
    5040:	d05c      	beq.n	50fc <_scanf_float+0x1b8>
    5042:	d813      	bhi.n	506c <_scanf_float+0x128>
    5044:	2b4e      	cmp	r3, #78	; 0x4e
    5046:	d1b3      	bne.n	4fb0 <_scanf_float+0x6c>
    5048:	f1ba 0f00 	cmp.w	sl, #0
    504c:	d142      	bne.n	50d4 <_scanf_float+0x190>
    504e:	f1b8 0f00 	cmp.w	r8, #0
    5052:	d142      	bne.n	50da <_scanf_float+0x196>
    5054:	6822      	ldr	r2, [r4, #0]
    5056:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    505a:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    505e:	d13c      	bne.n	50da <_scanf_float+0x196>
    5060:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    5064:	6022      	str	r2, [r4, #0]
    5066:	f04f 0a01 	mov.w	sl, #1
    506a:	e029      	b.n	50c0 <_scanf_float+0x17c>
    506c:	2b59      	cmp	r3, #89	; 0x59
    506e:	d01b      	beq.n	50a8 <_scanf_float+0x164>
    5070:	2b61      	cmp	r3, #97	; 0x61
    5072:	e7da      	b.n	502a <_scanf_float+0xe6>
    5074:	2b6e      	cmp	r3, #110	; 0x6e
    5076:	d0e7      	beq.n	5048 <_scanf_float+0x104>
    5078:	d812      	bhi.n	50a0 <_scanf_float+0x15c>
    507a:	2b66      	cmp	r3, #102	; 0x66
    507c:	d039      	beq.n	50f2 <_scanf_float+0x1ae>
    507e:	2b69      	cmp	r3, #105	; 0x69
    5080:	d196      	bne.n	4fb0 <_scanf_float+0x6c>
    5082:	bb95      	cbnz	r5, 50ea <_scanf_float+0x1a6>
    5084:	f1b8 0f00 	cmp.w	r8, #0
    5088:	d195      	bne.n	4fb6 <_scanf_float+0x72>
    508a:	6822      	ldr	r2, [r4, #0]
    508c:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    5090:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    5094:	d193      	bne.n	4fbe <_scanf_float+0x7a>
    5096:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    509a:	6022      	str	r2, [r4, #0]
    509c:	2501      	movs	r5, #1
    509e:	e00f      	b.n	50c0 <_scanf_float+0x17c>
    50a0:	2b74      	cmp	r3, #116	; 0x74
    50a2:	d02b      	beq.n	50fc <_scanf_float+0x1b8>
    50a4:	2b79      	cmp	r3, #121	; 0x79
    50a6:	d183      	bne.n	4fb0 <_scanf_float+0x6c>
    50a8:	2d07      	cmp	r5, #7
    50aa:	d181      	bne.n	4fb0 <_scanf_float+0x6c>
    50ac:	2508      	movs	r5, #8
    50ae:	e007      	b.n	50c0 <_scanf_float+0x17c>
    50b0:	eb1a 0f05 	cmn.w	sl, r5
    50b4:	f47f af7c 	bne.w	4fb0 <_scanf_float+0x6c>
    50b8:	6822      	ldr	r2, [r4, #0]
    50ba:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
    50be:	6022      	str	r2, [r4, #0]
    50c0:	f806 3b01 	strb.w	r3, [r6], #1
    50c4:	e79c      	b.n	5000 <_scanf_float+0xbc>
    50c6:	6822      	ldr	r2, [r4, #0]
    50c8:	0610      	lsls	r0, r2, #24
    50ca:	f57f af71 	bpl.w	4fb0 <_scanf_float+0x6c>
    50ce:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    50d2:	e7f4      	b.n	50be <_scanf_float+0x17a>
    50d4:	f1ba 0f02 	cmp.w	sl, #2
    50d8:	d03d      	beq.n	5156 <_scanf_float+0x212>
    50da:	2d01      	cmp	r5, #1
    50dc:	d002      	beq.n	50e4 <_scanf_float+0x1a0>
    50de:	2d04      	cmp	r5, #4
    50e0:	f47f af66 	bne.w	4fb0 <_scanf_float+0x6c>
    50e4:	3501      	adds	r5, #1
    50e6:	b2ed      	uxtb	r5, r5
    50e8:	e7ea      	b.n	50c0 <_scanf_float+0x17c>
    50ea:	2d03      	cmp	r5, #3
    50ec:	d0fa      	beq.n	50e4 <_scanf_float+0x1a0>
    50ee:	2d05      	cmp	r5, #5
    50f0:	e7f6      	b.n	50e0 <_scanf_float+0x19c>
    50f2:	2d02      	cmp	r5, #2
    50f4:	f47f af5c 	bne.w	4fb0 <_scanf_float+0x6c>
    50f8:	2503      	movs	r5, #3
    50fa:	e7e1      	b.n	50c0 <_scanf_float+0x17c>
    50fc:	2d06      	cmp	r5, #6
    50fe:	f47f af57 	bne.w	4fb0 <_scanf_float+0x6c>
    5102:	2507      	movs	r5, #7
    5104:	e7dc      	b.n	50c0 <_scanf_float+0x17c>
    5106:	6822      	ldr	r2, [r4, #0]
    5108:	0591      	lsls	r1, r2, #22
    510a:	f57f af51 	bpl.w	4fb0 <_scanf_float+0x6c>
    510e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
    5112:	6022      	str	r2, [r4, #0]
    5114:	f8cd 8004 	str.w	r8, [sp, #4]
    5118:	e7d2      	b.n	50c0 <_scanf_float+0x17c>
    511a:	6822      	ldr	r2, [r4, #0]
    511c:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
    5120:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    5124:	d006      	beq.n	5134 <_scanf_float+0x1f0>
    5126:	0550      	lsls	r0, r2, #21
    5128:	f57f af42 	bpl.w	4fb0 <_scanf_float+0x6c>
    512c:	f1b8 0f00 	cmp.w	r8, #0
    5130:	f43f af45 	beq.w	4fbe <_scanf_float+0x7a>
    5134:	0591      	lsls	r1, r2, #22
    5136:	bf58      	it	pl
    5138:	9901      	ldrpl	r1, [sp, #4]
    513a:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    513e:	bf58      	it	pl
    5140:	eba8 0101 	subpl.w	r1, r8, r1
    5144:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
    5148:	bf58      	it	pl
    514a:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
    514e:	6022      	str	r2, [r4, #0]
    5150:	f04f 0800 	mov.w	r8, #0
    5154:	e7b4      	b.n	50c0 <_scanf_float+0x17c>
    5156:	f04f 0a03 	mov.w	sl, #3
    515a:	e7b1      	b.n	50c0 <_scanf_float+0x17c>
    515c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    5160:	4639      	mov	r1, r7
    5162:	4648      	mov	r0, r9
    5164:	4798      	blx	r3
    5166:	2800      	cmp	r0, #0
    5168:	f43f af0f 	beq.w	4f8a <_scanf_float+0x46>
    516c:	e720      	b.n	4fb0 <_scanf_float+0x6c>
    516e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    5172:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    5176:	463a      	mov	r2, r7
    5178:	4648      	mov	r0, r9
    517a:	4798      	blx	r3
    517c:	6923      	ldr	r3, [r4, #16]
    517e:	3b01      	subs	r3, #1
    5180:	6123      	str	r3, [r4, #16]
    5182:	e722      	b.n	4fca <_scanf_float+0x86>
    5184:	1e6b      	subs	r3, r5, #1
    5186:	2b06      	cmp	r3, #6
    5188:	d825      	bhi.n	51d6 <_scanf_float+0x292>
    518a:	2d02      	cmp	r5, #2
    518c:	d836      	bhi.n	51fc <_scanf_float+0x2b8>
    518e:	455e      	cmp	r6, fp
    5190:	f67f af1e 	bls.w	4fd0 <_scanf_float+0x8c>
    5194:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    5198:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    519c:	463a      	mov	r2, r7
    519e:	4648      	mov	r0, r9
    51a0:	4798      	blx	r3
    51a2:	6923      	ldr	r3, [r4, #16]
    51a4:	3b01      	subs	r3, #1
    51a6:	6123      	str	r3, [r4, #16]
    51a8:	e7f1      	b.n	518e <_scanf_float+0x24a>
    51aa:	9802      	ldr	r0, [sp, #8]
    51ac:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    51b0:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    51b4:	9002      	str	r0, [sp, #8]
    51b6:	463a      	mov	r2, r7
    51b8:	4648      	mov	r0, r9
    51ba:	4798      	blx	r3
    51bc:	6923      	ldr	r3, [r4, #16]
    51be:	3b01      	subs	r3, #1
    51c0:	6123      	str	r3, [r4, #16]
    51c2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    51c6:	fa5f fa8a 	uxtb.w	sl, sl
    51ca:	f1ba 0f02 	cmp.w	sl, #2
    51ce:	d1ec      	bne.n	51aa <_scanf_float+0x266>
    51d0:	3d03      	subs	r5, #3
    51d2:	b2ed      	uxtb	r5, r5
    51d4:	1b76      	subs	r6, r6, r5
    51d6:	6823      	ldr	r3, [r4, #0]
    51d8:	05da      	lsls	r2, r3, #23
    51da:	d52f      	bpl.n	523c <_scanf_float+0x2f8>
    51dc:	055b      	lsls	r3, r3, #21
    51de:	d510      	bpl.n	5202 <_scanf_float+0x2be>
    51e0:	455e      	cmp	r6, fp
    51e2:	f67f aef5 	bls.w	4fd0 <_scanf_float+0x8c>
    51e6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    51ea:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    51ee:	463a      	mov	r2, r7
    51f0:	4648      	mov	r0, r9
    51f2:	4798      	blx	r3
    51f4:	6923      	ldr	r3, [r4, #16]
    51f6:	3b01      	subs	r3, #1
    51f8:	6123      	str	r3, [r4, #16]
    51fa:	e7f1      	b.n	51e0 <_scanf_float+0x29c>
    51fc:	46aa      	mov	sl, r5
    51fe:	9602      	str	r6, [sp, #8]
    5200:	e7df      	b.n	51c2 <_scanf_float+0x27e>
    5202:	f816 1c01 	ldrb.w	r1, [r6, #-1]
    5206:	6923      	ldr	r3, [r4, #16]
    5208:	2965      	cmp	r1, #101	; 0x65
    520a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    520e:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
    5212:	6123      	str	r3, [r4, #16]
    5214:	d00c      	beq.n	5230 <_scanf_float+0x2ec>
    5216:	2945      	cmp	r1, #69	; 0x45
    5218:	d00a      	beq.n	5230 <_scanf_float+0x2ec>
    521a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    521e:	463a      	mov	r2, r7
    5220:	4648      	mov	r0, r9
    5222:	4798      	blx	r3
    5224:	6923      	ldr	r3, [r4, #16]
    5226:	f816 1c02 	ldrb.w	r1, [r6, #-2]
    522a:	3b01      	subs	r3, #1
    522c:	1eb5      	subs	r5, r6, #2
    522e:	6123      	str	r3, [r4, #16]
    5230:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    5234:	463a      	mov	r2, r7
    5236:	4648      	mov	r0, r9
    5238:	4798      	blx	r3
    523a:	462e      	mov	r6, r5
    523c:	6825      	ldr	r5, [r4, #0]
    523e:	f015 0510 	ands.w	r5, r5, #16
    5242:	d158      	bne.n	52f6 <_scanf_float+0x3b2>
    5244:	7035      	strb	r5, [r6, #0]
    5246:	6823      	ldr	r3, [r4, #0]
    5248:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
    524c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    5250:	d11c      	bne.n	528c <_scanf_float+0x348>
    5252:	9b01      	ldr	r3, [sp, #4]
    5254:	4543      	cmp	r3, r8
    5256:	eba3 0208 	sub.w	r2, r3, r8
    525a:	d124      	bne.n	52a6 <_scanf_float+0x362>
    525c:	2200      	movs	r2, #0
    525e:	4659      	mov	r1, fp
    5260:	4648      	mov	r0, r9
    5262:	f001 f861 	bl	6328 <_strtod_r>
    5266:	9b03      	ldr	r3, [sp, #12]
    5268:	6821      	ldr	r1, [r4, #0]
    526a:	681b      	ldr	r3, [r3, #0]
    526c:	f011 0f02 	tst.w	r1, #2
    5270:	ec57 6b10 	vmov	r6, r7, d0
    5274:	f103 0204 	add.w	r2, r3, #4
    5278:	d020      	beq.n	52bc <_scanf_float+0x378>
    527a:	9903      	ldr	r1, [sp, #12]
    527c:	600a      	str	r2, [r1, #0]
    527e:	681b      	ldr	r3, [r3, #0]
    5280:	e9c3 6700 	strd	r6, r7, [r3]
    5284:	68e3      	ldr	r3, [r4, #12]
    5286:	3301      	adds	r3, #1
    5288:	60e3      	str	r3, [r4, #12]
    528a:	e6a2      	b.n	4fd2 <_scanf_float+0x8e>
    528c:	9b04      	ldr	r3, [sp, #16]
    528e:	2b00      	cmp	r3, #0
    5290:	d0e4      	beq.n	525c <_scanf_float+0x318>
    5292:	9905      	ldr	r1, [sp, #20]
    5294:	230a      	movs	r3, #10
    5296:	462a      	mov	r2, r5
    5298:	3101      	adds	r1, #1
    529a:	4648      	mov	r0, r9
    529c:	f001 f8c2 	bl	6424 <_strtol_r>
    52a0:	9b04      	ldr	r3, [sp, #16]
    52a2:	9e05      	ldr	r6, [sp, #20]
    52a4:	1ac2      	subs	r2, r0, r3
    52a6:	f204 136f 	addw	r3, r4, #367	; 0x16f
    52aa:	429e      	cmp	r6, r3
    52ac:	bf28      	it	cs
    52ae:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
    52b2:	4912      	ldr	r1, [pc, #72]	; (52fc <_scanf_float+0x3b8>)
    52b4:	4630      	mov	r0, r6
    52b6:	f000 f99f 	bl	55f8 <siprintf>
    52ba:	e7cf      	b.n	525c <_scanf_float+0x318>
    52bc:	f011 0f04 	tst.w	r1, #4
    52c0:	9903      	ldr	r1, [sp, #12]
    52c2:	600a      	str	r2, [r1, #0]
    52c4:	d1db      	bne.n	527e <_scanf_float+0x33a>
    52c6:	f8d3 8000 	ldr.w	r8, [r3]
    52ca:	ee10 2a10 	vmov	r2, s0
    52ce:	463b      	mov	r3, r7
    52d0:	ee10 0a10 	vmov	r0, s0
    52d4:	4639      	mov	r1, r7
    52d6:	f004 fdc7 	bl	9e68 <__aeabi_dcmpun>
    52da:	b128      	cbz	r0, 52e8 <_scanf_float+0x3a4>
    52dc:	4808      	ldr	r0, [pc, #32]	; (5300 <_scanf_float+0x3bc>)
    52de:	f000 f985 	bl	55ec <nanf>
    52e2:	ed88 0a00 	vstr	s0, [r8]
    52e6:	e7cd      	b.n	5284 <_scanf_float+0x340>
    52e8:	4630      	mov	r0, r6
    52ea:	4639      	mov	r1, r7
    52ec:	f004 fe1a 	bl	9f24 <__aeabi_d2f>
    52f0:	f8c8 0000 	str.w	r0, [r8]
    52f4:	e7c6      	b.n	5284 <_scanf_float+0x340>
    52f6:	2500      	movs	r5, #0
    52f8:	e66b      	b.n	4fd2 <_scanf_float+0x8e>
    52fa:	bf00      	nop
    52fc:	0000b2d3 	.word	0x0000b2d3
    5300:	0000a47f 	.word	0x0000a47f

00005304 <iprintf>:
iprintf():
    5304:	b40f      	push	{r0, r1, r2, r3}
    5306:	4b0a      	ldr	r3, [pc, #40]	; (5330 <iprintf+0x2c>)
    5308:	b513      	push	{r0, r1, r4, lr}
    530a:	681c      	ldr	r4, [r3, #0]
    530c:	b124      	cbz	r4, 5318 <iprintf+0x14>
    530e:	69a3      	ldr	r3, [r4, #24]
    5310:	b913      	cbnz	r3, 5318 <iprintf+0x14>
    5312:	4620      	mov	r0, r4
    5314:	f002 f92a 	bl	756c <__sinit>
    5318:	ab05      	add	r3, sp, #20
    531a:	9a04      	ldr	r2, [sp, #16]
    531c:	68a1      	ldr	r1, [r4, #8]
    531e:	9301      	str	r3, [sp, #4]
    5320:	4620      	mov	r0, r4
    5322:	f7ff f8a3 	bl	446c <_vfiprintf_r>
    5326:	b002      	add	sp, #8
    5328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    532c:	b004      	add	sp, #16
    532e:	4770      	bx	lr
    5330:	10000180 	.word	0x10000180

00005334 <putchar>:
putchar():
    5334:	b538      	push	{r3, r4, r5, lr}
    5336:	4b08      	ldr	r3, [pc, #32]	; (5358 <putchar+0x24>)
    5338:	681c      	ldr	r4, [r3, #0]
    533a:	4605      	mov	r5, r0
    533c:	b124      	cbz	r4, 5348 <putchar+0x14>
    533e:	69a3      	ldr	r3, [r4, #24]
    5340:	b913      	cbnz	r3, 5348 <putchar+0x14>
    5342:	4620      	mov	r0, r4
    5344:	f002 f912 	bl	756c <__sinit>
    5348:	68a2      	ldr	r2, [r4, #8]
    534a:	4629      	mov	r1, r5
    534c:	4620      	mov	r0, r4
    534e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    5352:	f003 be77 	b.w	9044 <_putc_r>
    5356:	bf00      	nop
    5358:	10000180 	.word	0x10000180

0000535c <_puts_r>:
_puts_r():
    535c:	b570      	push	{r4, r5, r6, lr}
    535e:	460e      	mov	r6, r1
    5360:	4605      	mov	r5, r0
    5362:	b118      	cbz	r0, 536c <_puts_r+0x10>
    5364:	6983      	ldr	r3, [r0, #24]
    5366:	b90b      	cbnz	r3, 536c <_puts_r+0x10>
    5368:	f002 f900 	bl	756c <__sinit>
    536c:	69ab      	ldr	r3, [r5, #24]
    536e:	68ac      	ldr	r4, [r5, #8]
    5370:	b913      	cbnz	r3, 5378 <_puts_r+0x1c>
    5372:	4628      	mov	r0, r5
    5374:	f002 f8fa 	bl	756c <__sinit>
    5378:	4b2c      	ldr	r3, [pc, #176]	; (542c <_puts_r+0xd0>)
    537a:	429c      	cmp	r4, r3
    537c:	d120      	bne.n	53c0 <_puts_r+0x64>
    537e:	686c      	ldr	r4, [r5, #4]
    5380:	6e63      	ldr	r3, [r4, #100]	; 0x64
    5382:	07db      	lsls	r3, r3, #31
    5384:	d405      	bmi.n	5392 <_puts_r+0x36>
    5386:	89a3      	ldrh	r3, [r4, #12]
    5388:	0598      	lsls	r0, r3, #22
    538a:	d402      	bmi.n	5392 <_puts_r+0x36>
    538c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    538e:	f7fe ff58 	bl	4242 <__retarget_lock_acquire_recursive>
    5392:	89a3      	ldrh	r3, [r4, #12]
    5394:	0719      	lsls	r1, r3, #28
    5396:	d51d      	bpl.n	53d4 <_puts_r+0x78>
    5398:	6923      	ldr	r3, [r4, #16]
    539a:	b1db      	cbz	r3, 53d4 <_puts_r+0x78>
    539c:	3e01      	subs	r6, #1
    539e:	68a3      	ldr	r3, [r4, #8]
    53a0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    53a4:	3b01      	subs	r3, #1
    53a6:	60a3      	str	r3, [r4, #8]
    53a8:	bb39      	cbnz	r1, 53fa <_puts_r+0x9e>
    53aa:	2b00      	cmp	r3, #0
    53ac:	da38      	bge.n	5420 <_puts_r+0xc4>
    53ae:	4622      	mov	r2, r4
    53b0:	210a      	movs	r1, #10
    53b2:	4628      	mov	r0, r5
    53b4:	f001 f8aa 	bl	650c <__swbuf_r>
    53b8:	3001      	adds	r0, #1
    53ba:	d011      	beq.n	53e0 <_puts_r+0x84>
    53bc:	250a      	movs	r5, #10
    53be:	e011      	b.n	53e4 <_puts_r+0x88>
    53c0:	4b1b      	ldr	r3, [pc, #108]	; (5430 <_puts_r+0xd4>)
    53c2:	429c      	cmp	r4, r3
    53c4:	d101      	bne.n	53ca <_puts_r+0x6e>
    53c6:	68ac      	ldr	r4, [r5, #8]
    53c8:	e7da      	b.n	5380 <_puts_r+0x24>
    53ca:	4b1a      	ldr	r3, [pc, #104]	; (5434 <_puts_r+0xd8>)
    53cc:	429c      	cmp	r4, r3
    53ce:	bf08      	it	eq
    53d0:	68ec      	ldreq	r4, [r5, #12]
    53d2:	e7d5      	b.n	5380 <_puts_r+0x24>
    53d4:	4621      	mov	r1, r4
    53d6:	4628      	mov	r0, r5
    53d8:	f001 f8ea 	bl	65b0 <__swsetup_r>
    53dc:	2800      	cmp	r0, #0
    53de:	d0dd      	beq.n	539c <_puts_r+0x40>
    53e0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    53e4:	6e63      	ldr	r3, [r4, #100]	; 0x64
    53e6:	07da      	lsls	r2, r3, #31
    53e8:	d405      	bmi.n	53f6 <_puts_r+0x9a>
    53ea:	89a3      	ldrh	r3, [r4, #12]
    53ec:	059b      	lsls	r3, r3, #22
    53ee:	d402      	bmi.n	53f6 <_puts_r+0x9a>
    53f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    53f2:	f7fe ff27 	bl	4244 <__retarget_lock_release_recursive>
    53f6:	4628      	mov	r0, r5
    53f8:	bd70      	pop	{r4, r5, r6, pc}
    53fa:	2b00      	cmp	r3, #0
    53fc:	da04      	bge.n	5408 <_puts_r+0xac>
    53fe:	69a2      	ldr	r2, [r4, #24]
    5400:	429a      	cmp	r2, r3
    5402:	dc06      	bgt.n	5412 <_puts_r+0xb6>
    5404:	290a      	cmp	r1, #10
    5406:	d004      	beq.n	5412 <_puts_r+0xb6>
    5408:	6823      	ldr	r3, [r4, #0]
    540a:	1c5a      	adds	r2, r3, #1
    540c:	6022      	str	r2, [r4, #0]
    540e:	7019      	strb	r1, [r3, #0]
    5410:	e7c5      	b.n	539e <_puts_r+0x42>
    5412:	4622      	mov	r2, r4
    5414:	4628      	mov	r0, r5
    5416:	f001 f879 	bl	650c <__swbuf_r>
    541a:	3001      	adds	r0, #1
    541c:	d1bf      	bne.n	539e <_puts_r+0x42>
    541e:	e7df      	b.n	53e0 <_puts_r+0x84>
    5420:	6823      	ldr	r3, [r4, #0]
    5422:	250a      	movs	r5, #10
    5424:	1c5a      	adds	r2, r3, #1
    5426:	6022      	str	r2, [r4, #0]
    5428:	701d      	strb	r5, [r3, #0]
    542a:	e7db      	b.n	53e4 <_puts_r+0x88>
    542c:	0000b358 	.word	0x0000b358
    5430:	0000b378 	.word	0x0000b378
    5434:	0000b338 	.word	0x0000b338

00005438 <puts>:
puts():
    5438:	4b02      	ldr	r3, [pc, #8]	; (5444 <puts+0xc>)
    543a:	4601      	mov	r1, r0
    543c:	6818      	ldr	r0, [r3, #0]
    543e:	f7ff bf8d 	b.w	535c <_puts_r>
    5442:	bf00      	nop
    5444:	10000180 	.word	0x10000180

00005448 <_sbrk_r>:
_sbrk_r():
    5448:	b538      	push	{r3, r4, r5, lr}
    544a:	4c06      	ldr	r4, [pc, #24]	; (5464 <_sbrk_r+0x1c>)
    544c:	2300      	movs	r3, #0
    544e:	4605      	mov	r5, r0
    5450:	4608      	mov	r0, r1
    5452:	6023      	str	r3, [r4, #0]
    5454:	f7fa ff76 	bl	344 <_sbrk>
    5458:	1c43      	adds	r3, r0, #1
    545a:	d102      	bne.n	5462 <_sbrk_r+0x1a>
    545c:	6823      	ldr	r3, [r4, #0]
    545e:	b103      	cbz	r3, 5462 <_sbrk_r+0x1a>
    5460:	602b      	str	r3, [r5, #0]
    5462:	bd38      	pop	{r3, r4, r5, pc}
    5464:	100012ec 	.word	0x100012ec

00005468 <setvbuf>:
setvbuf():
    5468:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    546c:	461e      	mov	r6, r3
    546e:	4b5b      	ldr	r3, [pc, #364]	; (55dc <setvbuf+0x174>)
    5470:	681d      	ldr	r5, [r3, #0]
    5472:	4604      	mov	r4, r0
    5474:	460f      	mov	r7, r1
    5476:	4690      	mov	r8, r2
    5478:	b125      	cbz	r5, 5484 <setvbuf+0x1c>
    547a:	69ab      	ldr	r3, [r5, #24]
    547c:	b913      	cbnz	r3, 5484 <setvbuf+0x1c>
    547e:	4628      	mov	r0, r5
    5480:	f002 f874 	bl	756c <__sinit>
    5484:	4b56      	ldr	r3, [pc, #344]	; (55e0 <setvbuf+0x178>)
    5486:	429c      	cmp	r4, r3
    5488:	d166      	bne.n	5558 <setvbuf+0xf0>
    548a:	686c      	ldr	r4, [r5, #4]
    548c:	f1b8 0f02 	cmp.w	r8, #2
    5490:	d006      	beq.n	54a0 <setvbuf+0x38>
    5492:	f1b8 0f01 	cmp.w	r8, #1
    5496:	f200 809d 	bhi.w	55d4 <setvbuf+0x16c>
    549a:	2e00      	cmp	r6, #0
    549c:	f2c0 809a 	blt.w	55d4 <setvbuf+0x16c>
    54a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
    54a2:	07da      	lsls	r2, r3, #31
    54a4:	d405      	bmi.n	54b2 <setvbuf+0x4a>
    54a6:	89a3      	ldrh	r3, [r4, #12]
    54a8:	059b      	lsls	r3, r3, #22
    54aa:	d402      	bmi.n	54b2 <setvbuf+0x4a>
    54ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
    54ae:	f7fe fec8 	bl	4242 <__retarget_lock_acquire_recursive>
    54b2:	4621      	mov	r1, r4
    54b4:	4628      	mov	r0, r5
    54b6:	f001 ffb3 	bl	7420 <_fflush_r>
    54ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
    54bc:	b141      	cbz	r1, 54d0 <setvbuf+0x68>
    54be:	f104 0344 	add.w	r3, r4, #68	; 0x44
    54c2:	4299      	cmp	r1, r3
    54c4:	d002      	beq.n	54cc <setvbuf+0x64>
    54c6:	4628      	mov	r0, r5
    54c8:	f7fe fefe 	bl	42c8 <_free_r>
    54cc:	2300      	movs	r3, #0
    54ce:	6363      	str	r3, [r4, #52]	; 0x34
    54d0:	2300      	movs	r3, #0
    54d2:	61a3      	str	r3, [r4, #24]
    54d4:	6063      	str	r3, [r4, #4]
    54d6:	89a3      	ldrh	r3, [r4, #12]
    54d8:	0618      	lsls	r0, r3, #24
    54da:	d503      	bpl.n	54e4 <setvbuf+0x7c>
    54dc:	6921      	ldr	r1, [r4, #16]
    54de:	4628      	mov	r0, r5
    54e0:	f7fe fef2 	bl	42c8 <_free_r>
    54e4:	89a3      	ldrh	r3, [r4, #12]
    54e6:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    54ea:	f023 0303 	bic.w	r3, r3, #3
    54ee:	f1b8 0f02 	cmp.w	r8, #2
    54f2:	81a3      	strh	r3, [r4, #12]
    54f4:	d06a      	beq.n	55cc <setvbuf+0x164>
    54f6:	ab01      	add	r3, sp, #4
    54f8:	466a      	mov	r2, sp
    54fa:	4621      	mov	r1, r4
    54fc:	4628      	mov	r0, r5
    54fe:	f002 fc5b 	bl	7db8 <__swhatbuf_r>
    5502:	89a3      	ldrh	r3, [r4, #12]
    5504:	4318      	orrs	r0, r3
    5506:	81a0      	strh	r0, [r4, #12]
    5508:	2e00      	cmp	r6, #0
    550a:	d12f      	bne.n	556c <setvbuf+0x104>
    550c:	9e00      	ldr	r6, [sp, #0]
    550e:	4630      	mov	r0, r6
    5510:	f7fe fe9a 	bl	4248 <malloc>
    5514:	4607      	mov	r7, r0
    5516:	2800      	cmp	r0, #0
    5518:	d153      	bne.n	55c2 <setvbuf+0x15a>
    551a:	f8dd 9000 	ldr.w	r9, [sp]
    551e:	45b1      	cmp	r9, r6
    5520:	d148      	bne.n	55b4 <setvbuf+0x14c>
    5522:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    5526:	2200      	movs	r2, #0
    5528:	60a2      	str	r2, [r4, #8]
    552a:	f104 0247 	add.w	r2, r4, #71	; 0x47
    552e:	6022      	str	r2, [r4, #0]
    5530:	6122      	str	r2, [r4, #16]
    5532:	2201      	movs	r2, #1
    5534:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    5538:	6162      	str	r2, [r4, #20]
    553a:	6e62      	ldr	r2, [r4, #100]	; 0x64
    553c:	f043 0302 	orr.w	r3, r3, #2
    5540:	07d1      	lsls	r1, r2, #31
    5542:	81a3      	strh	r3, [r4, #12]
    5544:	d404      	bmi.n	5550 <setvbuf+0xe8>
    5546:	059b      	lsls	r3, r3, #22
    5548:	d402      	bmi.n	5550 <setvbuf+0xe8>
    554a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    554c:	f7fe fe7a 	bl	4244 <__retarget_lock_release_recursive>
    5550:	4628      	mov	r0, r5
    5552:	b003      	add	sp, #12
    5554:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    5558:	4b22      	ldr	r3, [pc, #136]	; (55e4 <setvbuf+0x17c>)
    555a:	429c      	cmp	r4, r3
    555c:	d101      	bne.n	5562 <setvbuf+0xfa>
    555e:	68ac      	ldr	r4, [r5, #8]
    5560:	e794      	b.n	548c <setvbuf+0x24>
    5562:	4b21      	ldr	r3, [pc, #132]	; (55e8 <setvbuf+0x180>)
    5564:	429c      	cmp	r4, r3
    5566:	bf08      	it	eq
    5568:	68ec      	ldreq	r4, [r5, #12]
    556a:	e78f      	b.n	548c <setvbuf+0x24>
    556c:	2f00      	cmp	r7, #0
    556e:	d0ce      	beq.n	550e <setvbuf+0xa6>
    5570:	69ab      	ldr	r3, [r5, #24]
    5572:	b913      	cbnz	r3, 557a <setvbuf+0x112>
    5574:	4628      	mov	r0, r5
    5576:	f001 fff9 	bl	756c <__sinit>
    557a:	f1b8 0f01 	cmp.w	r8, #1
    557e:	bf08      	it	eq
    5580:	89a3      	ldrheq	r3, [r4, #12]
    5582:	6027      	str	r7, [r4, #0]
    5584:	bf04      	itt	eq
    5586:	f043 0301 	orreq.w	r3, r3, #1
    558a:	81a3      	strheq	r3, [r4, #12]
    558c:	89a3      	ldrh	r3, [r4, #12]
    558e:	f013 0208 	ands.w	r2, r3, #8
    5592:	e9c4 7604 	strd	r7, r6, [r4, #16]
    5596:	d01b      	beq.n	55d0 <setvbuf+0x168>
    5598:	07da      	lsls	r2, r3, #31
    559a:	bf41      	itttt	mi
    559c:	2200      	movmi	r2, #0
    559e:	4276      	negmi	r6, r6
    55a0:	60a2      	strmi	r2, [r4, #8]
    55a2:	61a6      	strmi	r6, [r4, #24]
    55a4:	bf58      	it	pl
    55a6:	60a6      	strpl	r6, [r4, #8]
    55a8:	6e65      	ldr	r5, [r4, #100]	; 0x64
    55aa:	f015 0501 	ands.w	r5, r5, #1
    55ae:	d0ca      	beq.n	5546 <setvbuf+0xde>
    55b0:	2500      	movs	r5, #0
    55b2:	e7cd      	b.n	5550 <setvbuf+0xe8>
    55b4:	4648      	mov	r0, r9
    55b6:	f7fe fe47 	bl	4248 <malloc>
    55ba:	4607      	mov	r7, r0
    55bc:	2800      	cmp	r0, #0
    55be:	d0b0      	beq.n	5522 <setvbuf+0xba>
    55c0:	464e      	mov	r6, r9
    55c2:	89a3      	ldrh	r3, [r4, #12]
    55c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    55c8:	81a3      	strh	r3, [r4, #12]
    55ca:	e7d1      	b.n	5570 <setvbuf+0x108>
    55cc:	2500      	movs	r5, #0
    55ce:	e7aa      	b.n	5526 <setvbuf+0xbe>
    55d0:	60a2      	str	r2, [r4, #8]
    55d2:	e7e9      	b.n	55a8 <setvbuf+0x140>
    55d4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    55d8:	e7ba      	b.n	5550 <setvbuf+0xe8>
    55da:	bf00      	nop
    55dc:	10000180 	.word	0x10000180
    55e0:	0000b358 	.word	0x0000b358
    55e4:	0000b378 	.word	0x0000b378
    55e8:	0000b338 	.word	0x0000b338

000055ec <nanf>:
nanf():
    55ec:	ed9f 0a01 	vldr	s0, [pc, #4]	; 55f4 <nanf+0x8>
    55f0:	4770      	bx	lr
    55f2:	bf00      	nop
    55f4:	7fc00000 	.word	0x7fc00000

000055f8 <siprintf>:
siprintf():
    55f8:	b40e      	push	{r1, r2, r3}
    55fa:	b500      	push	{lr}
    55fc:	b09c      	sub	sp, #112	; 0x70
    55fe:	ab1d      	add	r3, sp, #116	; 0x74
    5600:	9002      	str	r0, [sp, #8]
    5602:	9006      	str	r0, [sp, #24]
    5604:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    5608:	4809      	ldr	r0, [pc, #36]	; (5630 <siprintf+0x38>)
    560a:	9107      	str	r1, [sp, #28]
    560c:	9104      	str	r1, [sp, #16]
    560e:	4909      	ldr	r1, [pc, #36]	; (5634 <siprintf+0x3c>)
    5610:	f853 2b04 	ldr.w	r2, [r3], #4
    5614:	9105      	str	r1, [sp, #20]
    5616:	6800      	ldr	r0, [r0, #0]
    5618:	9301      	str	r3, [sp, #4]
    561a:	a902      	add	r1, sp, #8
    561c:	f003 f92c 	bl	8878 <_svfiprintf_r>
    5620:	9b02      	ldr	r3, [sp, #8]
    5622:	2200      	movs	r2, #0
    5624:	701a      	strb	r2, [r3, #0]
    5626:	b01c      	add	sp, #112	; 0x70
    5628:	f85d eb04 	ldr.w	lr, [sp], #4
    562c:	b003      	add	sp, #12
    562e:	4770      	bx	lr
    5630:	10000180 	.word	0x10000180
    5634:	ffff0208 	.word	0xffff0208

00005638 <strcasecmp>:
strcasecmp():
    5638:	b570      	push	{r4, r5, r6, lr}
    563a:	4d0c      	ldr	r5, [pc, #48]	; (566c <strcasecmp+0x34>)
    563c:	462e      	mov	r6, r5
    563e:	f810 3b01 	ldrb.w	r3, [r0], #1
    5642:	5d5a      	ldrb	r2, [r3, r5]
    5644:	f002 0203 	and.w	r2, r2, #3
    5648:	2a01      	cmp	r2, #1
    564a:	f811 2b01 	ldrb.w	r2, [r1], #1
    564e:	5cb4      	ldrb	r4, [r6, r2]
    5650:	f004 0403 	and.w	r4, r4, #3
    5654:	bf08      	it	eq
    5656:	3320      	addeq	r3, #32
    5658:	2c01      	cmp	r4, #1
    565a:	bf08      	it	eq
    565c:	3220      	addeq	r2, #32
    565e:	1a9b      	subs	r3, r3, r2
    5660:	d101      	bne.n	5666 <strcasecmp+0x2e>
    5662:	2a00      	cmp	r2, #0
    5664:	d1eb      	bne.n	563e <strcasecmp+0x6>
    5666:	4618      	mov	r0, r3
    5668:	bd70      	pop	{r4, r5, r6, pc}
    566a:	bf00      	nop
    566c:	0000b189 	.word	0x0000b189

00005670 <strchr>:
strchr():
    5670:	b2c9      	uxtb	r1, r1
    5672:	4603      	mov	r3, r0
    5674:	f810 2b01 	ldrb.w	r2, [r0], #1
    5678:	b11a      	cbz	r2, 5682 <strchr+0x12>
    567a:	428a      	cmp	r2, r1
    567c:	d1f9      	bne.n	5672 <strchr+0x2>
    567e:	4618      	mov	r0, r3
    5680:	4770      	bx	lr
    5682:	2900      	cmp	r1, #0
    5684:	bf18      	it	ne
    5686:	2300      	movne	r3, #0
    5688:	e7f9      	b.n	567e <strchr+0xe>

0000568a <strlen>:
strlen():
    568a:	4603      	mov	r3, r0
    568c:	f813 2b01 	ldrb.w	r2, [r3], #1
    5690:	2a00      	cmp	r2, #0
    5692:	d1fb      	bne.n	568c <strlen+0x2>
    5694:	1a18      	subs	r0, r3, r0
    5696:	3801      	subs	r0, #1
    5698:	4770      	bx	lr
    569a:	Address 0x000000000000569a is out of bounds.


0000569c <strncasecmp>:
strncasecmp():
    569c:	b570      	push	{r4, r5, r6, lr}
    569e:	4e0f      	ldr	r6, [pc, #60]	; (56dc <strncasecmp+0x40>)
    56a0:	440a      	add	r2, r1
    56a2:	428a      	cmp	r2, r1
    56a4:	d101      	bne.n	56aa <strncasecmp+0xe>
    56a6:	2300      	movs	r3, #0
    56a8:	e013      	b.n	56d2 <strncasecmp+0x36>
    56aa:	f810 4b01 	ldrb.w	r4, [r0], #1
    56ae:	5da3      	ldrb	r3, [r4, r6]
    56b0:	f003 0303 	and.w	r3, r3, #3
    56b4:	2b01      	cmp	r3, #1
    56b6:	f811 3b01 	ldrb.w	r3, [r1], #1
    56ba:	5cf5      	ldrb	r5, [r6, r3]
    56bc:	f005 0503 	and.w	r5, r5, #3
    56c0:	bf08      	it	eq
    56c2:	3420      	addeq	r4, #32
    56c4:	2d01      	cmp	r5, #1
    56c6:	bf08      	it	eq
    56c8:	3320      	addeq	r3, #32
    56ca:	1ae4      	subs	r4, r4, r3
    56cc:	d103      	bne.n	56d6 <strncasecmp+0x3a>
    56ce:	2b00      	cmp	r3, #0
    56d0:	d1e7      	bne.n	56a2 <strncasecmp+0x6>
    56d2:	4618      	mov	r0, r3
    56d4:	bd70      	pop	{r4, r5, r6, pc}
    56d6:	4623      	mov	r3, r4
    56d8:	e7fb      	b.n	56d2 <strncasecmp+0x36>
    56da:	bf00      	nop
    56dc:	0000b189 	.word	0x0000b189

000056e0 <strncmp>:
strncmp():
    56e0:	b510      	push	{r4, lr}
    56e2:	b16a      	cbz	r2, 5700 <strncmp+0x20>
    56e4:	3901      	subs	r1, #1
    56e6:	1884      	adds	r4, r0, r2
    56e8:	f810 3b01 	ldrb.w	r3, [r0], #1
    56ec:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    56f0:	4293      	cmp	r3, r2
    56f2:	d103      	bne.n	56fc <strncmp+0x1c>
    56f4:	42a0      	cmp	r0, r4
    56f6:	d001      	beq.n	56fc <strncmp+0x1c>
    56f8:	2b00      	cmp	r3, #0
    56fa:	d1f5      	bne.n	56e8 <strncmp+0x8>
    56fc:	1a98      	subs	r0, r3, r2
    56fe:	bd10      	pop	{r4, pc}
    5700:	4610      	mov	r0, r2
    5702:	e7fc      	b.n	56fe <strncmp+0x1e>

00005704 <strncpy>:
strncpy():
    5704:	b510      	push	{r4, lr}
    5706:	3901      	subs	r1, #1
    5708:	4603      	mov	r3, r0
    570a:	b132      	cbz	r2, 571a <strncpy+0x16>
    570c:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    5710:	f803 4b01 	strb.w	r4, [r3], #1
    5714:	3a01      	subs	r2, #1
    5716:	2c00      	cmp	r4, #0
    5718:	d1f7      	bne.n	570a <strncpy+0x6>
    571a:	441a      	add	r2, r3
    571c:	2100      	movs	r1, #0
    571e:	4293      	cmp	r3, r2
    5720:	d100      	bne.n	5724 <strncpy+0x20>
    5722:	bd10      	pop	{r4, pc}
    5724:	f803 1b01 	strb.w	r1, [r3], #1
    5728:	e7f9      	b.n	571e <strncpy+0x1a>

0000572a <strstr>:
strstr():
    572a:	b5f0      	push	{r4, r5, r6, r7, lr}
    572c:	780c      	ldrb	r4, [r1, #0]
    572e:	b164      	cbz	r4, 574a <strstr+0x20>
    5730:	4603      	mov	r3, r0
    5732:	781a      	ldrb	r2, [r3, #0]
    5734:	4618      	mov	r0, r3
    5736:	1c5e      	adds	r6, r3, #1
    5738:	b90a      	cbnz	r2, 573e <strstr+0x14>
    573a:	4610      	mov	r0, r2
    573c:	e005      	b.n	574a <strstr+0x20>
    573e:	4294      	cmp	r4, r2
    5740:	d108      	bne.n	5754 <strstr+0x2a>
    5742:	460d      	mov	r5, r1
    5744:	f815 2f01 	ldrb.w	r2, [r5, #1]!
    5748:	b902      	cbnz	r2, 574c <strstr+0x22>
    574a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    574c:	f813 7f01 	ldrb.w	r7, [r3, #1]!
    5750:	4297      	cmp	r7, r2
    5752:	d0f7      	beq.n	5744 <strstr+0x1a>
    5754:	4633      	mov	r3, r6
    5756:	e7ec      	b.n	5732 <strstr+0x8>

00005758 <sulp>:
sulp():
    5758:	b570      	push	{r4, r5, r6, lr}
    575a:	4604      	mov	r4, r0
    575c:	460d      	mov	r5, r1
    575e:	ec45 4b10 	vmov	d0, r4, r5
    5762:	4616      	mov	r6, r2
    5764:	f002 fec6 	bl	84f4 <__ulp>
    5768:	ec51 0b10 	vmov	r0, r1, d0
    576c:	b17e      	cbz	r6, 578e <sulp+0x36>
    576e:	f3c5 530a 	ubfx	r3, r5, #20, #11
    5772:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    5776:	2b00      	cmp	r3, #0
    5778:	dd09      	ble.n	578e <sulp+0x36>
    577a:	051b      	lsls	r3, r3, #20
    577c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
    5780:	2400      	movs	r4, #0
    5782:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
    5786:	4622      	mov	r2, r4
    5788:	462b      	mov	r3, r5
    578a:	f004 f8d3 	bl	9934 <__aeabi_dmul>
    578e:	bd70      	pop	{r4, r5, r6, pc}

00005790 <_strtod_l>:
_strtod_l():
    5790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5794:	b0a1      	sub	sp, #132	; 0x84
    5796:	461f      	mov	r7, r3
    5798:	2300      	movs	r3, #0
    579a:	931c      	str	r3, [sp, #112]	; 0x70
    579c:	4b9b      	ldr	r3, [pc, #620]	; (5a0c <_strtod_l+0x27c>)
    579e:	9004      	str	r0, [sp, #16]
    57a0:	681b      	ldr	r3, [r3, #0]
    57a2:	9217      	str	r2, [sp, #92]	; 0x5c
    57a4:	4618      	mov	r0, r3
    57a6:	460e      	mov	r6, r1
    57a8:	9305      	str	r3, [sp, #20]
    57aa:	f7ff ff6e 	bl	568a <strlen>
    57ae:	f04f 0a00 	mov.w	sl, #0
    57b2:	4604      	mov	r4, r0
    57b4:	f04f 0b00 	mov.w	fp, #0
    57b8:	961b      	str	r6, [sp, #108]	; 0x6c
    57ba:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    57bc:	7813      	ldrb	r3, [r2, #0]
    57be:	2b0d      	cmp	r3, #13
    57c0:	d832      	bhi.n	5828 <_strtod_l+0x98>
    57c2:	2b09      	cmp	r3, #9
    57c4:	d236      	bcs.n	5834 <_strtod_l+0xa4>
    57c6:	2b00      	cmp	r3, #0
    57c8:	d03e      	beq.n	5848 <_strtod_l+0xb8>
    57ca:	2300      	movs	r3, #0
    57cc:	930c      	str	r3, [sp, #48]	; 0x30
    57ce:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    57d0:	782b      	ldrb	r3, [r5, #0]
    57d2:	2b30      	cmp	r3, #48	; 0x30
    57d4:	f040 80a9 	bne.w	592a <_strtod_l+0x19a>
    57d8:	786b      	ldrb	r3, [r5, #1]
    57da:	2b58      	cmp	r3, #88	; 0x58
    57dc:	d001      	beq.n	57e2 <_strtod_l+0x52>
    57de:	2b78      	cmp	r3, #120	; 0x78
    57e0:	d167      	bne.n	58b2 <_strtod_l+0x122>
    57e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    57e4:	9301      	str	r3, [sp, #4]
    57e6:	ab1c      	add	r3, sp, #112	; 0x70
    57e8:	9300      	str	r3, [sp, #0]
    57ea:	9702      	str	r7, [sp, #8]
    57ec:	ab1d      	add	r3, sp, #116	; 0x74
    57ee:	4a88      	ldr	r2, [pc, #544]	; (5a10 <_strtod_l+0x280>)
    57f0:	9804      	ldr	r0, [sp, #16]
    57f2:	a91b      	add	r1, sp, #108	; 0x6c
    57f4:	f001 ffc2 	bl	777c <__gethex>
    57f8:	f010 0407 	ands.w	r4, r0, #7
    57fc:	4606      	mov	r6, r0
    57fe:	d005      	beq.n	580c <_strtod_l+0x7c>
    5800:	2c06      	cmp	r4, #6
    5802:	d12b      	bne.n	585c <_strtod_l+0xcc>
    5804:	3501      	adds	r5, #1
    5806:	2300      	movs	r3, #0
    5808:	951b      	str	r5, [sp, #108]	; 0x6c
    580a:	930c      	str	r3, [sp, #48]	; 0x30
    580c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    580e:	2b00      	cmp	r3, #0
    5810:	f040 8576 	bne.w	6300 <_strtod_l+0xb70>
    5814:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5816:	b1e3      	cbz	r3, 5852 <_strtod_l+0xc2>
    5818:	4652      	mov	r2, sl
    581a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    581e:	ec43 2b10 	vmov	d0, r2, r3
    5822:	b021      	add	sp, #132	; 0x84
    5824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5828:	2b2b      	cmp	r3, #43	; 0x2b
    582a:	d006      	beq.n	583a <_strtod_l+0xaa>
    582c:	2b2d      	cmp	r3, #45	; 0x2d
    582e:	d013      	beq.n	5858 <_strtod_l+0xc8>
    5830:	2b20      	cmp	r3, #32
    5832:	d1ca      	bne.n	57ca <_strtod_l+0x3a>
    5834:	3201      	adds	r2, #1
    5836:	921b      	str	r2, [sp, #108]	; 0x6c
    5838:	e7bf      	b.n	57ba <_strtod_l+0x2a>
    583a:	2300      	movs	r3, #0
    583c:	930c      	str	r3, [sp, #48]	; 0x30
    583e:	1c53      	adds	r3, r2, #1
    5840:	931b      	str	r3, [sp, #108]	; 0x6c
    5842:	7853      	ldrb	r3, [r2, #1]
    5844:	2b00      	cmp	r3, #0
    5846:	d1c2      	bne.n	57ce <_strtod_l+0x3e>
    5848:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    584a:	961b      	str	r6, [sp, #108]	; 0x6c
    584c:	2b00      	cmp	r3, #0
    584e:	f040 8555 	bne.w	62fc <_strtod_l+0xb6c>
    5852:	4652      	mov	r2, sl
    5854:	465b      	mov	r3, fp
    5856:	e7e2      	b.n	581e <_strtod_l+0x8e>
    5858:	2301      	movs	r3, #1
    585a:	e7ef      	b.n	583c <_strtod_l+0xac>
    585c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    585e:	b13a      	cbz	r2, 5870 <_strtod_l+0xe0>
    5860:	2135      	movs	r1, #53	; 0x35
    5862:	a81e      	add	r0, sp, #120	; 0x78
    5864:	f002 ff3d 	bl	86e2 <__copybits>
    5868:	991c      	ldr	r1, [sp, #112]	; 0x70
    586a:	9804      	ldr	r0, [sp, #16]
    586c:	f002 fbb0 	bl	7fd0 <_Bfree>
    5870:	3c01      	subs	r4, #1
    5872:	2c04      	cmp	r4, #4
    5874:	d806      	bhi.n	5884 <_strtod_l+0xf4>
    5876:	e8df f004 	tbb	[pc, r4]
    587a:	030a      	.short	0x030a
    587c:	1714      	.short	0x1714
    587e:	0a          	.byte	0x0a
    587f:	00          	.byte	0x00
    5880:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
    5884:	0731      	lsls	r1, r6, #28
    5886:	d5c1      	bpl.n	580c <_strtod_l+0x7c>
    5888:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    588c:	e7be      	b.n	580c <_strtod_l+0x7c>
    588e:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
    5892:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    5894:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
    5898:	f202 4233 	addw	r2, r2, #1075	; 0x433
    589c:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
    58a0:	e7f0      	b.n	5884 <_strtod_l+0xf4>
    58a2:	f8df b170 	ldr.w	fp, [pc, #368]	; 5a14 <_strtod_l+0x284>
    58a6:	e7ed      	b.n	5884 <_strtod_l+0xf4>
    58a8:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
    58ac:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    58b0:	e7e8      	b.n	5884 <_strtod_l+0xf4>
    58b2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    58b4:	1c5a      	adds	r2, r3, #1
    58b6:	921b      	str	r2, [sp, #108]	; 0x6c
    58b8:	785b      	ldrb	r3, [r3, #1]
    58ba:	2b30      	cmp	r3, #48	; 0x30
    58bc:	d0f9      	beq.n	58b2 <_strtod_l+0x122>
    58be:	2b00      	cmp	r3, #0
    58c0:	d0a4      	beq.n	580c <_strtod_l+0x7c>
    58c2:	2301      	movs	r3, #1
    58c4:	f04f 0900 	mov.w	r9, #0
    58c8:	9306      	str	r3, [sp, #24]
    58ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    58cc:	9309      	str	r3, [sp, #36]	; 0x24
    58ce:	f8cd 901c 	str.w	r9, [sp, #28]
    58d2:	46c8      	mov	r8, r9
    58d4:	220a      	movs	r2, #10
    58d6:	981b      	ldr	r0, [sp, #108]	; 0x6c
    58d8:	7805      	ldrb	r5, [r0, #0]
    58da:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    58de:	b2d9      	uxtb	r1, r3
    58e0:	2909      	cmp	r1, #9
    58e2:	d924      	bls.n	592e <_strtod_l+0x19e>
    58e4:	4622      	mov	r2, r4
    58e6:	9905      	ldr	r1, [sp, #20]
    58e8:	f7ff fefa 	bl	56e0 <strncmp>
    58ec:	b378      	cbz	r0, 594e <_strtod_l+0x1be>
    58ee:	2000      	movs	r0, #0
    58f0:	462b      	mov	r3, r5
    58f2:	4644      	mov	r4, r8
    58f4:	9005      	str	r0, [sp, #20]
    58f6:	4602      	mov	r2, r0
    58f8:	2b65      	cmp	r3, #101	; 0x65
    58fa:	d001      	beq.n	5900 <_strtod_l+0x170>
    58fc:	2b45      	cmp	r3, #69	; 0x45
    58fe:	d112      	bne.n	5926 <_strtod_l+0x196>
    5900:	b91c      	cbnz	r4, 590a <_strtod_l+0x17a>
    5902:	9b06      	ldr	r3, [sp, #24]
    5904:	4303      	orrs	r3, r0
    5906:	d09f      	beq.n	5848 <_strtod_l+0xb8>
    5908:	2400      	movs	r4, #0
    590a:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
    590c:	1c73      	adds	r3, r6, #1
    590e:	931b      	str	r3, [sp, #108]	; 0x6c
    5910:	7873      	ldrb	r3, [r6, #1]
    5912:	2b2b      	cmp	r3, #43	; 0x2b
    5914:	d072      	beq.n	59fc <_strtod_l+0x26c>
    5916:	2b2d      	cmp	r3, #45	; 0x2d
    5918:	d075      	beq.n	5a06 <_strtod_l+0x276>
    591a:	2700      	movs	r7, #0
    591c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    5920:	2909      	cmp	r1, #9
    5922:	d97d      	bls.n	5a20 <_strtod_l+0x290>
    5924:	961b      	str	r6, [sp, #108]	; 0x6c
    5926:	2500      	movs	r5, #0
    5928:	e09a      	b.n	5a60 <_strtod_l+0x2d0>
    592a:	2300      	movs	r3, #0
    592c:	e7ca      	b.n	58c4 <_strtod_l+0x134>
    592e:	f1b8 0f08 	cmp.w	r8, #8
    5932:	bfd8      	it	le
    5934:	9907      	ldrle	r1, [sp, #28]
    5936:	f100 0001 	add.w	r0, r0, #1
    593a:	bfda      	itte	le
    593c:	fb02 3301 	mlale	r3, r2, r1, r3
    5940:	9307      	strle	r3, [sp, #28]
    5942:	fb02 3909 	mlagt	r9, r2, r9, r3
    5946:	f108 0801 	add.w	r8, r8, #1
    594a:	901b      	str	r0, [sp, #108]	; 0x6c
    594c:	e7c3      	b.n	58d6 <_strtod_l+0x146>
    594e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5950:	191a      	adds	r2, r3, r4
    5952:	921b      	str	r2, [sp, #108]	; 0x6c
    5954:	5d1b      	ldrb	r3, [r3, r4]
    5956:	f1b8 0f00 	cmp.w	r8, #0
    595a:	d036      	beq.n	59ca <_strtod_l+0x23a>
    595c:	9005      	str	r0, [sp, #20]
    595e:	4644      	mov	r4, r8
    5960:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    5964:	2a09      	cmp	r2, #9
    5966:	d912      	bls.n	598e <_strtod_l+0x1fe>
    5968:	2201      	movs	r2, #1
    596a:	e7c5      	b.n	58f8 <_strtod_l+0x168>
    596c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    596e:	1c5a      	adds	r2, r3, #1
    5970:	921b      	str	r2, [sp, #108]	; 0x6c
    5972:	785b      	ldrb	r3, [r3, #1]
    5974:	3001      	adds	r0, #1
    5976:	2b30      	cmp	r3, #48	; 0x30
    5978:	d0f8      	beq.n	596c <_strtod_l+0x1dc>
    597a:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
    597e:	2a08      	cmp	r2, #8
    5980:	f200 84c3 	bhi.w	630a <_strtod_l+0xb7a>
    5984:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    5986:	9005      	str	r0, [sp, #20]
    5988:	2000      	movs	r0, #0
    598a:	9209      	str	r2, [sp, #36]	; 0x24
    598c:	4604      	mov	r4, r0
    598e:	3b30      	subs	r3, #48	; 0x30
    5990:	f100 0201 	add.w	r2, r0, #1
    5994:	d013      	beq.n	59be <_strtod_l+0x22e>
    5996:	9905      	ldr	r1, [sp, #20]
    5998:	4411      	add	r1, r2
    599a:	9105      	str	r1, [sp, #20]
    599c:	4622      	mov	r2, r4
    599e:	1905      	adds	r5, r0, r4
    59a0:	210a      	movs	r1, #10
    59a2:	42aa      	cmp	r2, r5
    59a4:	d113      	bne.n	59ce <_strtod_l+0x23e>
    59a6:	1822      	adds	r2, r4, r0
    59a8:	2a08      	cmp	r2, #8
    59aa:	f104 0401 	add.w	r4, r4, #1
    59ae:	4404      	add	r4, r0
    59b0:	dc1a      	bgt.n	59e8 <_strtod_l+0x258>
    59b2:	9907      	ldr	r1, [sp, #28]
    59b4:	220a      	movs	r2, #10
    59b6:	fb02 3301 	mla	r3, r2, r1, r3
    59ba:	9307      	str	r3, [sp, #28]
    59bc:	2200      	movs	r2, #0
    59be:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    59c0:	1c59      	adds	r1, r3, #1
    59c2:	911b      	str	r1, [sp, #108]	; 0x6c
    59c4:	785b      	ldrb	r3, [r3, #1]
    59c6:	4610      	mov	r0, r2
    59c8:	e7ca      	b.n	5960 <_strtod_l+0x1d0>
    59ca:	4640      	mov	r0, r8
    59cc:	e7d3      	b.n	5976 <_strtod_l+0x1e6>
    59ce:	2a08      	cmp	r2, #8
    59d0:	dc04      	bgt.n	59dc <_strtod_l+0x24c>
    59d2:	9f07      	ldr	r7, [sp, #28]
    59d4:	434f      	muls	r7, r1
    59d6:	9707      	str	r7, [sp, #28]
    59d8:	3201      	adds	r2, #1
    59da:	e7e2      	b.n	59a2 <_strtod_l+0x212>
    59dc:	1c57      	adds	r7, r2, #1
    59de:	2f10      	cmp	r7, #16
    59e0:	bfd8      	it	le
    59e2:	fb01 f909 	mulle.w	r9, r1, r9
    59e6:	e7f7      	b.n	59d8 <_strtod_l+0x248>
    59e8:	2c10      	cmp	r4, #16
    59ea:	bfdc      	itt	le
    59ec:	220a      	movle	r2, #10
    59ee:	fb02 3909 	mlale	r9, r2, r9, r3
    59f2:	e7e3      	b.n	59bc <_strtod_l+0x22c>
    59f4:	2300      	movs	r3, #0
    59f6:	9305      	str	r3, [sp, #20]
    59f8:	2201      	movs	r2, #1
    59fa:	e782      	b.n	5902 <_strtod_l+0x172>
    59fc:	2700      	movs	r7, #0
    59fe:	1cb3      	adds	r3, r6, #2
    5a00:	931b      	str	r3, [sp, #108]	; 0x6c
    5a02:	78b3      	ldrb	r3, [r6, #2]
    5a04:	e78a      	b.n	591c <_strtod_l+0x18c>
    5a06:	2701      	movs	r7, #1
    5a08:	e7f9      	b.n	59fe <_strtod_l+0x26e>
    5a0a:	bf00      	nop
    5a0c:	0000b398 	.word	0x0000b398
    5a10:	0000b2d8 	.word	0x0000b2d8
    5a14:	7ff00000 	.word	0x7ff00000
    5a18:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5a1a:	1c59      	adds	r1, r3, #1
    5a1c:	911b      	str	r1, [sp, #108]	; 0x6c
    5a1e:	785b      	ldrb	r3, [r3, #1]
    5a20:	2b30      	cmp	r3, #48	; 0x30
    5a22:	d0f9      	beq.n	5a18 <_strtod_l+0x288>
    5a24:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
    5a28:	2908      	cmp	r1, #8
    5a2a:	f63f af7c 	bhi.w	5926 <_strtod_l+0x196>
    5a2e:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
    5a32:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5a34:	9308      	str	r3, [sp, #32]
    5a36:	f04f 0e0a 	mov.w	lr, #10
    5a3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5a3c:	1c59      	adds	r1, r3, #1
    5a3e:	911b      	str	r1, [sp, #108]	; 0x6c
    5a40:	785b      	ldrb	r3, [r3, #1]
    5a42:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
    5a46:	2d09      	cmp	r5, #9
    5a48:	d92e      	bls.n	5aa8 <_strtod_l+0x318>
    5a4a:	9d08      	ldr	r5, [sp, #32]
    5a4c:	1b49      	subs	r1, r1, r5
    5a4e:	2908      	cmp	r1, #8
    5a50:	f644 651f 	movw	r5, #19999	; 0x4e1f
    5a54:	dc02      	bgt.n	5a5c <_strtod_l+0x2cc>
    5a56:	4565      	cmp	r5, ip
    5a58:	bfa8      	it	ge
    5a5a:	4665      	movge	r5, ip
    5a5c:	b107      	cbz	r7, 5a60 <_strtod_l+0x2d0>
    5a5e:	426d      	negs	r5, r5
    5a60:	2c00      	cmp	r4, #0
    5a62:	d14b      	bne.n	5afc <_strtod_l+0x36c>
    5a64:	9906      	ldr	r1, [sp, #24]
    5a66:	4301      	orrs	r1, r0
    5a68:	f47f aed0 	bne.w	580c <_strtod_l+0x7c>
    5a6c:	2a00      	cmp	r2, #0
    5a6e:	f47f aeeb 	bne.w	5848 <_strtod_l+0xb8>
    5a72:	2b4e      	cmp	r3, #78	; 0x4e
    5a74:	d022      	beq.n	5abc <_strtod_l+0x32c>
    5a76:	dc1c      	bgt.n	5ab2 <_strtod_l+0x322>
    5a78:	2b49      	cmp	r3, #73	; 0x49
    5a7a:	f47f aee5 	bne.w	5848 <_strtod_l+0xb8>
    5a7e:	499a      	ldr	r1, [pc, #616]	; (5ce8 <_strtod_l+0x558>)
    5a80:	a81b      	add	r0, sp, #108	; 0x6c
    5a82:	f002 f8b1 	bl	7be8 <__match>
    5a86:	2800      	cmp	r0, #0
    5a88:	f43f aede 	beq.w	5848 <_strtod_l+0xb8>
    5a8c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5a8e:	4997      	ldr	r1, [pc, #604]	; (5cec <_strtod_l+0x55c>)
    5a90:	3b01      	subs	r3, #1
    5a92:	a81b      	add	r0, sp, #108	; 0x6c
    5a94:	931b      	str	r3, [sp, #108]	; 0x6c
    5a96:	f002 f8a7 	bl	7be8 <__match>
    5a9a:	b910      	cbnz	r0, 5aa2 <_strtod_l+0x312>
    5a9c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5a9e:	3301      	adds	r3, #1
    5aa0:	931b      	str	r3, [sp, #108]	; 0x6c
    5aa2:	f8df b260 	ldr.w	fp, [pc, #608]	; 5d04 <_strtod_l+0x574>
    5aa6:	e6b1      	b.n	580c <_strtod_l+0x7c>
    5aa8:	fb0e 3c0c 	mla	ip, lr, ip, r3
    5aac:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    5ab0:	e7c3      	b.n	5a3a <_strtod_l+0x2aa>
    5ab2:	2b69      	cmp	r3, #105	; 0x69
    5ab4:	d0e3      	beq.n	5a7e <_strtod_l+0x2ee>
    5ab6:	2b6e      	cmp	r3, #110	; 0x6e
    5ab8:	f47f aec6 	bne.w	5848 <_strtod_l+0xb8>
    5abc:	498c      	ldr	r1, [pc, #560]	; (5cf0 <_strtod_l+0x560>)
    5abe:	a81b      	add	r0, sp, #108	; 0x6c
    5ac0:	f002 f892 	bl	7be8 <__match>
    5ac4:	2800      	cmp	r0, #0
    5ac6:	f43f aebf 	beq.w	5848 <_strtod_l+0xb8>
    5aca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    5acc:	781b      	ldrb	r3, [r3, #0]
    5ace:	2b28      	cmp	r3, #40	; 0x28
    5ad0:	d10e      	bne.n	5af0 <_strtod_l+0x360>
    5ad2:	aa1e      	add	r2, sp, #120	; 0x78
    5ad4:	4987      	ldr	r1, [pc, #540]	; (5cf4 <_strtod_l+0x564>)
    5ad6:	a81b      	add	r0, sp, #108	; 0x6c
    5ad8:	f002 f89a 	bl	7c10 <__hexnan>
    5adc:	2805      	cmp	r0, #5
    5ade:	d107      	bne.n	5af0 <_strtod_l+0x360>
    5ae0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    5ae2:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
    5ae6:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
    5aea:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
    5aee:	e68d      	b.n	580c <_strtod_l+0x7c>
    5af0:	4881      	ldr	r0, [pc, #516]	; (5cf8 <_strtod_l+0x568>)
    5af2:	f003 fb1d 	bl	9130 <nan>
    5af6:	ec5b ab10 	vmov	sl, fp, d0
    5afa:	e687      	b.n	580c <_strtod_l+0x7c>
    5afc:	9b05      	ldr	r3, [sp, #20]
    5afe:	9807      	ldr	r0, [sp, #28]
    5b00:	1aeb      	subs	r3, r5, r3
    5b02:	f1b8 0f00 	cmp.w	r8, #0
    5b06:	bf08      	it	eq
    5b08:	46a0      	moveq	r8, r4
    5b0a:	2c10      	cmp	r4, #16
    5b0c:	9308      	str	r3, [sp, #32]
    5b0e:	4626      	mov	r6, r4
    5b10:	bfa8      	it	ge
    5b12:	2610      	movge	r6, #16
    5b14:	f003 fe94 	bl	9840 <__aeabi_ui2d>
    5b18:	2c09      	cmp	r4, #9
    5b1a:	4682      	mov	sl, r0
    5b1c:	468b      	mov	fp, r1
    5b1e:	dd13      	ble.n	5b48 <_strtod_l+0x3b8>
    5b20:	4b76      	ldr	r3, [pc, #472]	; (5cfc <_strtod_l+0x56c>)
    5b22:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
    5b26:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    5b2a:	f003 ff03 	bl	9934 <__aeabi_dmul>
    5b2e:	4682      	mov	sl, r0
    5b30:	4648      	mov	r0, r9
    5b32:	468b      	mov	fp, r1
    5b34:	f003 fe84 	bl	9840 <__aeabi_ui2d>
    5b38:	4602      	mov	r2, r0
    5b3a:	460b      	mov	r3, r1
    5b3c:	4650      	mov	r0, sl
    5b3e:	4659      	mov	r1, fp
    5b40:	f003 fd42 	bl	95c8 <__adddf3>
    5b44:	4682      	mov	sl, r0
    5b46:	468b      	mov	fp, r1
    5b48:	2c0f      	cmp	r4, #15
    5b4a:	dc38      	bgt.n	5bbe <_strtod_l+0x42e>
    5b4c:	9b08      	ldr	r3, [sp, #32]
    5b4e:	2b00      	cmp	r3, #0
    5b50:	f43f ae5c 	beq.w	580c <_strtod_l+0x7c>
    5b54:	dd24      	ble.n	5ba0 <_strtod_l+0x410>
    5b56:	2b16      	cmp	r3, #22
    5b58:	dc0b      	bgt.n	5b72 <_strtod_l+0x3e2>
    5b5a:	4c68      	ldr	r4, [pc, #416]	; (5cfc <_strtod_l+0x56c>)
    5b5c:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    5b60:	e9d4 0100 	ldrd	r0, r1, [r4]
    5b64:	4652      	mov	r2, sl
    5b66:	465b      	mov	r3, fp
    5b68:	f003 fee4 	bl	9934 <__aeabi_dmul>
    5b6c:	4682      	mov	sl, r0
    5b6e:	468b      	mov	fp, r1
    5b70:	e64c      	b.n	580c <_strtod_l+0x7c>
    5b72:	9a08      	ldr	r2, [sp, #32]
    5b74:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
    5b78:	4293      	cmp	r3, r2
    5b7a:	db20      	blt.n	5bbe <_strtod_l+0x42e>
    5b7c:	4d5f      	ldr	r5, [pc, #380]	; (5cfc <_strtod_l+0x56c>)
    5b7e:	f1c4 040f 	rsb	r4, r4, #15
    5b82:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
    5b86:	4652      	mov	r2, sl
    5b88:	465b      	mov	r3, fp
    5b8a:	e9d1 0100 	ldrd	r0, r1, [r1]
    5b8e:	f003 fed1 	bl	9934 <__aeabi_dmul>
    5b92:	9b08      	ldr	r3, [sp, #32]
    5b94:	1b1c      	subs	r4, r3, r4
    5b96:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
    5b9a:	e9d5 2300 	ldrd	r2, r3, [r5]
    5b9e:	e7e3      	b.n	5b68 <_strtod_l+0x3d8>
    5ba0:	9b08      	ldr	r3, [sp, #32]
    5ba2:	3316      	adds	r3, #22
    5ba4:	db0b      	blt.n	5bbe <_strtod_l+0x42e>
    5ba6:	9b05      	ldr	r3, [sp, #20]
    5ba8:	4a54      	ldr	r2, [pc, #336]	; (5cfc <_strtod_l+0x56c>)
    5baa:	1b5d      	subs	r5, r3, r5
    5bac:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
    5bb0:	e9d5 2300 	ldrd	r2, r3, [r5]
    5bb4:	4650      	mov	r0, sl
    5bb6:	4659      	mov	r1, fp
    5bb8:	f003 ffe6 	bl	9b88 <__aeabi_ddiv>
    5bbc:	e7d6      	b.n	5b6c <_strtod_l+0x3dc>
    5bbe:	9b08      	ldr	r3, [sp, #32]
    5bc0:	1ba6      	subs	r6, r4, r6
    5bc2:	441e      	add	r6, r3
    5bc4:	2e00      	cmp	r6, #0
    5bc6:	dd6e      	ble.n	5ca6 <_strtod_l+0x516>
    5bc8:	f016 030f 	ands.w	r3, r6, #15
    5bcc:	d00a      	beq.n	5be4 <_strtod_l+0x454>
    5bce:	494b      	ldr	r1, [pc, #300]	; (5cfc <_strtod_l+0x56c>)
    5bd0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
    5bd4:	4652      	mov	r2, sl
    5bd6:	465b      	mov	r3, fp
    5bd8:	e9d1 0100 	ldrd	r0, r1, [r1]
    5bdc:	f003 feaa 	bl	9934 <__aeabi_dmul>
    5be0:	4682      	mov	sl, r0
    5be2:	468b      	mov	fp, r1
    5be4:	f036 060f 	bics.w	r6, r6, #15
    5be8:	d04e      	beq.n	5c88 <_strtod_l+0x4f8>
    5bea:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
    5bee:	dd23      	ble.n	5c38 <_strtod_l+0x4a8>
    5bf0:	2400      	movs	r4, #0
    5bf2:	9405      	str	r4, [sp, #20]
    5bf4:	9409      	str	r4, [sp, #36]	; 0x24
    5bf6:	9407      	str	r4, [sp, #28]
    5bf8:	9a04      	ldr	r2, [sp, #16]
    5bfa:	f8df b108 	ldr.w	fp, [pc, #264]	; 5d04 <_strtod_l+0x574>
    5bfe:	2322      	movs	r3, #34	; 0x22
    5c00:	6013      	str	r3, [r2, #0]
    5c02:	f04f 0a00 	mov.w	sl, #0
    5c06:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5c08:	2b00      	cmp	r3, #0
    5c0a:	f43f adff 	beq.w	580c <_strtod_l+0x7c>
    5c0e:	991c      	ldr	r1, [sp, #112]	; 0x70
    5c10:	9804      	ldr	r0, [sp, #16]
    5c12:	f002 f9dd 	bl	7fd0 <_Bfree>
    5c16:	9907      	ldr	r1, [sp, #28]
    5c18:	9804      	ldr	r0, [sp, #16]
    5c1a:	f002 f9d9 	bl	7fd0 <_Bfree>
    5c1e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    5c22:	f002 f9d5 	bl	7fd0 <_Bfree>
    5c26:	9909      	ldr	r1, [sp, #36]	; 0x24
    5c28:	9804      	ldr	r0, [sp, #16]
    5c2a:	f002 f9d1 	bl	7fd0 <_Bfree>
    5c2e:	4621      	mov	r1, r4
    5c30:	9804      	ldr	r0, [sp, #16]
    5c32:	f002 f9cd 	bl	7fd0 <_Bfree>
    5c36:	e5e9      	b.n	580c <_strtod_l+0x7c>
    5c38:	2300      	movs	r3, #0
    5c3a:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 5d00 <_strtod_l+0x570>
    5c3e:	1136      	asrs	r6, r6, #4
    5c40:	4650      	mov	r0, sl
    5c42:	4659      	mov	r1, fp
    5c44:	461f      	mov	r7, r3
    5c46:	2e01      	cmp	r6, #1
    5c48:	dc21      	bgt.n	5c8e <_strtod_l+0x4fe>
    5c4a:	b10b      	cbz	r3, 5c50 <_strtod_l+0x4c0>
    5c4c:	4682      	mov	sl, r0
    5c4e:	468b      	mov	fp, r1
    5c50:	4b2b      	ldr	r3, [pc, #172]	; (5d00 <_strtod_l+0x570>)
    5c52:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
    5c56:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
    5c5a:	4652      	mov	r2, sl
    5c5c:	465b      	mov	r3, fp
    5c5e:	e9d7 0100 	ldrd	r0, r1, [r7]
    5c62:	f003 fe67 	bl	9934 <__aeabi_dmul>
    5c66:	4b27      	ldr	r3, [pc, #156]	; (5d04 <_strtod_l+0x574>)
    5c68:	460a      	mov	r2, r1
    5c6a:	400b      	ands	r3, r1
    5c6c:	4926      	ldr	r1, [pc, #152]	; (5d08 <_strtod_l+0x578>)
    5c6e:	428b      	cmp	r3, r1
    5c70:	4682      	mov	sl, r0
    5c72:	d8bd      	bhi.n	5bf0 <_strtod_l+0x460>
    5c74:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
    5c78:	428b      	cmp	r3, r1
    5c7a:	bf86      	itte	hi
    5c7c:	f8df b08c 	ldrhi.w	fp, [pc, #140]	; 5d0c <_strtod_l+0x57c>
    5c80:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
    5c84:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
    5c88:	2300      	movs	r3, #0
    5c8a:	9306      	str	r3, [sp, #24]
    5c8c:	e079      	b.n	5d82 <_strtod_l+0x5f2>
    5c8e:	07f2      	lsls	r2, r6, #31
    5c90:	d506      	bpl.n	5ca0 <_strtod_l+0x510>
    5c92:	eb09 03c7 	add.w	r3, r9, r7, lsl #3
    5c96:	e9d3 2300 	ldrd	r2, r3, [r3]
    5c9a:	f003 fe4b 	bl	9934 <__aeabi_dmul>
    5c9e:	2301      	movs	r3, #1
    5ca0:	3701      	adds	r7, #1
    5ca2:	1076      	asrs	r6, r6, #1
    5ca4:	e7cf      	b.n	5c46 <_strtod_l+0x4b6>
    5ca6:	d0ef      	beq.n	5c88 <_strtod_l+0x4f8>
    5ca8:	4276      	negs	r6, r6
    5caa:	f016 020f 	ands.w	r2, r6, #15
    5cae:	d00a      	beq.n	5cc6 <_strtod_l+0x536>
    5cb0:	4b12      	ldr	r3, [pc, #72]	; (5cfc <_strtod_l+0x56c>)
    5cb2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    5cb6:	4650      	mov	r0, sl
    5cb8:	4659      	mov	r1, fp
    5cba:	e9d3 2300 	ldrd	r2, r3, [r3]
    5cbe:	f003 ff63 	bl	9b88 <__aeabi_ddiv>
    5cc2:	4682      	mov	sl, r0
    5cc4:	468b      	mov	fp, r1
    5cc6:	1136      	asrs	r6, r6, #4
    5cc8:	d0de      	beq.n	5c88 <_strtod_l+0x4f8>
    5cca:	2e1f      	cmp	r6, #31
    5ccc:	dd20      	ble.n	5d10 <_strtod_l+0x580>
    5cce:	2400      	movs	r4, #0
    5cd0:	9405      	str	r4, [sp, #20]
    5cd2:	9409      	str	r4, [sp, #36]	; 0x24
    5cd4:	9407      	str	r4, [sp, #28]
    5cd6:	9a04      	ldr	r2, [sp, #16]
    5cd8:	2322      	movs	r3, #34	; 0x22
    5cda:	f04f 0a00 	mov.w	sl, #0
    5cde:	f04f 0b00 	mov.w	fp, #0
    5ce2:	6013      	str	r3, [r2, #0]
    5ce4:	e78f      	b.n	5c06 <_strtod_l+0x476>
    5ce6:	bf00      	nop
    5ce8:	0000b2a6 	.word	0x0000b2a6
    5cec:	0000b32b 	.word	0x0000b32b
    5cf0:	0000b2ae 	.word	0x0000b2ae
    5cf4:	0000b2ec 	.word	0x0000b2ec
    5cf8:	0000a47f 	.word	0x0000a47f
    5cfc:	0000b3d8 	.word	0x0000b3d8
    5d00:	0000b3b0 	.word	0x0000b3b0
    5d04:	7ff00000 	.word	0x7ff00000
    5d08:	7ca00000 	.word	0x7ca00000
    5d0c:	7fefffff 	.word	0x7fefffff
    5d10:	f016 0310 	ands.w	r3, r6, #16
    5d14:	bf18      	it	ne
    5d16:	236a      	movne	r3, #106	; 0x6a
    5d18:	4fae      	ldr	r7, [pc, #696]	; (5fd4 <_strtod_l+0x844>)
    5d1a:	9306      	str	r3, [sp, #24]
    5d1c:	4650      	mov	r0, sl
    5d1e:	4659      	mov	r1, fp
    5d20:	2300      	movs	r3, #0
    5d22:	07f2      	lsls	r2, r6, #31
    5d24:	d504      	bpl.n	5d30 <_strtod_l+0x5a0>
    5d26:	e9d7 2300 	ldrd	r2, r3, [r7]
    5d2a:	f003 fe03 	bl	9934 <__aeabi_dmul>
    5d2e:	2301      	movs	r3, #1
    5d30:	1076      	asrs	r6, r6, #1
    5d32:	f107 0708 	add.w	r7, r7, #8
    5d36:	d1f4      	bne.n	5d22 <_strtod_l+0x592>
    5d38:	b10b      	cbz	r3, 5d3e <_strtod_l+0x5ae>
    5d3a:	4682      	mov	sl, r0
    5d3c:	468b      	mov	fp, r1
    5d3e:	9b06      	ldr	r3, [sp, #24]
    5d40:	b1bb      	cbz	r3, 5d72 <_strtod_l+0x5e2>
    5d42:	f3cb 530a 	ubfx	r3, fp, #20, #11
    5d46:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    5d4a:	2b00      	cmp	r3, #0
    5d4c:	4659      	mov	r1, fp
    5d4e:	dd10      	ble.n	5d72 <_strtod_l+0x5e2>
    5d50:	2b1f      	cmp	r3, #31
    5d52:	f340 8129 	ble.w	5fa8 <_strtod_l+0x818>
    5d56:	2b34      	cmp	r3, #52	; 0x34
    5d58:	bfde      	ittt	le
    5d5a:	3b20      	suble	r3, #32
    5d5c:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
    5d60:	fa02 f303 	lslle.w	r3, r2, r3
    5d64:	f04f 0a00 	mov.w	sl, #0
    5d68:	bfcc      	ite	gt
    5d6a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
    5d6e:	ea03 0b01 	andle.w	fp, r3, r1
    5d72:	2200      	movs	r2, #0
    5d74:	2300      	movs	r3, #0
    5d76:	4650      	mov	r0, sl
    5d78:	4659      	mov	r1, fp
    5d7a:	f004 f843 	bl	9e04 <__aeabi_dcmpeq>
    5d7e:	2800      	cmp	r0, #0
    5d80:	d1a5      	bne.n	5cce <_strtod_l+0x53e>
    5d82:	9b07      	ldr	r3, [sp, #28]
    5d84:	9300      	str	r3, [sp, #0]
    5d86:	4642      	mov	r2, r8
    5d88:	4623      	mov	r3, r4
    5d8a:	9909      	ldr	r1, [sp, #36]	; 0x24
    5d8c:	9804      	ldr	r0, [sp, #16]
    5d8e:	f002 f971 	bl	8074 <__s2b>
    5d92:	9009      	str	r0, [sp, #36]	; 0x24
    5d94:	2800      	cmp	r0, #0
    5d96:	f43f af2b 	beq.w	5bf0 <_strtod_l+0x460>
    5d9a:	9b05      	ldr	r3, [sp, #20]
    5d9c:	1b5d      	subs	r5, r3, r5
    5d9e:	9b08      	ldr	r3, [sp, #32]
    5da0:	2b00      	cmp	r3, #0
    5da2:	bfb4      	ite	lt
    5da4:	462b      	movlt	r3, r5
    5da6:	2300      	movge	r3, #0
    5da8:	930e      	str	r3, [sp, #56]	; 0x38
    5daa:	9b08      	ldr	r3, [sp, #32]
    5dac:	2400      	movs	r4, #0
    5dae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    5db2:	9316      	str	r3, [sp, #88]	; 0x58
    5db4:	9405      	str	r4, [sp, #20]
    5db6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5db8:	9804      	ldr	r0, [sp, #16]
    5dba:	6859      	ldr	r1, [r3, #4]
    5dbc:	f002 f8d4 	bl	7f68 <_Balloc>
    5dc0:	9007      	str	r0, [sp, #28]
    5dc2:	2800      	cmp	r0, #0
    5dc4:	f43f af18 	beq.w	5bf8 <_strtod_l+0x468>
    5dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5dca:	691a      	ldr	r2, [r3, #16]
    5dcc:	3202      	adds	r2, #2
    5dce:	f103 010c 	add.w	r1, r3, #12
    5dd2:	0092      	lsls	r2, r2, #2
    5dd4:	300c      	adds	r0, #12
    5dd6:	f7fe fa47 	bl	4268 <memcpy>
    5dda:	aa1e      	add	r2, sp, #120	; 0x78
    5ddc:	a91d      	add	r1, sp, #116	; 0x74
    5dde:	ec4b ab10 	vmov	d0, sl, fp
    5de2:	9804      	ldr	r0, [sp, #16]
    5de4:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
    5de8:	f002 fbfa 	bl	85e0 <__d2b>
    5dec:	901c      	str	r0, [sp, #112]	; 0x70
    5dee:	2800      	cmp	r0, #0
    5df0:	f43f af02 	beq.w	5bf8 <_strtod_l+0x468>
    5df4:	2101      	movs	r1, #1
    5df6:	9804      	ldr	r0, [sp, #16]
    5df8:	f002 f9ca 	bl	8190 <__i2b>
    5dfc:	9005      	str	r0, [sp, #20]
    5dfe:	4603      	mov	r3, r0
    5e00:	2800      	cmp	r0, #0
    5e02:	f43f aef9 	beq.w	5bf8 <_strtod_l+0x468>
    5e06:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    5e08:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    5e0a:	2e00      	cmp	r6, #0
    5e0c:	bfab      	itete	ge
    5e0e:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
    5e10:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
    5e12:	9d16      	ldrge	r5, [sp, #88]	; 0x58
    5e14:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
    5e16:	bfac      	ite	ge
    5e18:	18f7      	addge	r7, r6, r3
    5e1a:	1b9d      	sublt	r5, r3, r6
    5e1c:	9b06      	ldr	r3, [sp, #24]
    5e1e:	1af6      	subs	r6, r6, r3
    5e20:	4416      	add	r6, r2
    5e22:	4b6d      	ldr	r3, [pc, #436]	; (5fd8 <_strtod_l+0x848>)
    5e24:	3e01      	subs	r6, #1
    5e26:	429e      	cmp	r6, r3
    5e28:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    5e2c:	f280 80c3 	bge.w	5fb6 <_strtod_l+0x826>
    5e30:	1b9b      	subs	r3, r3, r6
    5e32:	2b1f      	cmp	r3, #31
    5e34:	bfc2      	ittt	gt
    5e36:	f1c6 467f 	rsbgt	r6, r6, #4278190080	; 0xff000000
    5e3a:	f506 067f 	addgt.w	r6, r6, #16711680	; 0xff0000
    5e3e:	f506 467b 	addgt.w	r6, r6, #64256	; 0xfb00
    5e42:	f04f 0801 	mov.w	r8, #1
    5e46:	bfc8      	it	gt
    5e48:	36e2      	addgt	r6, #226	; 0xe2
    5e4a:	eba2 0203 	sub.w	r2, r2, r3
    5e4e:	bfda      	itte	le
    5e50:	fa08 f803 	lslle.w	r8, r8, r3
    5e54:	2600      	movle	r6, #0
    5e56:	fa08 f606 	lslgt.w	r6, r8, r6
    5e5a:	eb07 0902 	add.w	r9, r7, r2
    5e5e:	9b06      	ldr	r3, [sp, #24]
    5e60:	454f      	cmp	r7, r9
    5e62:	4415      	add	r5, r2
    5e64:	441d      	add	r5, r3
    5e66:	463b      	mov	r3, r7
    5e68:	bfa8      	it	ge
    5e6a:	464b      	movge	r3, r9
    5e6c:	42ab      	cmp	r3, r5
    5e6e:	bfa8      	it	ge
    5e70:	462b      	movge	r3, r5
    5e72:	2b00      	cmp	r3, #0
    5e74:	bfc2      	ittt	gt
    5e76:	eba9 0903 	subgt.w	r9, r9, r3
    5e7a:	1aed      	subgt	r5, r5, r3
    5e7c:	1aff      	subgt	r7, r7, r3
    5e7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    5e80:	2b00      	cmp	r3, #0
    5e82:	dd17      	ble.n	5eb4 <_strtod_l+0x724>
    5e84:	461a      	mov	r2, r3
    5e86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    5e8a:	f002 fa1b 	bl	82c4 <__pow5mult>
    5e8e:	9005      	str	r0, [sp, #20]
    5e90:	2800      	cmp	r0, #0
    5e92:	f43f aeb1 	beq.w	5bf8 <_strtod_l+0x468>
    5e96:	4601      	mov	r1, r0
    5e98:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    5e9a:	9804      	ldr	r0, [sp, #16]
    5e9c:	f002 f981 	bl	81a2 <__multiply>
    5ea0:	900d      	str	r0, [sp, #52]	; 0x34
    5ea2:	2800      	cmp	r0, #0
    5ea4:	f43f aea8 	beq.w	5bf8 <_strtod_l+0x468>
    5ea8:	991c      	ldr	r1, [sp, #112]	; 0x70
    5eaa:	9804      	ldr	r0, [sp, #16]
    5eac:	f002 f890 	bl	7fd0 <_Bfree>
    5eb0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5eb2:	931c      	str	r3, [sp, #112]	; 0x70
    5eb4:	f1b9 0f00 	cmp.w	r9, #0
    5eb8:	f300 8081 	bgt.w	5fbe <_strtod_l+0x82e>
    5ebc:	9b08      	ldr	r3, [sp, #32]
    5ebe:	2b00      	cmp	r3, #0
    5ec0:	dd08      	ble.n	5ed4 <_strtod_l+0x744>
    5ec2:	9a16      	ldr	r2, [sp, #88]	; 0x58
    5ec4:	9907      	ldr	r1, [sp, #28]
    5ec6:	9804      	ldr	r0, [sp, #16]
    5ec8:	f002 f9fc 	bl	82c4 <__pow5mult>
    5ecc:	9007      	str	r0, [sp, #28]
    5ece:	2800      	cmp	r0, #0
    5ed0:	f43f ae92 	beq.w	5bf8 <_strtod_l+0x468>
    5ed4:	2d00      	cmp	r5, #0
    5ed6:	dd08      	ble.n	5eea <_strtod_l+0x75a>
    5ed8:	462a      	mov	r2, r5
    5eda:	9907      	ldr	r1, [sp, #28]
    5edc:	9804      	ldr	r0, [sp, #16]
    5ede:	f002 fa3f 	bl	8360 <__lshift>
    5ee2:	9007      	str	r0, [sp, #28]
    5ee4:	2800      	cmp	r0, #0
    5ee6:	f43f ae87 	beq.w	5bf8 <_strtod_l+0x468>
    5eea:	2f00      	cmp	r7, #0
    5eec:	dd08      	ble.n	5f00 <_strtod_l+0x770>
    5eee:	463a      	mov	r2, r7
    5ef0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    5ef4:	f002 fa34 	bl	8360 <__lshift>
    5ef8:	9005      	str	r0, [sp, #20]
    5efa:	2800      	cmp	r0, #0
    5efc:	f43f ae7c 	beq.w	5bf8 <_strtod_l+0x468>
    5f00:	9a07      	ldr	r2, [sp, #28]
    5f02:	991c      	ldr	r1, [sp, #112]	; 0x70
    5f04:	9804      	ldr	r0, [sp, #16]
    5f06:	f002 fa98 	bl	843a <__mdiff>
    5f0a:	4604      	mov	r4, r0
    5f0c:	2800      	cmp	r0, #0
    5f0e:	f43f ae73 	beq.w	5bf8 <_strtod_l+0x468>
    5f12:	68c3      	ldr	r3, [r0, #12]
    5f14:	930d      	str	r3, [sp, #52]	; 0x34
    5f16:	2300      	movs	r3, #0
    5f18:	60c3      	str	r3, [r0, #12]
    5f1a:	9905      	ldr	r1, [sp, #20]
    5f1c:	f002 fa73 	bl	8406 <__mcmp>
    5f20:	2800      	cmp	r0, #0
    5f22:	da5f      	bge.n	5fe4 <_strtod_l+0x854>
    5f24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    5f26:	ea53 030a 	orrs.w	r3, r3, sl
    5f2a:	f040 8081 	bne.w	6030 <_strtod_l+0x8a0>
    5f2e:	f3cb 0313 	ubfx	r3, fp, #0, #20
    5f32:	2b00      	cmp	r3, #0
    5f34:	d17c      	bne.n	6030 <_strtod_l+0x8a0>
    5f36:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    5f3a:	0d1b      	lsrs	r3, r3, #20
    5f3c:	051b      	lsls	r3, r3, #20
    5f3e:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    5f42:	d975      	bls.n	6030 <_strtod_l+0x8a0>
    5f44:	6963      	ldr	r3, [r4, #20]
    5f46:	b913      	cbnz	r3, 5f4e <_strtod_l+0x7be>
    5f48:	6923      	ldr	r3, [r4, #16]
    5f4a:	2b01      	cmp	r3, #1
    5f4c:	dd70      	ble.n	6030 <_strtod_l+0x8a0>
    5f4e:	4621      	mov	r1, r4
    5f50:	2201      	movs	r2, #1
    5f52:	9804      	ldr	r0, [sp, #16]
    5f54:	f002 fa04 	bl	8360 <__lshift>
    5f58:	9905      	ldr	r1, [sp, #20]
    5f5a:	4604      	mov	r4, r0
    5f5c:	f002 fa53 	bl	8406 <__mcmp>
    5f60:	2800      	cmp	r0, #0
    5f62:	dd65      	ble.n	6030 <_strtod_l+0x8a0>
    5f64:	9906      	ldr	r1, [sp, #24]
    5f66:	4a1d      	ldr	r2, [pc, #116]	; (5fdc <_strtod_l+0x84c>)
    5f68:	465b      	mov	r3, fp
    5f6a:	2900      	cmp	r1, #0
    5f6c:	d07f      	beq.n	606e <_strtod_l+0x8de>
    5f6e:	ea02 010b 	and.w	r1, r2, fp
    5f72:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
    5f76:	dc7a      	bgt.n	606e <_strtod_l+0x8de>
    5f78:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
    5f7c:	f77f aeab 	ble.w	5cd6 <_strtod_l+0x546>
    5f80:	4a17      	ldr	r2, [pc, #92]	; (5fe0 <_strtod_l+0x850>)
    5f82:	2300      	movs	r3, #0
    5f84:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
    5f88:	4650      	mov	r0, sl
    5f8a:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    5f8e:	4659      	mov	r1, fp
    5f90:	f003 fcd0 	bl	9934 <__aeabi_dmul>
    5f94:	460b      	mov	r3, r1
    5f96:	4303      	orrs	r3, r0
    5f98:	bf04      	itt	eq
    5f9a:	9a04      	ldreq	r2, [sp, #16]
    5f9c:	2322      	moveq	r3, #34	; 0x22
    5f9e:	4682      	mov	sl, r0
    5fa0:	468b      	mov	fp, r1
    5fa2:	bf08      	it	eq
    5fa4:	6013      	streq	r3, [r2, #0]
    5fa6:	e632      	b.n	5c0e <_strtod_l+0x47e>
    5fa8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    5fac:	fa02 f303 	lsl.w	r3, r2, r3
    5fb0:	ea03 0a0a 	and.w	sl, r3, sl
    5fb4:	e6dd      	b.n	5d72 <_strtod_l+0x5e2>
    5fb6:	2600      	movs	r6, #0
    5fb8:	f04f 0801 	mov.w	r8, #1
    5fbc:	e74d      	b.n	5e5a <_strtod_l+0x6ca>
    5fbe:	464a      	mov	r2, r9
    5fc0:	991c      	ldr	r1, [sp, #112]	; 0x70
    5fc2:	9804      	ldr	r0, [sp, #16]
    5fc4:	f002 f9cc 	bl	8360 <__lshift>
    5fc8:	901c      	str	r0, [sp, #112]	; 0x70
    5fca:	2800      	cmp	r0, #0
    5fcc:	f47f af76 	bne.w	5ebc <_strtod_l+0x72c>
    5fd0:	e612      	b.n	5bf8 <_strtod_l+0x468>
    5fd2:	bf00      	nop
    5fd4:	0000b300 	.word	0x0000b300
    5fd8:	fffffc02 	.word	0xfffffc02
    5fdc:	7ff00000 	.word	0x7ff00000
    5fe0:	39500000 	.word	0x39500000
    5fe4:	465d      	mov	r5, fp
    5fe6:	d160      	bne.n	60aa <_strtod_l+0x91a>
    5fe8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    5fea:	f3cb 0313 	ubfx	r3, fp, #0, #20
    5fee:	b342      	cbz	r2, 6042 <_strtod_l+0x8b2>
    5ff0:	4ab7      	ldr	r2, [pc, #732]	; (62d0 <_strtod_l+0xb40>)
    5ff2:	4293      	cmp	r3, r2
    5ff4:	d128      	bne.n	6048 <_strtod_l+0x8b8>
    5ff6:	9b06      	ldr	r3, [sp, #24]
    5ff8:	4650      	mov	r0, sl
    5ffa:	b1eb      	cbz	r3, 6038 <_strtod_l+0x8a8>
    5ffc:	4ab5      	ldr	r2, [pc, #724]	; (62d4 <_strtod_l+0xb44>)
    5ffe:	402a      	ands	r2, r5
    6000:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    6004:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    6008:	d819      	bhi.n	603e <_strtod_l+0x8ae>
    600a:	0d12      	lsrs	r2, r2, #20
    600c:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
    6010:	fa01 f303 	lsl.w	r3, r1, r3
    6014:	4298      	cmp	r0, r3
    6016:	d117      	bne.n	6048 <_strtod_l+0x8b8>
    6018:	4baf      	ldr	r3, [pc, #700]	; (62d8 <_strtod_l+0xb48>)
    601a:	429d      	cmp	r5, r3
    601c:	d102      	bne.n	6024 <_strtod_l+0x894>
    601e:	3001      	adds	r0, #1
    6020:	f43f adea 	beq.w	5bf8 <_strtod_l+0x468>
    6024:	4bab      	ldr	r3, [pc, #684]	; (62d4 <_strtod_l+0xb44>)
    6026:	402b      	ands	r3, r5
    6028:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
    602c:	f04f 0a00 	mov.w	sl, #0
    6030:	9b06      	ldr	r3, [sp, #24]
    6032:	2b00      	cmp	r3, #0
    6034:	d1a4      	bne.n	5f80 <_strtod_l+0x7f0>
    6036:	e5ea      	b.n	5c0e <_strtod_l+0x47e>
    6038:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    603c:	e7ea      	b.n	6014 <_strtod_l+0x884>
    603e:	460b      	mov	r3, r1
    6040:	e7e8      	b.n	6014 <_strtod_l+0x884>
    6042:	ea53 030a 	orrs.w	r3, r3, sl
    6046:	d08d      	beq.n	5f64 <_strtod_l+0x7d4>
    6048:	b1de      	cbz	r6, 6082 <_strtod_l+0x8f2>
    604a:	422e      	tst	r6, r5
    604c:	d0f0      	beq.n	6030 <_strtod_l+0x8a0>
    604e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6050:	9a06      	ldr	r2, [sp, #24]
    6052:	4650      	mov	r0, sl
    6054:	4659      	mov	r1, fp
    6056:	b1bb      	cbz	r3, 6088 <_strtod_l+0x8f8>
    6058:	f7ff fb7e 	bl	5758 <sulp>
    605c:	4602      	mov	r2, r0
    605e:	460b      	mov	r3, r1
    6060:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    6064:	f003 fab0 	bl	95c8 <__adddf3>
    6068:	4682      	mov	sl, r0
    606a:	468b      	mov	fp, r1
    606c:	e7e0      	b.n	6030 <_strtod_l+0x8a0>
    606e:	4013      	ands	r3, r2
    6070:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    6074:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
    6078:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
    607c:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    6080:	e7d6      	b.n	6030 <_strtod_l+0x8a0>
    6082:	ea18 0f0a 	tst.w	r8, sl
    6086:	e7e1      	b.n	604c <_strtod_l+0x8bc>
    6088:	f7ff fb66 	bl	5758 <sulp>
    608c:	4602      	mov	r2, r0
    608e:	460b      	mov	r3, r1
    6090:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    6094:	f003 fa96 	bl	95c4 <__aeabi_dsub>
    6098:	2200      	movs	r2, #0
    609a:	2300      	movs	r3, #0
    609c:	4682      	mov	sl, r0
    609e:	468b      	mov	fp, r1
    60a0:	f003 feb0 	bl	9e04 <__aeabi_dcmpeq>
    60a4:	2800      	cmp	r0, #0
    60a6:	d0c3      	beq.n	6030 <_strtod_l+0x8a0>
    60a8:	e615      	b.n	5cd6 <_strtod_l+0x546>
    60aa:	9905      	ldr	r1, [sp, #20]
    60ac:	4620      	mov	r0, r4
    60ae:	f002 fae5 	bl	867c <__ratio>
    60b2:	ec57 6b10 	vmov	r6, r7, d0
    60b6:	2200      	movs	r2, #0
    60b8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    60bc:	ee10 0a10 	vmov	r0, s0
    60c0:	4639      	mov	r1, r7
    60c2:	f003 feb3 	bl	9e2c <__aeabi_dcmple>
    60c6:	2800      	cmp	r0, #0
    60c8:	d073      	beq.n	61b2 <_strtod_l+0xa22>
    60ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    60cc:	2b00      	cmp	r3, #0
    60ce:	d046      	beq.n	615e <_strtod_l+0x9ce>
    60d0:	f8df 9208 	ldr.w	r9, [pc, #520]	; 62dc <_strtod_l+0xb4c>
    60d4:	f04f 0800 	mov.w	r8, #0
    60d8:	4f80      	ldr	r7, [pc, #512]	; (62dc <_strtod_l+0xb4c>)
    60da:	2600      	movs	r6, #0
    60dc:	4b7d      	ldr	r3, [pc, #500]	; (62d4 <_strtod_l+0xb44>)
    60de:	402b      	ands	r3, r5
    60e0:	930f      	str	r3, [sp, #60]	; 0x3c
    60e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    60e4:	4b7e      	ldr	r3, [pc, #504]	; (62e0 <_strtod_l+0xb50>)
    60e6:	429a      	cmp	r2, r3
    60e8:	f040 80ab 	bne.w	6242 <_strtod_l+0xab2>
    60ec:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    60f0:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
    60f4:	ec4b ab10 	vmov	d0, sl, fp
    60f8:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    60fc:	f002 f9fa 	bl	84f4 <__ulp>
    6100:	4640      	mov	r0, r8
    6102:	ec53 2b10 	vmov	r2, r3, d0
    6106:	4649      	mov	r1, r9
    6108:	f003 fc14 	bl	9934 <__aeabi_dmul>
    610c:	4652      	mov	r2, sl
    610e:	465b      	mov	r3, fp
    6110:	f003 fa5a 	bl	95c8 <__adddf3>
    6114:	460b      	mov	r3, r1
    6116:	496f      	ldr	r1, [pc, #444]	; (62d4 <_strtod_l+0xb44>)
    6118:	4a72      	ldr	r2, [pc, #456]	; (62e4 <_strtod_l+0xb54>)
    611a:	4019      	ands	r1, r3
    611c:	4291      	cmp	r1, r2
    611e:	4682      	mov	sl, r0
    6120:	d95b      	bls.n	61da <_strtod_l+0xa4a>
    6122:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6124:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
    6128:	4293      	cmp	r3, r2
    612a:	d103      	bne.n	6134 <_strtod_l+0x9a4>
    612c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    612e:	3301      	adds	r3, #1
    6130:	f43f ad62 	beq.w	5bf8 <_strtod_l+0x468>
    6134:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 62d8 <_strtod_l+0xb48>
    6138:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    613c:	991c      	ldr	r1, [sp, #112]	; 0x70
    613e:	9804      	ldr	r0, [sp, #16]
    6140:	f001 ff46 	bl	7fd0 <_Bfree>
    6144:	9907      	ldr	r1, [sp, #28]
    6146:	9804      	ldr	r0, [sp, #16]
    6148:	f001 ff42 	bl	7fd0 <_Bfree>
    614c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6150:	f001 ff3e 	bl	7fd0 <_Bfree>
    6154:	4621      	mov	r1, r4
    6156:	9804      	ldr	r0, [sp, #16]
    6158:	f001 ff3a 	bl	7fd0 <_Bfree>
    615c:	e62b      	b.n	5db6 <_strtod_l+0x626>
    615e:	f1ba 0f00 	cmp.w	sl, #0
    6162:	d118      	bne.n	6196 <_strtod_l+0xa06>
    6164:	f3cb 0313 	ubfx	r3, fp, #0, #20
    6168:	b9db      	cbnz	r3, 61a2 <_strtod_l+0xa12>
    616a:	2200      	movs	r2, #0
    616c:	4b5b      	ldr	r3, [pc, #364]	; (62dc <_strtod_l+0xb4c>)
    616e:	4630      	mov	r0, r6
    6170:	4639      	mov	r1, r7
    6172:	f003 fe51 	bl	9e18 <__aeabi_dcmplt>
    6176:	b9c8      	cbnz	r0, 61ac <_strtod_l+0xa1c>
    6178:	4630      	mov	r0, r6
    617a:	4639      	mov	r1, r7
    617c:	2200      	movs	r2, #0
    617e:	4b5a      	ldr	r3, [pc, #360]	; (62e8 <_strtod_l+0xb58>)
    6180:	f003 fbd8 	bl	9934 <__aeabi_dmul>
    6184:	4606      	mov	r6, r0
    6186:	460f      	mov	r7, r1
    6188:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    618c:	9618      	str	r6, [sp, #96]	; 0x60
    618e:	9319      	str	r3, [sp, #100]	; 0x64
    6190:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
    6194:	e7a2      	b.n	60dc <_strtod_l+0x94c>
    6196:	f1ba 0f01 	cmp.w	sl, #1
    619a:	d102      	bne.n	61a2 <_strtod_l+0xa12>
    619c:	2d00      	cmp	r5, #0
    619e:	f43f ad9a 	beq.w	5cd6 <_strtod_l+0x546>
    61a2:	f04f 0800 	mov.w	r8, #0
    61a6:	f8df 9144 	ldr.w	r9, [pc, #324]	; 62ec <_strtod_l+0xb5c>
    61aa:	e795      	b.n	60d8 <_strtod_l+0x948>
    61ac:	2600      	movs	r6, #0
    61ae:	4f4e      	ldr	r7, [pc, #312]	; (62e8 <_strtod_l+0xb58>)
    61b0:	e7ea      	b.n	6188 <_strtod_l+0x9f8>
    61b2:	4b4d      	ldr	r3, [pc, #308]	; (62e8 <_strtod_l+0xb58>)
    61b4:	4630      	mov	r0, r6
    61b6:	4639      	mov	r1, r7
    61b8:	2200      	movs	r2, #0
    61ba:	f003 fbbb 	bl	9934 <__aeabi_dmul>
    61be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    61c0:	4606      	mov	r6, r0
    61c2:	460f      	mov	r7, r1
    61c4:	b933      	cbnz	r3, 61d4 <_strtod_l+0xa44>
    61c6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    61ca:	9010      	str	r0, [sp, #64]	; 0x40
    61cc:	9311      	str	r3, [sp, #68]	; 0x44
    61ce:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    61d2:	e783      	b.n	60dc <_strtod_l+0x94c>
    61d4:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    61d8:	e7f9      	b.n	61ce <_strtod_l+0xa3e>
    61da:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
    61de:	9b06      	ldr	r3, [sp, #24]
    61e0:	2b00      	cmp	r3, #0
    61e2:	d1ab      	bne.n	613c <_strtod_l+0x9ac>
    61e4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    61e8:	0d1b      	lsrs	r3, r3, #20
    61ea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    61ec:	051b      	lsls	r3, r3, #20
    61ee:	429a      	cmp	r2, r3
    61f0:	d1a4      	bne.n	613c <_strtod_l+0x9ac>
    61f2:	4630      	mov	r0, r6
    61f4:	4639      	mov	r1, r7
    61f6:	f003 fee5 	bl	9fc4 <__aeabi_d2lz>
    61fa:	f003 fb6d 	bl	98d8 <__aeabi_l2d>
    61fe:	4602      	mov	r2, r0
    6200:	460b      	mov	r3, r1
    6202:	4630      	mov	r0, r6
    6204:	4639      	mov	r1, r7
    6206:	f003 f9dd 	bl	95c4 <__aeabi_dsub>
    620a:	f3cb 0313 	ubfx	r3, fp, #0, #20
    620e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6210:	ea43 030a 	orr.w	r3, r3, sl
    6214:	4313      	orrs	r3, r2
    6216:	4606      	mov	r6, r0
    6218:	460f      	mov	r7, r1
    621a:	d069      	beq.n	62f0 <_strtod_l+0xb60>
    621c:	a326      	add	r3, pc, #152	; (adr r3, 62b8 <_strtod_l+0xb28>)
    621e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6222:	f003 fdf9 	bl	9e18 <__aeabi_dcmplt>
    6226:	2800      	cmp	r0, #0
    6228:	f47f acf1 	bne.w	5c0e <_strtod_l+0x47e>
    622c:	a324      	add	r3, pc, #144	; (adr r3, 62c0 <_strtod_l+0xb30>)
    622e:	e9d3 2300 	ldrd	r2, r3, [r3]
    6232:	4630      	mov	r0, r6
    6234:	4639      	mov	r1, r7
    6236:	f003 fe0d 	bl	9e54 <__aeabi_dcmpgt>
    623a:	2800      	cmp	r0, #0
    623c:	f43f af7e 	beq.w	613c <_strtod_l+0x9ac>
    6240:	e4e5      	b.n	5c0e <_strtod_l+0x47e>
    6242:	9b06      	ldr	r3, [sp, #24]
    6244:	b31b      	cbz	r3, 628e <_strtod_l+0xafe>
    6246:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    6248:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
    624c:	d81f      	bhi.n	628e <_strtod_l+0xafe>
    624e:	a31e      	add	r3, pc, #120	; (adr r3, 62c8 <_strtod_l+0xb38>)
    6250:	e9d3 2300 	ldrd	r2, r3, [r3]
    6254:	4630      	mov	r0, r6
    6256:	4639      	mov	r1, r7
    6258:	f003 fde8 	bl	9e2c <__aeabi_dcmple>
    625c:	b190      	cbz	r0, 6284 <_strtod_l+0xaf4>
    625e:	4639      	mov	r1, r7
    6260:	4630      	mov	r0, r6
    6262:	f003 fe3f 	bl	9ee4 <__aeabi_d2uiz>
    6266:	2800      	cmp	r0, #0
    6268:	bf08      	it	eq
    626a:	2001      	moveq	r0, #1
    626c:	f003 fae8 	bl	9840 <__aeabi_ui2d>
    6270:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6272:	4606      	mov	r6, r0
    6274:	460f      	mov	r7, r1
    6276:	b9db      	cbnz	r3, 62b0 <_strtod_l+0xb20>
    6278:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    627c:	9012      	str	r0, [sp, #72]	; 0x48
    627e:	9313      	str	r3, [sp, #76]	; 0x4c
    6280:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    6284:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6286:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
    628a:	eba3 0902 	sub.w	r9, r3, r2
    628e:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
    6292:	f002 f92f 	bl	84f4 <__ulp>
    6296:	4640      	mov	r0, r8
    6298:	ec53 2b10 	vmov	r2, r3, d0
    629c:	4649      	mov	r1, r9
    629e:	f003 fb49 	bl	9934 <__aeabi_dmul>
    62a2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    62a6:	f003 f98f 	bl	95c8 <__adddf3>
    62aa:	4682      	mov	sl, r0
    62ac:	468b      	mov	fp, r1
    62ae:	e796      	b.n	61de <_strtod_l+0xa4e>
    62b0:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    62b4:	e7e4      	b.n	6280 <_strtod_l+0xaf0>
    62b6:	bf00      	nop
    62b8:	94a03595 	.word	0x94a03595
    62bc:	3fdfffff 	.word	0x3fdfffff
    62c0:	35afe535 	.word	0x35afe535
    62c4:	3fe00000 	.word	0x3fe00000
    62c8:	ffc00000 	.word	0xffc00000
    62cc:	41dfffff 	.word	0x41dfffff
    62d0:	000fffff 	.word	0x000fffff
    62d4:	7ff00000 	.word	0x7ff00000
    62d8:	7fefffff 	.word	0x7fefffff
    62dc:	3ff00000 	.word	0x3ff00000
    62e0:	7fe00000 	.word	0x7fe00000
    62e4:	7c9fffff 	.word	0x7c9fffff
    62e8:	3fe00000 	.word	0x3fe00000
    62ec:	bff00000 	.word	0xbff00000
    62f0:	a30b      	add	r3, pc, #44	; (adr r3, 6320 <_strtod_l+0xb90>)
    62f2:	e9d3 2300 	ldrd	r2, r3, [r3]
    62f6:	f003 fd8f 	bl	9e18 <__aeabi_dcmplt>
    62fa:	e79e      	b.n	623a <_strtod_l+0xaaa>
    62fc:	2300      	movs	r3, #0
    62fe:	930c      	str	r3, [sp, #48]	; 0x30
    6300:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    6302:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6304:	6013      	str	r3, [r2, #0]
    6306:	f7ff ba85 	b.w	5814 <_strtod_l+0x84>
    630a:	2b65      	cmp	r3, #101	; 0x65
    630c:	f43f ab72 	beq.w	59f4 <_strtod_l+0x264>
    6310:	2b45      	cmp	r3, #69	; 0x45
    6312:	f43f ab6f 	beq.w	59f4 <_strtod_l+0x264>
    6316:	2201      	movs	r2, #1
    6318:	f7ff bba4 	b.w	5a64 <_strtod_l+0x2d4>
    631c:	f3af 8000 	nop.w
    6320:	94a03595 	.word	0x94a03595
    6324:	3fcfffff 	.word	0x3fcfffff

00006328 <_strtod_r>:
_strtod_r():
    6328:	4b01      	ldr	r3, [pc, #4]	; (6330 <_strtod_r+0x8>)
    632a:	f7ff ba31 	b.w	5790 <_strtod_l>
    632e:	bf00      	nop
    6330:	100001e8 	.word	0x100001e8

00006334 <_strtol_l.isra.0>:
_strtol_l.isra.0():
    6334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    6338:	4f39      	ldr	r7, [pc, #228]	; (6420 <_strtol_l.isra.0+0xec>)
    633a:	4686      	mov	lr, r0
    633c:	4608      	mov	r0, r1
    633e:	4605      	mov	r5, r0
    6340:	f815 4b01 	ldrb.w	r4, [r5], #1
    6344:	5de6      	ldrb	r6, [r4, r7]
    6346:	f016 0608 	ands.w	r6, r6, #8
    634a:	d134      	bne.n	63b6 <_strtol_l.isra.0+0x82>
    634c:	2c2d      	cmp	r4, #45	; 0x2d
    634e:	d134      	bne.n	63ba <_strtol_l.isra.0+0x86>
    6350:	782c      	ldrb	r4, [r5, #0]
    6352:	f04f 0801 	mov.w	r8, #1
    6356:	1c85      	adds	r5, r0, #2
    6358:	2b00      	cmp	r3, #0
    635a:	d05c      	beq.n	6416 <_strtol_l.isra.0+0xe2>
    635c:	2b10      	cmp	r3, #16
    635e:	d109      	bne.n	6374 <_strtol_l.isra.0+0x40>
    6360:	2c30      	cmp	r4, #48	; 0x30
    6362:	d107      	bne.n	6374 <_strtol_l.isra.0+0x40>
    6364:	7828      	ldrb	r0, [r5, #0]
    6366:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    636a:	2858      	cmp	r0, #88	; 0x58
    636c:	d14e      	bne.n	640c <_strtol_l.isra.0+0xd8>
    636e:	786c      	ldrb	r4, [r5, #1]
    6370:	2310      	movs	r3, #16
    6372:	3502      	adds	r5, #2
    6374:	f1b8 0f00 	cmp.w	r8, #0
    6378:	bf14      	ite	ne
    637a:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
    637e:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
    6382:	2700      	movs	r7, #0
    6384:	fbbc f9f3 	udiv	r9, ip, r3
    6388:	4638      	mov	r0, r7
    638a:	fb03 ca19 	mls	sl, r3, r9, ip
    638e:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
    6392:	2e09      	cmp	r6, #9
    6394:	d818      	bhi.n	63c8 <_strtol_l.isra.0+0x94>
    6396:	4634      	mov	r4, r6
    6398:	42a3      	cmp	r3, r4
    639a:	dd24      	ble.n	63e6 <_strtol_l.isra.0+0xb2>
    639c:	1c7e      	adds	r6, r7, #1
    639e:	d007      	beq.n	63b0 <_strtol_l.isra.0+0x7c>
    63a0:	4581      	cmp	r9, r0
    63a2:	d31d      	bcc.n	63e0 <_strtol_l.isra.0+0xac>
    63a4:	d101      	bne.n	63aa <_strtol_l.isra.0+0x76>
    63a6:	45a2      	cmp	sl, r4
    63a8:	db1a      	blt.n	63e0 <_strtol_l.isra.0+0xac>
    63aa:	fb00 4003 	mla	r0, r0, r3, r4
    63ae:	2701      	movs	r7, #1
    63b0:	f815 4b01 	ldrb.w	r4, [r5], #1
    63b4:	e7eb      	b.n	638e <_strtol_l.isra.0+0x5a>
    63b6:	4628      	mov	r0, r5
    63b8:	e7c1      	b.n	633e <_strtol_l.isra.0+0xa>
    63ba:	2c2b      	cmp	r4, #43	; 0x2b
    63bc:	bf08      	it	eq
    63be:	782c      	ldrbeq	r4, [r5, #0]
    63c0:	46b0      	mov	r8, r6
    63c2:	bf08      	it	eq
    63c4:	1c85      	addeq	r5, r0, #2
    63c6:	e7c7      	b.n	6358 <_strtol_l.isra.0+0x24>
    63c8:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
    63cc:	2e19      	cmp	r6, #25
    63ce:	d801      	bhi.n	63d4 <_strtol_l.isra.0+0xa0>
    63d0:	3c37      	subs	r4, #55	; 0x37
    63d2:	e7e1      	b.n	6398 <_strtol_l.isra.0+0x64>
    63d4:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
    63d8:	2e19      	cmp	r6, #25
    63da:	d804      	bhi.n	63e6 <_strtol_l.isra.0+0xb2>
    63dc:	3c57      	subs	r4, #87	; 0x57
    63de:	e7db      	b.n	6398 <_strtol_l.isra.0+0x64>
    63e0:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    63e4:	e7e4      	b.n	63b0 <_strtol_l.isra.0+0x7c>
    63e6:	1c7b      	adds	r3, r7, #1
    63e8:	d106      	bne.n	63f8 <_strtol_l.isra.0+0xc4>
    63ea:	2322      	movs	r3, #34	; 0x22
    63ec:	f8ce 3000 	str.w	r3, [lr]
    63f0:	4660      	mov	r0, ip
    63f2:	b942      	cbnz	r2, 6406 <_strtol_l.isra.0+0xd2>
    63f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    63f8:	f1b8 0f00 	cmp.w	r8, #0
    63fc:	d000      	beq.n	6400 <_strtol_l.isra.0+0xcc>
    63fe:	4240      	negs	r0, r0
    6400:	2a00      	cmp	r2, #0
    6402:	d0f7      	beq.n	63f4 <_strtol_l.isra.0+0xc0>
    6404:	b107      	cbz	r7, 6408 <_strtol_l.isra.0+0xd4>
    6406:	1e69      	subs	r1, r5, #1
    6408:	6011      	str	r1, [r2, #0]
    640a:	e7f3      	b.n	63f4 <_strtol_l.isra.0+0xc0>
    640c:	2430      	movs	r4, #48	; 0x30
    640e:	2b00      	cmp	r3, #0
    6410:	d1b0      	bne.n	6374 <_strtol_l.isra.0+0x40>
    6412:	2308      	movs	r3, #8
    6414:	e7ae      	b.n	6374 <_strtol_l.isra.0+0x40>
    6416:	2c30      	cmp	r4, #48	; 0x30
    6418:	d0a4      	beq.n	6364 <_strtol_l.isra.0+0x30>
    641a:	230a      	movs	r3, #10
    641c:	e7aa      	b.n	6374 <_strtol_l.isra.0+0x40>
    641e:	bf00      	nop
    6420:	0000b189 	.word	0x0000b189

00006424 <_strtol_r>:
_strtol_r():
    6424:	f7ff bf86 	b.w	6334 <_strtol_l.isra.0>

00006428 <strtol>:
strtol():
    6428:	4613      	mov	r3, r2
    642a:	460a      	mov	r2, r1
    642c:	4601      	mov	r1, r0
    642e:	4802      	ldr	r0, [pc, #8]	; (6438 <strtol+0x10>)
    6430:	6800      	ldr	r0, [r0, #0]
    6432:	f7ff bf7f 	b.w	6334 <_strtol_l.isra.0>
    6436:	bf00      	nop
    6438:	10000180 	.word	0x10000180

0000643c <_vsniprintf_r>:
_vsniprintf_r():
    643c:	b530      	push	{r4, r5, lr}
    643e:	1e14      	subs	r4, r2, #0
    6440:	4605      	mov	r5, r0
    6442:	b09b      	sub	sp, #108	; 0x6c
    6444:	4618      	mov	r0, r3
    6446:	da05      	bge.n	6454 <_vsniprintf_r+0x18>
    6448:	238b      	movs	r3, #139	; 0x8b
    644a:	602b      	str	r3, [r5, #0]
    644c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    6450:	b01b      	add	sp, #108	; 0x6c
    6452:	bd30      	pop	{r4, r5, pc}
    6454:	f44f 7302 	mov.w	r3, #520	; 0x208
    6458:	f8ad 300c 	strh.w	r3, [sp, #12]
    645c:	bf14      	ite	ne
    645e:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
    6462:	4623      	moveq	r3, r4
    6464:	9302      	str	r3, [sp, #8]
    6466:	9305      	str	r3, [sp, #20]
    6468:	f64f 73ff 	movw	r3, #65535	; 0xffff
    646c:	9100      	str	r1, [sp, #0]
    646e:	9104      	str	r1, [sp, #16]
    6470:	f8ad 300e 	strh.w	r3, [sp, #14]
    6474:	4602      	mov	r2, r0
    6476:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    6478:	4669      	mov	r1, sp
    647a:	4628      	mov	r0, r5
    647c:	f002 f9fc 	bl	8878 <_svfiprintf_r>
    6480:	1c43      	adds	r3, r0, #1
    6482:	bfbc      	itt	lt
    6484:	238b      	movlt	r3, #139	; 0x8b
    6486:	602b      	strlt	r3, [r5, #0]
    6488:	2c00      	cmp	r4, #0
    648a:	d0e1      	beq.n	6450 <_vsniprintf_r+0x14>
    648c:	9b00      	ldr	r3, [sp, #0]
    648e:	2200      	movs	r2, #0
    6490:	701a      	strb	r2, [r3, #0]
    6492:	e7dd      	b.n	6450 <_vsniprintf_r+0x14>

00006494 <vsniprintf>:
vsniprintf():
    6494:	b507      	push	{r0, r1, r2, lr}
    6496:	9300      	str	r3, [sp, #0]
    6498:	4613      	mov	r3, r2
    649a:	460a      	mov	r2, r1
    649c:	4601      	mov	r1, r0
    649e:	4803      	ldr	r0, [pc, #12]	; (64ac <vsniprintf+0x18>)
    64a0:	6800      	ldr	r0, [r0, #0]
    64a2:	f7ff ffcb 	bl	643c <_vsniprintf_r>
    64a6:	b003      	add	sp, #12
    64a8:	f85d fb04 	ldr.w	pc, [sp], #4
    64ac:	10000180 	.word	0x10000180

000064b0 <_vsiscanf_r>:
_vsscanf_r():
    64b0:	b570      	push	{r4, r5, r6, lr}
    64b2:	b09a      	sub	sp, #104	; 0x68
    64b4:	4604      	mov	r4, r0
    64b6:	461e      	mov	r6, r3
    64b8:	4608      	mov	r0, r1
    64ba:	f44f 7301 	mov.w	r3, #516	; 0x204
    64be:	4615      	mov	r5, r2
    64c0:	f8ad 300c 	strh.w	r3, [sp, #12]
    64c4:	9100      	str	r1, [sp, #0]
    64c6:	9104      	str	r1, [sp, #16]
    64c8:	f7ff f8df 	bl	568a <strlen>
    64cc:	4b09      	ldr	r3, [pc, #36]	; (64f4 <_vsiscanf_r+0x44>)
    64ce:	9309      	str	r3, [sp, #36]	; 0x24
    64d0:	2100      	movs	r1, #0
    64d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
    64d6:	9001      	str	r0, [sp, #4]
    64d8:	9005      	str	r0, [sp, #20]
    64da:	910d      	str	r1, [sp, #52]	; 0x34
    64dc:	9112      	str	r1, [sp, #72]	; 0x48
    64de:	f8ad 300e 	strh.w	r3, [sp, #14]
    64e2:	462a      	mov	r2, r5
    64e4:	4633      	mov	r3, r6
    64e6:	4669      	mov	r1, sp
    64e8:	4620      	mov	r0, r4
    64ea:	f002 fb17 	bl	8b1c <__ssvfiscanf_r>
    64ee:	b01a      	add	sp, #104	; 0x68
    64f0:	bd70      	pop	{r4, r5, r6, pc}
    64f2:	bf00      	nop
    64f4:	000091c7 	.word	0x000091c7

000064f8 <vsiscanf>:
vsiscanf():
    64f8:	4613      	mov	r3, r2
    64fa:	460a      	mov	r2, r1
    64fc:	4601      	mov	r1, r0
    64fe:	4802      	ldr	r0, [pc, #8]	; (6508 <vsiscanf+0x10>)
    6500:	6800      	ldr	r0, [r0, #0]
    6502:	f7ff bfd5 	b.w	64b0 <_vsiscanf_r>
    6506:	bf00      	nop
    6508:	10000180 	.word	0x10000180

0000650c <__swbuf_r>:
__swbuf_r():
    650c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    650e:	460e      	mov	r6, r1
    6510:	4614      	mov	r4, r2
    6512:	4605      	mov	r5, r0
    6514:	b118      	cbz	r0, 651e <__swbuf_r+0x12>
    6516:	6983      	ldr	r3, [r0, #24]
    6518:	b90b      	cbnz	r3, 651e <__swbuf_r+0x12>
    651a:	f001 f827 	bl	756c <__sinit>
    651e:	4b21      	ldr	r3, [pc, #132]	; (65a4 <__swbuf_r+0x98>)
    6520:	429c      	cmp	r4, r3
    6522:	d12b      	bne.n	657c <__swbuf_r+0x70>
    6524:	686c      	ldr	r4, [r5, #4]
    6526:	69a3      	ldr	r3, [r4, #24]
    6528:	60a3      	str	r3, [r4, #8]
    652a:	89a3      	ldrh	r3, [r4, #12]
    652c:	071a      	lsls	r2, r3, #28
    652e:	d52f      	bpl.n	6590 <__swbuf_r+0x84>
    6530:	6923      	ldr	r3, [r4, #16]
    6532:	b36b      	cbz	r3, 6590 <__swbuf_r+0x84>
    6534:	6923      	ldr	r3, [r4, #16]
    6536:	6820      	ldr	r0, [r4, #0]
    6538:	1ac0      	subs	r0, r0, r3
    653a:	6963      	ldr	r3, [r4, #20]
    653c:	b2f6      	uxtb	r6, r6
    653e:	4283      	cmp	r3, r0
    6540:	4637      	mov	r7, r6
    6542:	dc04      	bgt.n	654e <__swbuf_r+0x42>
    6544:	4621      	mov	r1, r4
    6546:	4628      	mov	r0, r5
    6548:	f000 ff6a 	bl	7420 <_fflush_r>
    654c:	bb30      	cbnz	r0, 659c <__swbuf_r+0x90>
    654e:	68a3      	ldr	r3, [r4, #8]
    6550:	3b01      	subs	r3, #1
    6552:	60a3      	str	r3, [r4, #8]
    6554:	6823      	ldr	r3, [r4, #0]
    6556:	1c5a      	adds	r2, r3, #1
    6558:	6022      	str	r2, [r4, #0]
    655a:	701e      	strb	r6, [r3, #0]
    655c:	6963      	ldr	r3, [r4, #20]
    655e:	3001      	adds	r0, #1
    6560:	4283      	cmp	r3, r0
    6562:	d004      	beq.n	656e <__swbuf_r+0x62>
    6564:	89a3      	ldrh	r3, [r4, #12]
    6566:	07db      	lsls	r3, r3, #31
    6568:	d506      	bpl.n	6578 <__swbuf_r+0x6c>
    656a:	2e0a      	cmp	r6, #10
    656c:	d104      	bne.n	6578 <__swbuf_r+0x6c>
    656e:	4621      	mov	r1, r4
    6570:	4628      	mov	r0, r5
    6572:	f000 ff55 	bl	7420 <_fflush_r>
    6576:	b988      	cbnz	r0, 659c <__swbuf_r+0x90>
    6578:	4638      	mov	r0, r7
    657a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    657c:	4b0a      	ldr	r3, [pc, #40]	; (65a8 <__swbuf_r+0x9c>)
    657e:	429c      	cmp	r4, r3
    6580:	d101      	bne.n	6586 <__swbuf_r+0x7a>
    6582:	68ac      	ldr	r4, [r5, #8]
    6584:	e7cf      	b.n	6526 <__swbuf_r+0x1a>
    6586:	4b09      	ldr	r3, [pc, #36]	; (65ac <__swbuf_r+0xa0>)
    6588:	429c      	cmp	r4, r3
    658a:	bf08      	it	eq
    658c:	68ec      	ldreq	r4, [r5, #12]
    658e:	e7ca      	b.n	6526 <__swbuf_r+0x1a>
    6590:	4621      	mov	r1, r4
    6592:	4628      	mov	r0, r5
    6594:	f000 f80c 	bl	65b0 <__swsetup_r>
    6598:	2800      	cmp	r0, #0
    659a:	d0cb      	beq.n	6534 <__swbuf_r+0x28>
    659c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    65a0:	e7ea      	b.n	6578 <__swbuf_r+0x6c>
    65a2:	bf00      	nop
    65a4:	0000b358 	.word	0x0000b358
    65a8:	0000b378 	.word	0x0000b378
    65ac:	0000b338 	.word	0x0000b338

000065b0 <__swsetup_r>:
__swsetup_r():
    65b0:	4b32      	ldr	r3, [pc, #200]	; (667c <__swsetup_r+0xcc>)
    65b2:	b570      	push	{r4, r5, r6, lr}
    65b4:	681d      	ldr	r5, [r3, #0]
    65b6:	4606      	mov	r6, r0
    65b8:	460c      	mov	r4, r1
    65ba:	b125      	cbz	r5, 65c6 <__swsetup_r+0x16>
    65bc:	69ab      	ldr	r3, [r5, #24]
    65be:	b913      	cbnz	r3, 65c6 <__swsetup_r+0x16>
    65c0:	4628      	mov	r0, r5
    65c2:	f000 ffd3 	bl	756c <__sinit>
    65c6:	4b2e      	ldr	r3, [pc, #184]	; (6680 <__swsetup_r+0xd0>)
    65c8:	429c      	cmp	r4, r3
    65ca:	d10f      	bne.n	65ec <__swsetup_r+0x3c>
    65cc:	686c      	ldr	r4, [r5, #4]
    65ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    65d2:	b29a      	uxth	r2, r3
    65d4:	0715      	lsls	r5, r2, #28
    65d6:	d42c      	bmi.n	6632 <__swsetup_r+0x82>
    65d8:	06d0      	lsls	r0, r2, #27
    65da:	d411      	bmi.n	6600 <__swsetup_r+0x50>
    65dc:	2209      	movs	r2, #9
    65de:	6032      	str	r2, [r6, #0]
    65e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    65e4:	81a3      	strh	r3, [r4, #12]
    65e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    65ea:	e03e      	b.n	666a <__swsetup_r+0xba>
    65ec:	4b25      	ldr	r3, [pc, #148]	; (6684 <__swsetup_r+0xd4>)
    65ee:	429c      	cmp	r4, r3
    65f0:	d101      	bne.n	65f6 <__swsetup_r+0x46>
    65f2:	68ac      	ldr	r4, [r5, #8]
    65f4:	e7eb      	b.n	65ce <__swsetup_r+0x1e>
    65f6:	4b24      	ldr	r3, [pc, #144]	; (6688 <__swsetup_r+0xd8>)
    65f8:	429c      	cmp	r4, r3
    65fa:	bf08      	it	eq
    65fc:	68ec      	ldreq	r4, [r5, #12]
    65fe:	e7e6      	b.n	65ce <__swsetup_r+0x1e>
    6600:	0751      	lsls	r1, r2, #29
    6602:	d512      	bpl.n	662a <__swsetup_r+0x7a>
    6604:	6b61      	ldr	r1, [r4, #52]	; 0x34
    6606:	b141      	cbz	r1, 661a <__swsetup_r+0x6a>
    6608:	f104 0344 	add.w	r3, r4, #68	; 0x44
    660c:	4299      	cmp	r1, r3
    660e:	d002      	beq.n	6616 <__swsetup_r+0x66>
    6610:	4630      	mov	r0, r6
    6612:	f7fd fe59 	bl	42c8 <_free_r>
    6616:	2300      	movs	r3, #0
    6618:	6363      	str	r3, [r4, #52]	; 0x34
    661a:	89a3      	ldrh	r3, [r4, #12]
    661c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    6620:	81a3      	strh	r3, [r4, #12]
    6622:	2300      	movs	r3, #0
    6624:	6063      	str	r3, [r4, #4]
    6626:	6923      	ldr	r3, [r4, #16]
    6628:	6023      	str	r3, [r4, #0]
    662a:	89a3      	ldrh	r3, [r4, #12]
    662c:	f043 0308 	orr.w	r3, r3, #8
    6630:	81a3      	strh	r3, [r4, #12]
    6632:	6923      	ldr	r3, [r4, #16]
    6634:	b94b      	cbnz	r3, 664a <__swsetup_r+0x9a>
    6636:	89a3      	ldrh	r3, [r4, #12]
    6638:	f403 7320 	and.w	r3, r3, #640	; 0x280
    663c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    6640:	d003      	beq.n	664a <__swsetup_r+0x9a>
    6642:	4621      	mov	r1, r4
    6644:	4630      	mov	r0, r6
    6646:	f001 fbdb 	bl	7e00 <__smakebuf_r>
    664a:	89a2      	ldrh	r2, [r4, #12]
    664c:	f012 0301 	ands.w	r3, r2, #1
    6650:	d00c      	beq.n	666c <__swsetup_r+0xbc>
    6652:	2300      	movs	r3, #0
    6654:	60a3      	str	r3, [r4, #8]
    6656:	6963      	ldr	r3, [r4, #20]
    6658:	425b      	negs	r3, r3
    665a:	61a3      	str	r3, [r4, #24]
    665c:	6923      	ldr	r3, [r4, #16]
    665e:	b953      	cbnz	r3, 6676 <__swsetup_r+0xc6>
    6660:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    6664:	f013 0080 	ands.w	r0, r3, #128	; 0x80
    6668:	d1ba      	bne.n	65e0 <__swsetup_r+0x30>
    666a:	bd70      	pop	{r4, r5, r6, pc}
    666c:	0792      	lsls	r2, r2, #30
    666e:	bf58      	it	pl
    6670:	6963      	ldrpl	r3, [r4, #20]
    6672:	60a3      	str	r3, [r4, #8]
    6674:	e7f2      	b.n	665c <__swsetup_r+0xac>
    6676:	2000      	movs	r0, #0
    6678:	e7f7      	b.n	666a <__swsetup_r+0xba>
    667a:	bf00      	nop
    667c:	10000180 	.word	0x10000180
    6680:	0000b358 	.word	0x0000b358
    6684:	0000b378 	.word	0x0000b378
    6688:	0000b338 	.word	0x0000b338

0000668c <quorem>:
quorem():
    668c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6690:	6903      	ldr	r3, [r0, #16]
    6692:	690c      	ldr	r4, [r1, #16]
    6694:	42a3      	cmp	r3, r4
    6696:	4680      	mov	r8, r0
    6698:	db7f      	blt.n	679a <quorem+0x10e>
    669a:	3c01      	subs	r4, #1
    669c:	f101 0714 	add.w	r7, r1, #20
    66a0:	00a0      	lsls	r0, r4, #2
    66a2:	f108 0514 	add.w	r5, r8, #20
    66a6:	182b      	adds	r3, r5, r0
    66a8:	9301      	str	r3, [sp, #4]
    66aa:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
    66ae:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    66b2:	3301      	adds	r3, #1
    66b4:	429a      	cmp	r2, r3
    66b6:	eb07 0900 	add.w	r9, r7, r0
    66ba:	fbb2 f6f3 	udiv	r6, r2, r3
    66be:	d331      	bcc.n	6724 <quorem+0x98>
    66c0:	f04f 0a00 	mov.w	sl, #0
    66c4:	46bc      	mov	ip, r7
    66c6:	46ae      	mov	lr, r5
    66c8:	46d3      	mov	fp, sl
    66ca:	f85c 2b04 	ldr.w	r2, [ip], #4
    66ce:	b293      	uxth	r3, r2
    66d0:	fb06 a303 	mla	r3, r6, r3, sl
    66d4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    66d8:	b29b      	uxth	r3, r3
    66da:	ebab 0303 	sub.w	r3, fp, r3
    66de:	0c12      	lsrs	r2, r2, #16
    66e0:	f8de b000 	ldr.w	fp, [lr]
    66e4:	fb06 a202 	mla	r2, r6, r2, sl
    66e8:	fa13 f38b 	uxtah	r3, r3, fp
    66ec:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    66f0:	fa1f fb82 	uxth.w	fp, r2
    66f4:	f8de 2000 	ldr.w	r2, [lr]
    66f8:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    66fc:	eb02 4223 	add.w	r2, r2, r3, asr #16
    6700:	b29b      	uxth	r3, r3
    6702:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    6706:	45e1      	cmp	r9, ip
    6708:	ea4f 4b22 	mov.w	fp, r2, asr #16
    670c:	f84e 3b04 	str.w	r3, [lr], #4
    6710:	d2db      	bcs.n	66ca <quorem+0x3e>
    6712:	582b      	ldr	r3, [r5, r0]
    6714:	b933      	cbnz	r3, 6724 <quorem+0x98>
    6716:	9b01      	ldr	r3, [sp, #4]
    6718:	3b04      	subs	r3, #4
    671a:	429d      	cmp	r5, r3
    671c:	461a      	mov	r2, r3
    671e:	d330      	bcc.n	6782 <quorem+0xf6>
    6720:	f8c8 4010 	str.w	r4, [r8, #16]
    6724:	4640      	mov	r0, r8
    6726:	f001 fe6e 	bl	8406 <__mcmp>
    672a:	2800      	cmp	r0, #0
    672c:	db25      	blt.n	677a <quorem+0xee>
    672e:	3601      	adds	r6, #1
    6730:	4628      	mov	r0, r5
    6732:	f04f 0c00 	mov.w	ip, #0
    6736:	f857 2b04 	ldr.w	r2, [r7], #4
    673a:	f8d0 e000 	ldr.w	lr, [r0]
    673e:	b293      	uxth	r3, r2
    6740:	ebac 0303 	sub.w	r3, ip, r3
    6744:	0c12      	lsrs	r2, r2, #16
    6746:	fa13 f38e 	uxtah	r3, r3, lr
    674a:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    674e:	eb02 4223 	add.w	r2, r2, r3, asr #16
    6752:	b29b      	uxth	r3, r3
    6754:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    6758:	45b9      	cmp	r9, r7
    675a:	ea4f 4c22 	mov.w	ip, r2, asr #16
    675e:	f840 3b04 	str.w	r3, [r0], #4
    6762:	d2e8      	bcs.n	6736 <quorem+0xaa>
    6764:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    6768:	eb05 0384 	add.w	r3, r5, r4, lsl #2
    676c:	b92a      	cbnz	r2, 677a <quorem+0xee>
    676e:	3b04      	subs	r3, #4
    6770:	429d      	cmp	r5, r3
    6772:	461a      	mov	r2, r3
    6774:	d30b      	bcc.n	678e <quorem+0x102>
    6776:	f8c8 4010 	str.w	r4, [r8, #16]
    677a:	4630      	mov	r0, r6
    677c:	b003      	add	sp, #12
    677e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6782:	6812      	ldr	r2, [r2, #0]
    6784:	3b04      	subs	r3, #4
    6786:	2a00      	cmp	r2, #0
    6788:	d1ca      	bne.n	6720 <quorem+0x94>
    678a:	3c01      	subs	r4, #1
    678c:	e7c5      	b.n	671a <quorem+0x8e>
    678e:	6812      	ldr	r2, [r2, #0]
    6790:	3b04      	subs	r3, #4
    6792:	2a00      	cmp	r2, #0
    6794:	d1ef      	bne.n	6776 <quorem+0xea>
    6796:	3c01      	subs	r4, #1
    6798:	e7ea      	b.n	6770 <quorem+0xe4>
    679a:	2000      	movs	r0, #0
    679c:	e7ee      	b.n	677c <quorem+0xf0>
    679e:	Address 0x000000000000679e is out of bounds.


000067a0 <_dtoa_r>:
_dtoa_r():
    67a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67a4:	ec55 4b10 	vmov	r4, r5, d0
    67a8:	b099      	sub	sp, #100	; 0x64
    67aa:	6a47      	ldr	r7, [r0, #36]	; 0x24
    67ac:	9108      	str	r1, [sp, #32]
    67ae:	4683      	mov	fp, r0
    67b0:	920d      	str	r2, [sp, #52]	; 0x34
    67b2:	9314      	str	r3, [sp, #80]	; 0x50
    67b4:	9e22      	ldr	r6, [sp, #136]	; 0x88
    67b6:	e9cd 4500 	strd	r4, r5, [sp]
    67ba:	b947      	cbnz	r7, 67ce <_dtoa_r+0x2e>
    67bc:	2010      	movs	r0, #16
    67be:	f7fd fd43 	bl	4248 <malloc>
    67c2:	e9c0 7701 	strd	r7, r7, [r0, #4]
    67c6:	f8cb 0024 	str.w	r0, [fp, #36]	; 0x24
    67ca:	6007      	str	r7, [r0, #0]
    67cc:	60c7      	str	r7, [r0, #12]
    67ce:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    67d2:	6819      	ldr	r1, [r3, #0]
    67d4:	b159      	cbz	r1, 67ee <_dtoa_r+0x4e>
    67d6:	685a      	ldr	r2, [r3, #4]
    67d8:	604a      	str	r2, [r1, #4]
    67da:	2301      	movs	r3, #1
    67dc:	4093      	lsls	r3, r2
    67de:	608b      	str	r3, [r1, #8]
    67e0:	4658      	mov	r0, fp
    67e2:	f001 fbf5 	bl	7fd0 <_Bfree>
    67e6:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    67ea:	2200      	movs	r2, #0
    67ec:	601a      	str	r2, [r3, #0]
    67ee:	1e2b      	subs	r3, r5, #0
    67f0:	bfb9      	ittee	lt
    67f2:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    67f6:	9301      	strlt	r3, [sp, #4]
    67f8:	2300      	movge	r3, #0
    67fa:	6033      	strge	r3, [r6, #0]
    67fc:	9c01      	ldr	r4, [sp, #4]
    67fe:	4bb2      	ldr	r3, [pc, #712]	; (6ac8 <_dtoa_r+0x328>)
    6800:	bfbc      	itt	lt
    6802:	2201      	movlt	r2, #1
    6804:	6032      	strlt	r2, [r6, #0]
    6806:	43a3      	bics	r3, r4
    6808:	d11a      	bne.n	6840 <_dtoa_r+0xa0>
    680a:	9a14      	ldr	r2, [sp, #80]	; 0x50
    680c:	f242 730f 	movw	r3, #9999	; 0x270f
    6810:	6013      	str	r3, [r2, #0]
    6812:	9a00      	ldr	r2, [sp, #0]
    6814:	f3c4 0313 	ubfx	r3, r4, #0, #20
    6818:	4313      	orrs	r3, r2
    681a:	f000 8552 	beq.w	72c2 <_dtoa_r+0xb22>
    681e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6820:	b953      	cbnz	r3, 6838 <_dtoa_r+0x98>
    6822:	4baa      	ldr	r3, [pc, #680]	; (6acc <_dtoa_r+0x32c>)
    6824:	e023      	b.n	686e <_dtoa_r+0xce>
    6826:	4baa      	ldr	r3, [pc, #680]	; (6ad0 <_dtoa_r+0x330>)
    6828:	9303      	str	r3, [sp, #12]
    682a:	3308      	adds	r3, #8
    682c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    682e:	6013      	str	r3, [r2, #0]
    6830:	9803      	ldr	r0, [sp, #12]
    6832:	b019      	add	sp, #100	; 0x64
    6834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6838:	4ba4      	ldr	r3, [pc, #656]	; (6acc <_dtoa_r+0x32c>)
    683a:	9303      	str	r3, [sp, #12]
    683c:	3303      	adds	r3, #3
    683e:	e7f5      	b.n	682c <_dtoa_r+0x8c>
    6840:	ed9d 7b00 	vldr	d7, [sp]
    6844:	2200      	movs	r2, #0
    6846:	2300      	movs	r3, #0
    6848:	ec51 0b17 	vmov	r0, r1, d7
    684c:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
    6850:	f003 fad8 	bl	9e04 <__aeabi_dcmpeq>
    6854:	4607      	mov	r7, r0
    6856:	b160      	cbz	r0, 6872 <_dtoa_r+0xd2>
    6858:	9a14      	ldr	r2, [sp, #80]	; 0x50
    685a:	2301      	movs	r3, #1
    685c:	6013      	str	r3, [r2, #0]
    685e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6860:	2b00      	cmp	r3, #0
    6862:	f000 852b 	beq.w	72bc <_dtoa_r+0xb1c>
    6866:	4b9b      	ldr	r3, [pc, #620]	; (6ad4 <_dtoa_r+0x334>)
    6868:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    686a:	6013      	str	r3, [r2, #0]
    686c:	3b01      	subs	r3, #1
    686e:	9303      	str	r3, [sp, #12]
    6870:	e7de      	b.n	6830 <_dtoa_r+0x90>
    6872:	aa16      	add	r2, sp, #88	; 0x58
    6874:	a917      	add	r1, sp, #92	; 0x5c
    6876:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
    687a:	4658      	mov	r0, fp
    687c:	f001 feb0 	bl	85e0 <__d2b>
    6880:	f3c4 560a 	ubfx	r6, r4, #20, #11
    6884:	4680      	mov	r8, r0
    6886:	2e00      	cmp	r6, #0
    6888:	d07f      	beq.n	698a <_dtoa_r+0x1ea>
    688a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    688c:	9715      	str	r7, [sp, #84]	; 0x54
    688e:	f3c3 0313 	ubfx	r3, r3, #0, #20
    6892:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
    6896:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
    689a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    689e:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
    68a2:	2200      	movs	r2, #0
    68a4:	4b8c      	ldr	r3, [pc, #560]	; (6ad8 <_dtoa_r+0x338>)
    68a6:	4620      	mov	r0, r4
    68a8:	4629      	mov	r1, r5
    68aa:	f002 fe8b 	bl	95c4 <__aeabi_dsub>
    68ae:	a380      	add	r3, pc, #512	; (adr r3, 6ab0 <_dtoa_r+0x310>)
    68b0:	e9d3 2300 	ldrd	r2, r3, [r3]
    68b4:	f003 f83e 	bl	9934 <__aeabi_dmul>
    68b8:	a37f      	add	r3, pc, #508	; (adr r3, 6ab8 <_dtoa_r+0x318>)
    68ba:	e9d3 2300 	ldrd	r2, r3, [r3]
    68be:	f002 fe83 	bl	95c8 <__adddf3>
    68c2:	4604      	mov	r4, r0
    68c4:	4630      	mov	r0, r6
    68c6:	460d      	mov	r5, r1
    68c8:	f002 ffca 	bl	9860 <__aeabi_i2d>
    68cc:	a37c      	add	r3, pc, #496	; (adr r3, 6ac0 <_dtoa_r+0x320>)
    68ce:	e9d3 2300 	ldrd	r2, r3, [r3]
    68d2:	f003 f82f 	bl	9934 <__aeabi_dmul>
    68d6:	4602      	mov	r2, r0
    68d8:	460b      	mov	r3, r1
    68da:	4620      	mov	r0, r4
    68dc:	4629      	mov	r1, r5
    68de:	f002 fe73 	bl	95c8 <__adddf3>
    68e2:	4604      	mov	r4, r0
    68e4:	460d      	mov	r5, r1
    68e6:	f003 fad5 	bl	9e94 <__aeabi_d2iz>
    68ea:	2200      	movs	r2, #0
    68ec:	4682      	mov	sl, r0
    68ee:	2300      	movs	r3, #0
    68f0:	4620      	mov	r0, r4
    68f2:	4629      	mov	r1, r5
    68f4:	f003 fa90 	bl	9e18 <__aeabi_dcmplt>
    68f8:	b148      	cbz	r0, 690e <_dtoa_r+0x16e>
    68fa:	4650      	mov	r0, sl
    68fc:	f002 ffb0 	bl	9860 <__aeabi_i2d>
    6900:	4622      	mov	r2, r4
    6902:	462b      	mov	r3, r5
    6904:	f003 fa7e 	bl	9e04 <__aeabi_dcmpeq>
    6908:	b908      	cbnz	r0, 690e <_dtoa_r+0x16e>
    690a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    690e:	f1ba 0f16 	cmp.w	sl, #22
    6912:	d859      	bhi.n	69c8 <_dtoa_r+0x228>
    6914:	4b71      	ldr	r3, [pc, #452]	; (6adc <_dtoa_r+0x33c>)
    6916:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    691a:	e9d3 2300 	ldrd	r2, r3, [r3]
    691e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    6922:	f003 fa79 	bl	9e18 <__aeabi_dcmplt>
    6926:	2800      	cmp	r0, #0
    6928:	d050      	beq.n	69cc <_dtoa_r+0x22c>
    692a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    692e:	2300      	movs	r3, #0
    6930:	9311      	str	r3, [sp, #68]	; 0x44
    6932:	9b16      	ldr	r3, [sp, #88]	; 0x58
    6934:	1b9e      	subs	r6, r3, r6
    6936:	1e73      	subs	r3, r6, #1
    6938:	9307      	str	r3, [sp, #28]
    693a:	bf45      	ittet	mi
    693c:	f1c6 0301 	rsbmi	r3, r6, #1
    6940:	9306      	strmi	r3, [sp, #24]
    6942:	2300      	movpl	r3, #0
    6944:	2300      	movmi	r3, #0
    6946:	bf4c      	ite	mi
    6948:	9307      	strmi	r3, [sp, #28]
    694a:	9306      	strpl	r3, [sp, #24]
    694c:	f1ba 0f00 	cmp.w	sl, #0
    6950:	db3e      	blt.n	69d0 <_dtoa_r+0x230>
    6952:	9b07      	ldr	r3, [sp, #28]
    6954:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    6958:	4453      	add	r3, sl
    695a:	9307      	str	r3, [sp, #28]
    695c:	2300      	movs	r3, #0
    695e:	9309      	str	r3, [sp, #36]	; 0x24
    6960:	9b08      	ldr	r3, [sp, #32]
    6962:	2b09      	cmp	r3, #9
    6964:	f200 808f 	bhi.w	6a86 <_dtoa_r+0x2e6>
    6968:	2b05      	cmp	r3, #5
    696a:	bfc4      	itt	gt
    696c:	3b04      	subgt	r3, #4
    696e:	9308      	strgt	r3, [sp, #32]
    6970:	9b08      	ldr	r3, [sp, #32]
    6972:	f1a3 0302 	sub.w	r3, r3, #2
    6976:	bfcc      	ite	gt
    6978:	2400      	movgt	r4, #0
    697a:	2401      	movle	r4, #1
    697c:	2b03      	cmp	r3, #3
    697e:	f200 808d 	bhi.w	6a9c <_dtoa_r+0x2fc>
    6982:	e8df f003 	tbb	[pc, r3]
    6986:	3c2f      	.short	0x3c2f
    6988:	7e3a      	.short	0x7e3a
    698a:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	; 0x58
    698e:	441e      	add	r6, r3
    6990:	f206 4032 	addw	r0, r6, #1074	; 0x432
    6994:	2820      	cmp	r0, #32
    6996:	dd11      	ble.n	69bc <_dtoa_r+0x21c>
    6998:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    699c:	9b00      	ldr	r3, [sp, #0]
    699e:	4084      	lsls	r4, r0
    69a0:	f206 4012 	addw	r0, r6, #1042	; 0x412
    69a4:	fa23 f000 	lsr.w	r0, r3, r0
    69a8:	4320      	orrs	r0, r4
    69aa:	f002 ff49 	bl	9840 <__aeabi_ui2d>
    69ae:	2301      	movs	r3, #1
    69b0:	4604      	mov	r4, r0
    69b2:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
    69b6:	3e01      	subs	r6, #1
    69b8:	9315      	str	r3, [sp, #84]	; 0x54
    69ba:	e772      	b.n	68a2 <_dtoa_r+0x102>
    69bc:	9b00      	ldr	r3, [sp, #0]
    69be:	f1c0 0020 	rsb	r0, r0, #32
    69c2:	fa03 f000 	lsl.w	r0, r3, r0
    69c6:	e7f0      	b.n	69aa <_dtoa_r+0x20a>
    69c8:	2301      	movs	r3, #1
    69ca:	e7b1      	b.n	6930 <_dtoa_r+0x190>
    69cc:	9011      	str	r0, [sp, #68]	; 0x44
    69ce:	e7b0      	b.n	6932 <_dtoa_r+0x192>
    69d0:	9b06      	ldr	r3, [sp, #24]
    69d2:	eba3 030a 	sub.w	r3, r3, sl
    69d6:	9306      	str	r3, [sp, #24]
    69d8:	f1ca 0300 	rsb	r3, sl, #0
    69dc:	9309      	str	r3, [sp, #36]	; 0x24
    69de:	2300      	movs	r3, #0
    69e0:	9310      	str	r3, [sp, #64]	; 0x40
    69e2:	e7bd      	b.n	6960 <_dtoa_r+0x1c0>
    69e4:	2300      	movs	r3, #0
    69e6:	930c      	str	r3, [sp, #48]	; 0x30
    69e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    69ea:	2b00      	cmp	r3, #0
    69ec:	dc59      	bgt.n	6aa2 <_dtoa_r+0x302>
    69ee:	2301      	movs	r3, #1
    69f0:	9304      	str	r3, [sp, #16]
    69f2:	4699      	mov	r9, r3
    69f4:	461a      	mov	r2, r3
    69f6:	920d      	str	r2, [sp, #52]	; 0x34
    69f8:	e00c      	b.n	6a14 <_dtoa_r+0x274>
    69fa:	2301      	movs	r3, #1
    69fc:	e7f3      	b.n	69e6 <_dtoa_r+0x246>
    69fe:	2300      	movs	r3, #0
    6a00:	930c      	str	r3, [sp, #48]	; 0x30
    6a02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6a04:	4453      	add	r3, sl
    6a06:	f103 0901 	add.w	r9, r3, #1
    6a0a:	9304      	str	r3, [sp, #16]
    6a0c:	464b      	mov	r3, r9
    6a0e:	2b01      	cmp	r3, #1
    6a10:	bfb8      	it	lt
    6a12:	2301      	movlt	r3, #1
    6a14:	f8db 5024 	ldr.w	r5, [fp, #36]	; 0x24
    6a18:	2200      	movs	r2, #0
    6a1a:	606a      	str	r2, [r5, #4]
    6a1c:	2204      	movs	r2, #4
    6a1e:	f102 0014 	add.w	r0, r2, #20
    6a22:	4298      	cmp	r0, r3
    6a24:	6869      	ldr	r1, [r5, #4]
    6a26:	d95d      	bls.n	6ae4 <_dtoa_r+0x344>
    6a28:	4658      	mov	r0, fp
    6a2a:	f001 fa9d 	bl	7f68 <_Balloc>
    6a2e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    6a32:	6028      	str	r0, [r5, #0]
    6a34:	681b      	ldr	r3, [r3, #0]
    6a36:	9303      	str	r3, [sp, #12]
    6a38:	f1b9 0f0e 	cmp.w	r9, #14
    6a3c:	f200 80d7 	bhi.w	6bee <_dtoa_r+0x44e>
    6a40:	2c00      	cmp	r4, #0
    6a42:	f000 80d4 	beq.w	6bee <_dtoa_r+0x44e>
    6a46:	f1ba 0f00 	cmp.w	sl, #0
    6a4a:	dd69      	ble.n	6b20 <_dtoa_r+0x380>
    6a4c:	4a23      	ldr	r2, [pc, #140]	; (6adc <_dtoa_r+0x33c>)
    6a4e:	f00a 030f 	and.w	r3, sl, #15
    6a52:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    6a56:	ed93 7b00 	vldr	d7, [r3]
    6a5a:	ea4f 142a 	mov.w	r4, sl, asr #4
    6a5e:	06e2      	lsls	r2, r4, #27
    6a60:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
    6a64:	d55a      	bpl.n	6b1c <_dtoa_r+0x37c>
    6a66:	4b1e      	ldr	r3, [pc, #120]	; (6ae0 <_dtoa_r+0x340>)
    6a68:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    6a6c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    6a70:	f003 f88a 	bl	9b88 <__aeabi_ddiv>
    6a74:	e9cd 0100 	strd	r0, r1, [sp]
    6a78:	f004 040f 	and.w	r4, r4, #15
    6a7c:	2603      	movs	r6, #3
    6a7e:	4d18      	ldr	r5, [pc, #96]	; (6ae0 <_dtoa_r+0x340>)
    6a80:	e041      	b.n	6b06 <_dtoa_r+0x366>
    6a82:	2301      	movs	r3, #1
    6a84:	e7bc      	b.n	6a00 <_dtoa_r+0x260>
    6a86:	2401      	movs	r4, #1
    6a88:	2300      	movs	r3, #0
    6a8a:	9308      	str	r3, [sp, #32]
    6a8c:	940c      	str	r4, [sp, #48]	; 0x30
    6a8e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    6a92:	9304      	str	r3, [sp, #16]
    6a94:	4699      	mov	r9, r3
    6a96:	2200      	movs	r2, #0
    6a98:	2312      	movs	r3, #18
    6a9a:	e7ac      	b.n	69f6 <_dtoa_r+0x256>
    6a9c:	2301      	movs	r3, #1
    6a9e:	930c      	str	r3, [sp, #48]	; 0x30
    6aa0:	e7f5      	b.n	6a8e <_dtoa_r+0x2ee>
    6aa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6aa4:	9304      	str	r3, [sp, #16]
    6aa6:	4699      	mov	r9, r3
    6aa8:	e7b4      	b.n	6a14 <_dtoa_r+0x274>
    6aaa:	bf00      	nop
    6aac:	f3af 8000 	nop.w
    6ab0:	636f4361 	.word	0x636f4361
    6ab4:	3fd287a7 	.word	0x3fd287a7
    6ab8:	8b60c8b3 	.word	0x8b60c8b3
    6abc:	3fc68a28 	.word	0x3fc68a28
    6ac0:	509f79fb 	.word	0x509f79fb
    6ac4:	3fd34413 	.word	0x3fd34413
    6ac8:	7ff00000 	.word	0x7ff00000
    6acc:	0000b331 	.word	0x0000b331
    6ad0:	0000b328 	.word	0x0000b328
    6ad4:	0000ac19 	.word	0x0000ac19
    6ad8:	3ff80000 	.word	0x3ff80000
    6adc:	0000b3d8 	.word	0x0000b3d8
    6ae0:	0000b3b0 	.word	0x0000b3b0
    6ae4:	3101      	adds	r1, #1
    6ae6:	6069      	str	r1, [r5, #4]
    6ae8:	0052      	lsls	r2, r2, #1
    6aea:	e798      	b.n	6a1e <_dtoa_r+0x27e>
    6aec:	07e3      	lsls	r3, r4, #31
    6aee:	d508      	bpl.n	6b02 <_dtoa_r+0x362>
    6af0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    6af4:	e9d5 2300 	ldrd	r2, r3, [r5]
    6af8:	f002 ff1c 	bl	9934 <__aeabi_dmul>
    6afc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    6b00:	3601      	adds	r6, #1
    6b02:	1064      	asrs	r4, r4, #1
    6b04:	3508      	adds	r5, #8
    6b06:	2c00      	cmp	r4, #0
    6b08:	d1f0      	bne.n	6aec <_dtoa_r+0x34c>
    6b0a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    6b0e:	e9dd 0100 	ldrd	r0, r1, [sp]
    6b12:	f003 f839 	bl	9b88 <__aeabi_ddiv>
    6b16:	e9cd 0100 	strd	r0, r1, [sp]
    6b1a:	e01a      	b.n	6b52 <_dtoa_r+0x3b2>
    6b1c:	2602      	movs	r6, #2
    6b1e:	e7ae      	b.n	6a7e <_dtoa_r+0x2de>
    6b20:	f000 809f 	beq.w	6c62 <_dtoa_r+0x4c2>
    6b24:	f1ca 0400 	rsb	r4, sl, #0
    6b28:	4b9f      	ldr	r3, [pc, #636]	; (6da8 <_dtoa_r+0x608>)
    6b2a:	4da0      	ldr	r5, [pc, #640]	; (6dac <_dtoa_r+0x60c>)
    6b2c:	f004 020f 	and.w	r2, r4, #15
    6b30:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    6b34:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b38:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    6b3c:	f002 fefa 	bl	9934 <__aeabi_dmul>
    6b40:	e9cd 0100 	strd	r0, r1, [sp]
    6b44:	1124      	asrs	r4, r4, #4
    6b46:	2300      	movs	r3, #0
    6b48:	2602      	movs	r6, #2
    6b4a:	2c00      	cmp	r4, #0
    6b4c:	d17e      	bne.n	6c4c <_dtoa_r+0x4ac>
    6b4e:	2b00      	cmp	r3, #0
    6b50:	d1e1      	bne.n	6b16 <_dtoa_r+0x376>
    6b52:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6b54:	2b00      	cmp	r3, #0
    6b56:	f000 8086 	beq.w	6c66 <_dtoa_r+0x4c6>
    6b5a:	e9dd 4500 	ldrd	r4, r5, [sp]
    6b5e:	2200      	movs	r2, #0
    6b60:	4b93      	ldr	r3, [pc, #588]	; (6db0 <_dtoa_r+0x610>)
    6b62:	4620      	mov	r0, r4
    6b64:	4629      	mov	r1, r5
    6b66:	f003 f957 	bl	9e18 <__aeabi_dcmplt>
    6b6a:	2800      	cmp	r0, #0
    6b6c:	d07b      	beq.n	6c66 <_dtoa_r+0x4c6>
    6b6e:	f1b9 0f00 	cmp.w	r9, #0
    6b72:	d078      	beq.n	6c66 <_dtoa_r+0x4c6>
    6b74:	9b04      	ldr	r3, [sp, #16]
    6b76:	2b00      	cmp	r3, #0
    6b78:	dd35      	ble.n	6be6 <_dtoa_r+0x446>
    6b7a:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
    6b7e:	930a      	str	r3, [sp, #40]	; 0x28
    6b80:	4620      	mov	r0, r4
    6b82:	2200      	movs	r2, #0
    6b84:	4b8b      	ldr	r3, [pc, #556]	; (6db4 <_dtoa_r+0x614>)
    6b86:	4629      	mov	r1, r5
    6b88:	f002 fed4 	bl	9934 <__aeabi_dmul>
    6b8c:	e9cd 0100 	strd	r0, r1, [sp]
    6b90:	9c04      	ldr	r4, [sp, #16]
    6b92:	3601      	adds	r6, #1
    6b94:	4630      	mov	r0, r6
    6b96:	f002 fe63 	bl	9860 <__aeabi_i2d>
    6b9a:	e9dd 2300 	ldrd	r2, r3, [sp]
    6b9e:	f002 fec9 	bl	9934 <__aeabi_dmul>
    6ba2:	2200      	movs	r2, #0
    6ba4:	4b84      	ldr	r3, [pc, #528]	; (6db8 <_dtoa_r+0x618>)
    6ba6:	f002 fd0f 	bl	95c8 <__adddf3>
    6baa:	4606      	mov	r6, r0
    6bac:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
    6bb0:	2c00      	cmp	r4, #0
    6bb2:	d15c      	bne.n	6c6e <_dtoa_r+0x4ce>
    6bb4:	2200      	movs	r2, #0
    6bb6:	4b81      	ldr	r3, [pc, #516]	; (6dbc <_dtoa_r+0x61c>)
    6bb8:	e9dd 0100 	ldrd	r0, r1, [sp]
    6bbc:	f002 fd02 	bl	95c4 <__aeabi_dsub>
    6bc0:	4632      	mov	r2, r6
    6bc2:	463b      	mov	r3, r7
    6bc4:	e9cd 0100 	strd	r0, r1, [sp]
    6bc8:	f003 f944 	bl	9e54 <__aeabi_dcmpgt>
    6bcc:	2800      	cmp	r0, #0
    6bce:	f040 828c 	bne.w	70ea <_dtoa_r+0x94a>
    6bd2:	4632      	mov	r2, r6
    6bd4:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    6bd8:	e9dd 0100 	ldrd	r0, r1, [sp]
    6bdc:	f003 f91c 	bl	9e18 <__aeabi_dcmplt>
    6be0:	2800      	cmp	r0, #0
    6be2:	f040 8280 	bne.w	70e6 <_dtoa_r+0x946>
    6be6:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
    6bea:	e9cd 3400 	strd	r3, r4, [sp]
    6bee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6bf0:	2b00      	cmp	r3, #0
    6bf2:	f2c0 814f 	blt.w	6e94 <_dtoa_r+0x6f4>
    6bf6:	f1ba 0f0e 	cmp.w	sl, #14
    6bfa:	f300 814b 	bgt.w	6e94 <_dtoa_r+0x6f4>
    6bfe:	4b6a      	ldr	r3, [pc, #424]	; (6da8 <_dtoa_r+0x608>)
    6c00:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    6c04:	ed93 7b00 	vldr	d7, [r3]
    6c08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6c0a:	2b00      	cmp	r3, #0
    6c0c:	ed8d 7b04 	vstr	d7, [sp, #16]
    6c10:	f280 80d8 	bge.w	6dc4 <_dtoa_r+0x624>
    6c14:	f1b9 0f00 	cmp.w	r9, #0
    6c18:	f300 80d4 	bgt.w	6dc4 <_dtoa_r+0x624>
    6c1c:	f040 8262 	bne.w	70e4 <_dtoa_r+0x944>
    6c20:	2200      	movs	r2, #0
    6c22:	4b66      	ldr	r3, [pc, #408]	; (6dbc <_dtoa_r+0x61c>)
    6c24:	ec51 0b17 	vmov	r0, r1, d7
    6c28:	f002 fe84 	bl	9934 <__aeabi_dmul>
    6c2c:	e9dd 2300 	ldrd	r2, r3, [sp]
    6c30:	f003 f906 	bl	9e40 <__aeabi_dcmpge>
    6c34:	464c      	mov	r4, r9
    6c36:	464e      	mov	r6, r9
    6c38:	2800      	cmp	r0, #0
    6c3a:	f040 823b 	bne.w	70b4 <_dtoa_r+0x914>
    6c3e:	9d03      	ldr	r5, [sp, #12]
    6c40:	2331      	movs	r3, #49	; 0x31
    6c42:	f805 3b01 	strb.w	r3, [r5], #1
    6c46:	f10a 0a01 	add.w	sl, sl, #1
    6c4a:	e237      	b.n	70bc <_dtoa_r+0x91c>
    6c4c:	07e7      	lsls	r7, r4, #31
    6c4e:	d505      	bpl.n	6c5c <_dtoa_r+0x4bc>
    6c50:	e9d5 2300 	ldrd	r2, r3, [r5]
    6c54:	f002 fe6e 	bl	9934 <__aeabi_dmul>
    6c58:	3601      	adds	r6, #1
    6c5a:	2301      	movs	r3, #1
    6c5c:	1064      	asrs	r4, r4, #1
    6c5e:	3508      	adds	r5, #8
    6c60:	e773      	b.n	6b4a <_dtoa_r+0x3aa>
    6c62:	2602      	movs	r6, #2
    6c64:	e775      	b.n	6b52 <_dtoa_r+0x3b2>
    6c66:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    6c6a:	464c      	mov	r4, r9
    6c6c:	e792      	b.n	6b94 <_dtoa_r+0x3f4>
    6c6e:	4b4e      	ldr	r3, [pc, #312]	; (6da8 <_dtoa_r+0x608>)
    6c70:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    6c74:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    6c78:	9b03      	ldr	r3, [sp, #12]
    6c7a:	441c      	add	r4, r3
    6c7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6c7e:	2b00      	cmp	r3, #0
    6c80:	d046      	beq.n	6d10 <_dtoa_r+0x570>
    6c82:	4602      	mov	r2, r0
    6c84:	460b      	mov	r3, r1
    6c86:	2000      	movs	r0, #0
    6c88:	494d      	ldr	r1, [pc, #308]	; (6dc0 <_dtoa_r+0x620>)
    6c8a:	f002 ff7d 	bl	9b88 <__aeabi_ddiv>
    6c8e:	4632      	mov	r2, r6
    6c90:	463b      	mov	r3, r7
    6c92:	f002 fc97 	bl	95c4 <__aeabi_dsub>
    6c96:	9d03      	ldr	r5, [sp, #12]
    6c98:	4606      	mov	r6, r0
    6c9a:	460f      	mov	r7, r1
    6c9c:	e9dd 0100 	ldrd	r0, r1, [sp]
    6ca0:	f003 f8f8 	bl	9e94 <__aeabi_d2iz>
    6ca4:	9012      	str	r0, [sp, #72]	; 0x48
    6ca6:	f002 fddb 	bl	9860 <__aeabi_i2d>
    6caa:	4602      	mov	r2, r0
    6cac:	460b      	mov	r3, r1
    6cae:	e9dd 0100 	ldrd	r0, r1, [sp]
    6cb2:	f002 fc87 	bl	95c4 <__aeabi_dsub>
    6cb6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    6cb8:	3330      	adds	r3, #48	; 0x30
    6cba:	f805 3b01 	strb.w	r3, [r5], #1
    6cbe:	4632      	mov	r2, r6
    6cc0:	463b      	mov	r3, r7
    6cc2:	e9cd 0100 	strd	r0, r1, [sp]
    6cc6:	f003 f8a7 	bl	9e18 <__aeabi_dcmplt>
    6cca:	2800      	cmp	r0, #0
    6ccc:	d160      	bne.n	6d90 <_dtoa_r+0x5f0>
    6cce:	e9dd 2300 	ldrd	r2, r3, [sp]
    6cd2:	2000      	movs	r0, #0
    6cd4:	4936      	ldr	r1, [pc, #216]	; (6db0 <_dtoa_r+0x610>)
    6cd6:	f002 fc75 	bl	95c4 <__aeabi_dsub>
    6cda:	4632      	mov	r2, r6
    6cdc:	463b      	mov	r3, r7
    6cde:	f003 f89b 	bl	9e18 <__aeabi_dcmplt>
    6ce2:	2800      	cmp	r0, #0
    6ce4:	f040 80b4 	bne.w	6e50 <_dtoa_r+0x6b0>
    6ce8:	42a5      	cmp	r5, r4
    6cea:	f43f af7c 	beq.w	6be6 <_dtoa_r+0x446>
    6cee:	2200      	movs	r2, #0
    6cf0:	4b30      	ldr	r3, [pc, #192]	; (6db4 <_dtoa_r+0x614>)
    6cf2:	4630      	mov	r0, r6
    6cf4:	4639      	mov	r1, r7
    6cf6:	f002 fe1d 	bl	9934 <__aeabi_dmul>
    6cfa:	2200      	movs	r2, #0
    6cfc:	4606      	mov	r6, r0
    6cfe:	460f      	mov	r7, r1
    6d00:	4b2c      	ldr	r3, [pc, #176]	; (6db4 <_dtoa_r+0x614>)
    6d02:	e9dd 0100 	ldrd	r0, r1, [sp]
    6d06:	f002 fe15 	bl	9934 <__aeabi_dmul>
    6d0a:	e9cd 0100 	strd	r0, r1, [sp]
    6d0e:	e7c5      	b.n	6c9c <_dtoa_r+0x4fc>
    6d10:	4632      	mov	r2, r6
    6d12:	463b      	mov	r3, r7
    6d14:	f002 fe0e 	bl	9934 <__aeabi_dmul>
    6d18:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    6d1c:	9e03      	ldr	r6, [sp, #12]
    6d1e:	4625      	mov	r5, r4
    6d20:	e9dd 0100 	ldrd	r0, r1, [sp]
    6d24:	f003 f8b6 	bl	9e94 <__aeabi_d2iz>
    6d28:	4607      	mov	r7, r0
    6d2a:	f002 fd99 	bl	9860 <__aeabi_i2d>
    6d2e:	3730      	adds	r7, #48	; 0x30
    6d30:	4602      	mov	r2, r0
    6d32:	460b      	mov	r3, r1
    6d34:	e9dd 0100 	ldrd	r0, r1, [sp]
    6d38:	f002 fc44 	bl	95c4 <__aeabi_dsub>
    6d3c:	f806 7b01 	strb.w	r7, [r6], #1
    6d40:	42a6      	cmp	r6, r4
    6d42:	e9cd 0100 	strd	r0, r1, [sp]
    6d46:	f04f 0200 	mov.w	r2, #0
    6d4a:	d126      	bne.n	6d9a <_dtoa_r+0x5fa>
    6d4c:	4b1c      	ldr	r3, [pc, #112]	; (6dc0 <_dtoa_r+0x620>)
    6d4e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    6d52:	f002 fc39 	bl	95c8 <__adddf3>
    6d56:	4602      	mov	r2, r0
    6d58:	460b      	mov	r3, r1
    6d5a:	e9dd 0100 	ldrd	r0, r1, [sp]
    6d5e:	f003 f879 	bl	9e54 <__aeabi_dcmpgt>
    6d62:	2800      	cmp	r0, #0
    6d64:	d174      	bne.n	6e50 <_dtoa_r+0x6b0>
    6d66:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    6d6a:	2000      	movs	r0, #0
    6d6c:	4914      	ldr	r1, [pc, #80]	; (6dc0 <_dtoa_r+0x620>)
    6d6e:	f002 fc29 	bl	95c4 <__aeabi_dsub>
    6d72:	4602      	mov	r2, r0
    6d74:	460b      	mov	r3, r1
    6d76:	e9dd 0100 	ldrd	r0, r1, [sp]
    6d7a:	f003 f84d 	bl	9e18 <__aeabi_dcmplt>
    6d7e:	2800      	cmp	r0, #0
    6d80:	f43f af31 	beq.w	6be6 <_dtoa_r+0x446>
    6d84:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    6d88:	2b30      	cmp	r3, #48	; 0x30
    6d8a:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    6d8e:	d002      	beq.n	6d96 <_dtoa_r+0x5f6>
    6d90:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    6d94:	e04a      	b.n	6e2c <_dtoa_r+0x68c>
    6d96:	4615      	mov	r5, r2
    6d98:	e7f4      	b.n	6d84 <_dtoa_r+0x5e4>
    6d9a:	4b06      	ldr	r3, [pc, #24]	; (6db4 <_dtoa_r+0x614>)
    6d9c:	f002 fdca 	bl	9934 <__aeabi_dmul>
    6da0:	e9cd 0100 	strd	r0, r1, [sp]
    6da4:	e7bc      	b.n	6d20 <_dtoa_r+0x580>
    6da6:	bf00      	nop
    6da8:	0000b3d8 	.word	0x0000b3d8
    6dac:	0000b3b0 	.word	0x0000b3b0
    6db0:	3ff00000 	.word	0x3ff00000
    6db4:	40240000 	.word	0x40240000
    6db8:	401c0000 	.word	0x401c0000
    6dbc:	40140000 	.word	0x40140000
    6dc0:	3fe00000 	.word	0x3fe00000
    6dc4:	e9dd 6700 	ldrd	r6, r7, [sp]
    6dc8:	9d03      	ldr	r5, [sp, #12]
    6dca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    6dce:	4630      	mov	r0, r6
    6dd0:	4639      	mov	r1, r7
    6dd2:	f002 fed9 	bl	9b88 <__aeabi_ddiv>
    6dd6:	f003 f85d 	bl	9e94 <__aeabi_d2iz>
    6dda:	4604      	mov	r4, r0
    6ddc:	f002 fd40 	bl	9860 <__aeabi_i2d>
    6de0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    6de4:	f002 fda6 	bl	9934 <__aeabi_dmul>
    6de8:	4602      	mov	r2, r0
    6dea:	460b      	mov	r3, r1
    6dec:	4630      	mov	r0, r6
    6dee:	4639      	mov	r1, r7
    6df0:	f104 0630 	add.w	r6, r4, #48	; 0x30
    6df4:	f002 fbe6 	bl	95c4 <__aeabi_dsub>
    6df8:	f805 6b01 	strb.w	r6, [r5], #1
    6dfc:	9e03      	ldr	r6, [sp, #12]
    6dfe:	1bae      	subs	r6, r5, r6
    6e00:	45b1      	cmp	r9, r6
    6e02:	4602      	mov	r2, r0
    6e04:	460b      	mov	r3, r1
    6e06:	d138      	bne.n	6e7a <_dtoa_r+0x6da>
    6e08:	f002 fbde 	bl	95c8 <__adddf3>
    6e0c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    6e10:	4606      	mov	r6, r0
    6e12:	460f      	mov	r7, r1
    6e14:	f003 f81e 	bl	9e54 <__aeabi_dcmpgt>
    6e18:	b9c0      	cbnz	r0, 6e4c <_dtoa_r+0x6ac>
    6e1a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    6e1e:	4630      	mov	r0, r6
    6e20:	4639      	mov	r1, r7
    6e22:	f002 ffef 	bl	9e04 <__aeabi_dcmpeq>
    6e26:	b108      	cbz	r0, 6e2c <_dtoa_r+0x68c>
    6e28:	07e1      	lsls	r1, r4, #31
    6e2a:	d40f      	bmi.n	6e4c <_dtoa_r+0x6ac>
    6e2c:	4641      	mov	r1, r8
    6e2e:	4658      	mov	r0, fp
    6e30:	f001 f8ce 	bl	7fd0 <_Bfree>
    6e34:	2300      	movs	r3, #0
    6e36:	9a14      	ldr	r2, [sp, #80]	; 0x50
    6e38:	702b      	strb	r3, [r5, #0]
    6e3a:	f10a 0301 	add.w	r3, sl, #1
    6e3e:	6013      	str	r3, [r2, #0]
    6e40:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    6e42:	2b00      	cmp	r3, #0
    6e44:	f43f acf4 	beq.w	6830 <_dtoa_r+0x90>
    6e48:	601d      	str	r5, [r3, #0]
    6e4a:	e4f1      	b.n	6830 <_dtoa_r+0x90>
    6e4c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    6e50:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    6e54:	2a39      	cmp	r2, #57	; 0x39
    6e56:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
    6e5a:	d108      	bne.n	6e6e <_dtoa_r+0x6ce>
    6e5c:	9a03      	ldr	r2, [sp, #12]
    6e5e:	429a      	cmp	r2, r3
    6e60:	d109      	bne.n	6e76 <_dtoa_r+0x6d6>
    6e62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    6e64:	9903      	ldr	r1, [sp, #12]
    6e66:	3201      	adds	r2, #1
    6e68:	920a      	str	r2, [sp, #40]	; 0x28
    6e6a:	2230      	movs	r2, #48	; 0x30
    6e6c:	700a      	strb	r2, [r1, #0]
    6e6e:	781a      	ldrb	r2, [r3, #0]
    6e70:	3201      	adds	r2, #1
    6e72:	701a      	strb	r2, [r3, #0]
    6e74:	e78c      	b.n	6d90 <_dtoa_r+0x5f0>
    6e76:	461d      	mov	r5, r3
    6e78:	e7ea      	b.n	6e50 <_dtoa_r+0x6b0>
    6e7a:	2200      	movs	r2, #0
    6e7c:	4b9d      	ldr	r3, [pc, #628]	; (70f4 <_dtoa_r+0x954>)
    6e7e:	f002 fd59 	bl	9934 <__aeabi_dmul>
    6e82:	2200      	movs	r2, #0
    6e84:	2300      	movs	r3, #0
    6e86:	4606      	mov	r6, r0
    6e88:	460f      	mov	r7, r1
    6e8a:	f002 ffbb 	bl	9e04 <__aeabi_dcmpeq>
    6e8e:	2800      	cmp	r0, #0
    6e90:	d09b      	beq.n	6dca <_dtoa_r+0x62a>
    6e92:	e7cb      	b.n	6e2c <_dtoa_r+0x68c>
    6e94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    6e96:	2a00      	cmp	r2, #0
    6e98:	f000 80cb 	beq.w	7032 <_dtoa_r+0x892>
    6e9c:	9a08      	ldr	r2, [sp, #32]
    6e9e:	2a01      	cmp	r2, #1
    6ea0:	f300 80ae 	bgt.w	7000 <_dtoa_r+0x860>
    6ea4:	9a15      	ldr	r2, [sp, #84]	; 0x54
    6ea6:	2a00      	cmp	r2, #0
    6ea8:	f000 80a6 	beq.w	6ff8 <_dtoa_r+0x858>
    6eac:	f203 4333 	addw	r3, r3, #1075	; 0x433
    6eb0:	9c09      	ldr	r4, [sp, #36]	; 0x24
    6eb2:	9d06      	ldr	r5, [sp, #24]
    6eb4:	9a06      	ldr	r2, [sp, #24]
    6eb6:	441a      	add	r2, r3
    6eb8:	9206      	str	r2, [sp, #24]
    6eba:	9a07      	ldr	r2, [sp, #28]
    6ebc:	2101      	movs	r1, #1
    6ebe:	441a      	add	r2, r3
    6ec0:	4658      	mov	r0, fp
    6ec2:	9207      	str	r2, [sp, #28]
    6ec4:	f001 f964 	bl	8190 <__i2b>
    6ec8:	4606      	mov	r6, r0
    6eca:	2d00      	cmp	r5, #0
    6ecc:	dd0c      	ble.n	6ee8 <_dtoa_r+0x748>
    6ece:	9b07      	ldr	r3, [sp, #28]
    6ed0:	2b00      	cmp	r3, #0
    6ed2:	dd09      	ble.n	6ee8 <_dtoa_r+0x748>
    6ed4:	42ab      	cmp	r3, r5
    6ed6:	9a06      	ldr	r2, [sp, #24]
    6ed8:	bfa8      	it	ge
    6eda:	462b      	movge	r3, r5
    6edc:	1ad2      	subs	r2, r2, r3
    6ede:	9206      	str	r2, [sp, #24]
    6ee0:	9a07      	ldr	r2, [sp, #28]
    6ee2:	1aed      	subs	r5, r5, r3
    6ee4:	1ad3      	subs	r3, r2, r3
    6ee6:	9307      	str	r3, [sp, #28]
    6ee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6eea:	b1f3      	cbz	r3, 6f2a <_dtoa_r+0x78a>
    6eec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6eee:	2b00      	cmp	r3, #0
    6ef0:	f000 80a3 	beq.w	703a <_dtoa_r+0x89a>
    6ef4:	2c00      	cmp	r4, #0
    6ef6:	dd10      	ble.n	6f1a <_dtoa_r+0x77a>
    6ef8:	4631      	mov	r1, r6
    6efa:	4622      	mov	r2, r4
    6efc:	4658      	mov	r0, fp
    6efe:	f001 f9e1 	bl	82c4 <__pow5mult>
    6f02:	4642      	mov	r2, r8
    6f04:	4601      	mov	r1, r0
    6f06:	4606      	mov	r6, r0
    6f08:	4658      	mov	r0, fp
    6f0a:	f001 f94a 	bl	81a2 <__multiply>
    6f0e:	4641      	mov	r1, r8
    6f10:	4607      	mov	r7, r0
    6f12:	4658      	mov	r0, fp
    6f14:	f001 f85c 	bl	7fd0 <_Bfree>
    6f18:	46b8      	mov	r8, r7
    6f1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6f1c:	1b1a      	subs	r2, r3, r4
    6f1e:	d004      	beq.n	6f2a <_dtoa_r+0x78a>
    6f20:	4641      	mov	r1, r8
    6f22:	4658      	mov	r0, fp
    6f24:	f001 f9ce 	bl	82c4 <__pow5mult>
    6f28:	4680      	mov	r8, r0
    6f2a:	2101      	movs	r1, #1
    6f2c:	4658      	mov	r0, fp
    6f2e:	f001 f92f 	bl	8190 <__i2b>
    6f32:	9b10      	ldr	r3, [sp, #64]	; 0x40
    6f34:	2b00      	cmp	r3, #0
    6f36:	4604      	mov	r4, r0
    6f38:	f340 8081 	ble.w	703e <_dtoa_r+0x89e>
    6f3c:	461a      	mov	r2, r3
    6f3e:	4601      	mov	r1, r0
    6f40:	4658      	mov	r0, fp
    6f42:	f001 f9bf 	bl	82c4 <__pow5mult>
    6f46:	9b08      	ldr	r3, [sp, #32]
    6f48:	2b01      	cmp	r3, #1
    6f4a:	4604      	mov	r4, r0
    6f4c:	dd7a      	ble.n	7044 <_dtoa_r+0x8a4>
    6f4e:	2700      	movs	r7, #0
    6f50:	6923      	ldr	r3, [r4, #16]
    6f52:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    6f56:	6918      	ldr	r0, [r3, #16]
    6f58:	f001 f8ca 	bl	80f0 <__hi0bits>
    6f5c:	f1c0 0020 	rsb	r0, r0, #32
    6f60:	9b07      	ldr	r3, [sp, #28]
    6f62:	4418      	add	r0, r3
    6f64:	f010 001f 	ands.w	r0, r0, #31
    6f68:	f000 808b 	beq.w	7082 <_dtoa_r+0x8e2>
    6f6c:	f1c0 0320 	rsb	r3, r0, #32
    6f70:	2b04      	cmp	r3, #4
    6f72:	f340 8084 	ble.w	707e <_dtoa_r+0x8de>
    6f76:	f1c0 001c 	rsb	r0, r0, #28
    6f7a:	9b06      	ldr	r3, [sp, #24]
    6f7c:	4403      	add	r3, r0
    6f7e:	9306      	str	r3, [sp, #24]
    6f80:	9b07      	ldr	r3, [sp, #28]
    6f82:	4403      	add	r3, r0
    6f84:	4405      	add	r5, r0
    6f86:	9307      	str	r3, [sp, #28]
    6f88:	9b06      	ldr	r3, [sp, #24]
    6f8a:	2b00      	cmp	r3, #0
    6f8c:	dd05      	ble.n	6f9a <_dtoa_r+0x7fa>
    6f8e:	4641      	mov	r1, r8
    6f90:	461a      	mov	r2, r3
    6f92:	4658      	mov	r0, fp
    6f94:	f001 f9e4 	bl	8360 <__lshift>
    6f98:	4680      	mov	r8, r0
    6f9a:	9b07      	ldr	r3, [sp, #28]
    6f9c:	2b00      	cmp	r3, #0
    6f9e:	dd05      	ble.n	6fac <_dtoa_r+0x80c>
    6fa0:	4621      	mov	r1, r4
    6fa2:	461a      	mov	r2, r3
    6fa4:	4658      	mov	r0, fp
    6fa6:	f001 f9db 	bl	8360 <__lshift>
    6faa:	4604      	mov	r4, r0
    6fac:	9b11      	ldr	r3, [sp, #68]	; 0x44
    6fae:	2b00      	cmp	r3, #0
    6fb0:	d069      	beq.n	7086 <_dtoa_r+0x8e6>
    6fb2:	4621      	mov	r1, r4
    6fb4:	4640      	mov	r0, r8
    6fb6:	f001 fa26 	bl	8406 <__mcmp>
    6fba:	2800      	cmp	r0, #0
    6fbc:	da63      	bge.n	7086 <_dtoa_r+0x8e6>
    6fbe:	2300      	movs	r3, #0
    6fc0:	4641      	mov	r1, r8
    6fc2:	220a      	movs	r2, #10
    6fc4:	4658      	mov	r0, fp
    6fc6:	f001 f81a 	bl	7ffe <__multadd>
    6fca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6fcc:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    6fd0:	4680      	mov	r8, r0
    6fd2:	2b00      	cmp	r3, #0
    6fd4:	f000 817c 	beq.w	72d0 <_dtoa_r+0xb30>
    6fd8:	2300      	movs	r3, #0
    6fda:	4631      	mov	r1, r6
    6fdc:	220a      	movs	r2, #10
    6fde:	4658      	mov	r0, fp
    6fe0:	f001 f80d 	bl	7ffe <__multadd>
    6fe4:	9b04      	ldr	r3, [sp, #16]
    6fe6:	2b00      	cmp	r3, #0
    6fe8:	4606      	mov	r6, r0
    6fea:	f300 808b 	bgt.w	7104 <_dtoa_r+0x964>
    6fee:	9b08      	ldr	r3, [sp, #32]
    6ff0:	2b02      	cmp	r3, #2
    6ff2:	f340 8087 	ble.w	7104 <_dtoa_r+0x964>
    6ff6:	e04e      	b.n	7096 <_dtoa_r+0x8f6>
    6ff8:	9b16      	ldr	r3, [sp, #88]	; 0x58
    6ffa:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    6ffe:	e757      	b.n	6eb0 <_dtoa_r+0x710>
    7000:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7002:	f109 34ff 	add.w	r4, r9, #4294967295	; 0xffffffff
    7006:	42a3      	cmp	r3, r4
    7008:	bfbf      	itttt	lt
    700a:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
    700c:	9409      	strlt	r4, [sp, #36]	; 0x24
    700e:	1ae2      	sublt	r2, r4, r3
    7010:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    7012:	bfbb      	ittet	lt
    7014:	189b      	addlt	r3, r3, r2
    7016:	9310      	strlt	r3, [sp, #64]	; 0x40
    7018:	1b1c      	subge	r4, r3, r4
    701a:	2400      	movlt	r4, #0
    701c:	f1b9 0f00 	cmp.w	r9, #0
    7020:	bfb5      	itete	lt
    7022:	9b06      	ldrlt	r3, [sp, #24]
    7024:	9d06      	ldrge	r5, [sp, #24]
    7026:	eba3 0509 	sublt.w	r5, r3, r9
    702a:	464b      	movge	r3, r9
    702c:	bfb8      	it	lt
    702e:	2300      	movlt	r3, #0
    7030:	e740      	b.n	6eb4 <_dtoa_r+0x714>
    7032:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7034:	9d06      	ldr	r5, [sp, #24]
    7036:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    7038:	e747      	b.n	6eca <_dtoa_r+0x72a>
    703a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    703c:	e770      	b.n	6f20 <_dtoa_r+0x780>
    703e:	9b08      	ldr	r3, [sp, #32]
    7040:	2b01      	cmp	r3, #1
    7042:	dc18      	bgt.n	7076 <_dtoa_r+0x8d6>
    7044:	9b00      	ldr	r3, [sp, #0]
    7046:	b9b3      	cbnz	r3, 7076 <_dtoa_r+0x8d6>
    7048:	9b01      	ldr	r3, [sp, #4]
    704a:	f3c3 0313 	ubfx	r3, r3, #0, #20
    704e:	b9a3      	cbnz	r3, 707a <_dtoa_r+0x8da>
    7050:	9b01      	ldr	r3, [sp, #4]
    7052:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    7056:	0d3f      	lsrs	r7, r7, #20
    7058:	053f      	lsls	r7, r7, #20
    705a:	b137      	cbz	r7, 706a <_dtoa_r+0x8ca>
    705c:	9b06      	ldr	r3, [sp, #24]
    705e:	3301      	adds	r3, #1
    7060:	9306      	str	r3, [sp, #24]
    7062:	9b07      	ldr	r3, [sp, #28]
    7064:	3301      	adds	r3, #1
    7066:	9307      	str	r3, [sp, #28]
    7068:	2701      	movs	r7, #1
    706a:	9b10      	ldr	r3, [sp, #64]	; 0x40
    706c:	2b00      	cmp	r3, #0
    706e:	f47f af6f 	bne.w	6f50 <_dtoa_r+0x7b0>
    7072:	2001      	movs	r0, #1
    7074:	e774      	b.n	6f60 <_dtoa_r+0x7c0>
    7076:	2700      	movs	r7, #0
    7078:	e7f7      	b.n	706a <_dtoa_r+0x8ca>
    707a:	9f00      	ldr	r7, [sp, #0]
    707c:	e7f5      	b.n	706a <_dtoa_r+0x8ca>
    707e:	d083      	beq.n	6f88 <_dtoa_r+0x7e8>
    7080:	4618      	mov	r0, r3
    7082:	301c      	adds	r0, #28
    7084:	e779      	b.n	6f7a <_dtoa_r+0x7da>
    7086:	f1b9 0f00 	cmp.w	r9, #0
    708a:	dc35      	bgt.n	70f8 <_dtoa_r+0x958>
    708c:	9b08      	ldr	r3, [sp, #32]
    708e:	2b02      	cmp	r3, #2
    7090:	dd32      	ble.n	70f8 <_dtoa_r+0x958>
    7092:	f8cd 9010 	str.w	r9, [sp, #16]
    7096:	9b04      	ldr	r3, [sp, #16]
    7098:	b963      	cbnz	r3, 70b4 <_dtoa_r+0x914>
    709a:	4621      	mov	r1, r4
    709c:	2205      	movs	r2, #5
    709e:	4658      	mov	r0, fp
    70a0:	f000 ffad 	bl	7ffe <__multadd>
    70a4:	4601      	mov	r1, r0
    70a6:	4604      	mov	r4, r0
    70a8:	4640      	mov	r0, r8
    70aa:	f001 f9ac 	bl	8406 <__mcmp>
    70ae:	2800      	cmp	r0, #0
    70b0:	f73f adc5 	bgt.w	6c3e <_dtoa_r+0x49e>
    70b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    70b6:	9d03      	ldr	r5, [sp, #12]
    70b8:	ea6f 0a03 	mvn.w	sl, r3
    70bc:	2700      	movs	r7, #0
    70be:	4621      	mov	r1, r4
    70c0:	4658      	mov	r0, fp
    70c2:	f000 ff85 	bl	7fd0 <_Bfree>
    70c6:	2e00      	cmp	r6, #0
    70c8:	f43f aeb0 	beq.w	6e2c <_dtoa_r+0x68c>
    70cc:	b12f      	cbz	r7, 70da <_dtoa_r+0x93a>
    70ce:	42b7      	cmp	r7, r6
    70d0:	d003      	beq.n	70da <_dtoa_r+0x93a>
    70d2:	4639      	mov	r1, r7
    70d4:	4658      	mov	r0, fp
    70d6:	f000 ff7b 	bl	7fd0 <_Bfree>
    70da:	4631      	mov	r1, r6
    70dc:	4658      	mov	r0, fp
    70de:	f000 ff77 	bl	7fd0 <_Bfree>
    70e2:	e6a3      	b.n	6e2c <_dtoa_r+0x68c>
    70e4:	2400      	movs	r4, #0
    70e6:	4626      	mov	r6, r4
    70e8:	e7e4      	b.n	70b4 <_dtoa_r+0x914>
    70ea:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    70ee:	4626      	mov	r6, r4
    70f0:	e5a5      	b.n	6c3e <_dtoa_r+0x49e>
    70f2:	bf00      	nop
    70f4:	40240000 	.word	0x40240000
    70f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    70fa:	f8cd 9010 	str.w	r9, [sp, #16]
    70fe:	2b00      	cmp	r3, #0
    7100:	f000 80ed 	beq.w	72de <_dtoa_r+0xb3e>
    7104:	2d00      	cmp	r5, #0
    7106:	dd05      	ble.n	7114 <_dtoa_r+0x974>
    7108:	4631      	mov	r1, r6
    710a:	462a      	mov	r2, r5
    710c:	4658      	mov	r0, fp
    710e:	f001 f927 	bl	8360 <__lshift>
    7112:	4606      	mov	r6, r0
    7114:	2f00      	cmp	r7, #0
    7116:	d056      	beq.n	71c6 <_dtoa_r+0xa26>
    7118:	6871      	ldr	r1, [r6, #4]
    711a:	4658      	mov	r0, fp
    711c:	f000 ff24 	bl	7f68 <_Balloc>
    7120:	6932      	ldr	r2, [r6, #16]
    7122:	3202      	adds	r2, #2
    7124:	4605      	mov	r5, r0
    7126:	0092      	lsls	r2, r2, #2
    7128:	f106 010c 	add.w	r1, r6, #12
    712c:	300c      	adds	r0, #12
    712e:	f7fd f89b 	bl	4268 <memcpy>
    7132:	2201      	movs	r2, #1
    7134:	4629      	mov	r1, r5
    7136:	4658      	mov	r0, fp
    7138:	f001 f912 	bl	8360 <__lshift>
    713c:	9b03      	ldr	r3, [sp, #12]
    713e:	f103 0901 	add.w	r9, r3, #1
    7142:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    7146:	4413      	add	r3, r2
    7148:	9309      	str	r3, [sp, #36]	; 0x24
    714a:	9b00      	ldr	r3, [sp, #0]
    714c:	f003 0301 	and.w	r3, r3, #1
    7150:	4637      	mov	r7, r6
    7152:	9307      	str	r3, [sp, #28]
    7154:	4606      	mov	r6, r0
    7156:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
    715a:	4621      	mov	r1, r4
    715c:	4640      	mov	r0, r8
    715e:	9300      	str	r3, [sp, #0]
    7160:	f7ff fa94 	bl	668c <quorem>
    7164:	4603      	mov	r3, r0
    7166:	3330      	adds	r3, #48	; 0x30
    7168:	9004      	str	r0, [sp, #16]
    716a:	4639      	mov	r1, r7
    716c:	4640      	mov	r0, r8
    716e:	930a      	str	r3, [sp, #40]	; 0x28
    7170:	f001 f949 	bl	8406 <__mcmp>
    7174:	4632      	mov	r2, r6
    7176:	9006      	str	r0, [sp, #24]
    7178:	4621      	mov	r1, r4
    717a:	4658      	mov	r0, fp
    717c:	f001 f95d 	bl	843a <__mdiff>
    7180:	68c2      	ldr	r2, [r0, #12]
    7182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7184:	4605      	mov	r5, r0
    7186:	bb02      	cbnz	r2, 71ca <_dtoa_r+0xa2a>
    7188:	4601      	mov	r1, r0
    718a:	4640      	mov	r0, r8
    718c:	f001 f93b 	bl	8406 <__mcmp>
    7190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7192:	4602      	mov	r2, r0
    7194:	4629      	mov	r1, r5
    7196:	4658      	mov	r0, fp
    7198:	920c      	str	r2, [sp, #48]	; 0x30
    719a:	930a      	str	r3, [sp, #40]	; 0x28
    719c:	f000 ff18 	bl	7fd0 <_Bfree>
    71a0:	9b08      	ldr	r3, [sp, #32]
    71a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    71a4:	ea43 0102 	orr.w	r1, r3, r2
    71a8:	9b07      	ldr	r3, [sp, #28]
    71aa:	430b      	orrs	r3, r1
    71ac:	464d      	mov	r5, r9
    71ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    71b0:	d10d      	bne.n	71ce <_dtoa_r+0xa2e>
    71b2:	2b39      	cmp	r3, #57	; 0x39
    71b4:	d027      	beq.n	7206 <_dtoa_r+0xa66>
    71b6:	9a06      	ldr	r2, [sp, #24]
    71b8:	2a00      	cmp	r2, #0
    71ba:	dd01      	ble.n	71c0 <_dtoa_r+0xa20>
    71bc:	9b04      	ldr	r3, [sp, #16]
    71be:	3331      	adds	r3, #49	; 0x31
    71c0:	9a00      	ldr	r2, [sp, #0]
    71c2:	7013      	strb	r3, [r2, #0]
    71c4:	e77b      	b.n	70be <_dtoa_r+0x91e>
    71c6:	4630      	mov	r0, r6
    71c8:	e7b8      	b.n	713c <_dtoa_r+0x99c>
    71ca:	2201      	movs	r2, #1
    71cc:	e7e2      	b.n	7194 <_dtoa_r+0x9f4>
    71ce:	9906      	ldr	r1, [sp, #24]
    71d0:	2900      	cmp	r1, #0
    71d2:	db04      	blt.n	71de <_dtoa_r+0xa3e>
    71d4:	9808      	ldr	r0, [sp, #32]
    71d6:	4301      	orrs	r1, r0
    71d8:	9807      	ldr	r0, [sp, #28]
    71da:	4301      	orrs	r1, r0
    71dc:	d11e      	bne.n	721c <_dtoa_r+0xa7c>
    71de:	2a00      	cmp	r2, #0
    71e0:	ddee      	ble.n	71c0 <_dtoa_r+0xa20>
    71e2:	4641      	mov	r1, r8
    71e4:	2201      	movs	r2, #1
    71e6:	4658      	mov	r0, fp
    71e8:	9306      	str	r3, [sp, #24]
    71ea:	f001 f8b9 	bl	8360 <__lshift>
    71ee:	4621      	mov	r1, r4
    71f0:	4680      	mov	r8, r0
    71f2:	f001 f908 	bl	8406 <__mcmp>
    71f6:	2800      	cmp	r0, #0
    71f8:	9b06      	ldr	r3, [sp, #24]
    71fa:	dc02      	bgt.n	7202 <_dtoa_r+0xa62>
    71fc:	d1e0      	bne.n	71c0 <_dtoa_r+0xa20>
    71fe:	07da      	lsls	r2, r3, #31
    7200:	d5de      	bpl.n	71c0 <_dtoa_r+0xa20>
    7202:	2b39      	cmp	r3, #57	; 0x39
    7204:	d1da      	bne.n	71bc <_dtoa_r+0xa1c>
    7206:	9a00      	ldr	r2, [sp, #0]
    7208:	2339      	movs	r3, #57	; 0x39
    720a:	7013      	strb	r3, [r2, #0]
    720c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    7210:	2b39      	cmp	r3, #57	; 0x39
    7212:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    7216:	d047      	beq.n	72a8 <_dtoa_r+0xb08>
    7218:	3301      	adds	r3, #1
    721a:	e7d2      	b.n	71c2 <_dtoa_r+0xa22>
    721c:	2a00      	cmp	r2, #0
    721e:	dd03      	ble.n	7228 <_dtoa_r+0xa88>
    7220:	2b39      	cmp	r3, #57	; 0x39
    7222:	d0f0      	beq.n	7206 <_dtoa_r+0xa66>
    7224:	3301      	adds	r3, #1
    7226:	e7cb      	b.n	71c0 <_dtoa_r+0xa20>
    7228:	9a09      	ldr	r2, [sp, #36]	; 0x24
    722a:	f809 3c01 	strb.w	r3, [r9, #-1]
    722e:	4591      	cmp	r9, r2
    7230:	d021      	beq.n	7276 <_dtoa_r+0xad6>
    7232:	4641      	mov	r1, r8
    7234:	2300      	movs	r3, #0
    7236:	220a      	movs	r2, #10
    7238:	4658      	mov	r0, fp
    723a:	f000 fee0 	bl	7ffe <__multadd>
    723e:	42b7      	cmp	r7, r6
    7240:	4680      	mov	r8, r0
    7242:	f04f 0300 	mov.w	r3, #0
    7246:	f04f 020a 	mov.w	r2, #10
    724a:	4639      	mov	r1, r7
    724c:	4658      	mov	r0, fp
    724e:	d106      	bne.n	725e <_dtoa_r+0xabe>
    7250:	f000 fed5 	bl	7ffe <__multadd>
    7254:	4607      	mov	r7, r0
    7256:	4606      	mov	r6, r0
    7258:	f109 0901 	add.w	r9, r9, #1
    725c:	e77b      	b.n	7156 <_dtoa_r+0x9b6>
    725e:	f000 fece 	bl	7ffe <__multadd>
    7262:	4631      	mov	r1, r6
    7264:	4607      	mov	r7, r0
    7266:	2300      	movs	r3, #0
    7268:	220a      	movs	r2, #10
    726a:	4658      	mov	r0, fp
    726c:	f000 fec7 	bl	7ffe <__multadd>
    7270:	4606      	mov	r6, r0
    7272:	e7f1      	b.n	7258 <_dtoa_r+0xab8>
    7274:	2700      	movs	r7, #0
    7276:	4641      	mov	r1, r8
    7278:	2201      	movs	r2, #1
    727a:	4658      	mov	r0, fp
    727c:	9300      	str	r3, [sp, #0]
    727e:	f001 f86f 	bl	8360 <__lshift>
    7282:	4621      	mov	r1, r4
    7284:	4680      	mov	r8, r0
    7286:	f001 f8be 	bl	8406 <__mcmp>
    728a:	2800      	cmp	r0, #0
    728c:	dcbe      	bgt.n	720c <_dtoa_r+0xa6c>
    728e:	d102      	bne.n	7296 <_dtoa_r+0xaf6>
    7290:	9b00      	ldr	r3, [sp, #0]
    7292:	07db      	lsls	r3, r3, #31
    7294:	d4ba      	bmi.n	720c <_dtoa_r+0xa6c>
    7296:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    729a:	2b30      	cmp	r3, #48	; 0x30
    729c:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    72a0:	f47f af0d 	bne.w	70be <_dtoa_r+0x91e>
    72a4:	4615      	mov	r5, r2
    72a6:	e7f6      	b.n	7296 <_dtoa_r+0xaf6>
    72a8:	9b03      	ldr	r3, [sp, #12]
    72aa:	4293      	cmp	r3, r2
    72ac:	d104      	bne.n	72b8 <_dtoa_r+0xb18>
    72ae:	f10a 0a01 	add.w	sl, sl, #1
    72b2:	2331      	movs	r3, #49	; 0x31
    72b4:	9a03      	ldr	r2, [sp, #12]
    72b6:	e784      	b.n	71c2 <_dtoa_r+0xa22>
    72b8:	4615      	mov	r5, r2
    72ba:	e7a7      	b.n	720c <_dtoa_r+0xa6c>
    72bc:	4b13      	ldr	r3, [pc, #76]	; (730c <_dtoa_r+0xb6c>)
    72be:	f7ff bad6 	b.w	686e <_dtoa_r+0xce>
    72c2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    72c4:	2b00      	cmp	r3, #0
    72c6:	f47f aaae 	bne.w	6826 <_dtoa_r+0x86>
    72ca:	4b11      	ldr	r3, [pc, #68]	; (7310 <_dtoa_r+0xb70>)
    72cc:	f7ff bacf 	b.w	686e <_dtoa_r+0xce>
    72d0:	9b04      	ldr	r3, [sp, #16]
    72d2:	2b00      	cmp	r3, #0
    72d4:	dc03      	bgt.n	72de <_dtoa_r+0xb3e>
    72d6:	9b08      	ldr	r3, [sp, #32]
    72d8:	2b02      	cmp	r3, #2
    72da:	f73f aedc 	bgt.w	7096 <_dtoa_r+0x8f6>
    72de:	9d03      	ldr	r5, [sp, #12]
    72e0:	4621      	mov	r1, r4
    72e2:	4640      	mov	r0, r8
    72e4:	f7ff f9d2 	bl	668c <quorem>
    72e8:	f100 0330 	add.w	r3, r0, #48	; 0x30
    72ec:	f805 3b01 	strb.w	r3, [r5], #1
    72f0:	9a03      	ldr	r2, [sp, #12]
    72f2:	9904      	ldr	r1, [sp, #16]
    72f4:	1aaa      	subs	r2, r5, r2
    72f6:	4291      	cmp	r1, r2
    72f8:	ddbc      	ble.n	7274 <_dtoa_r+0xad4>
    72fa:	4641      	mov	r1, r8
    72fc:	2300      	movs	r3, #0
    72fe:	220a      	movs	r2, #10
    7300:	4658      	mov	r0, fp
    7302:	f000 fe7c 	bl	7ffe <__multadd>
    7306:	4680      	mov	r8, r0
    7308:	e7ea      	b.n	72e0 <_dtoa_r+0xb40>
    730a:	bf00      	nop
    730c:	0000ac18 	.word	0x0000ac18
    7310:	0000b328 	.word	0x0000b328

00007314 <__sflush_r>:
__sflush_r():
    7314:	898a      	ldrh	r2, [r1, #12]
    7316:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    731a:	4605      	mov	r5, r0
    731c:	0710      	lsls	r0, r2, #28
    731e:	460c      	mov	r4, r1
    7320:	d458      	bmi.n	73d4 <__sflush_r+0xc0>
    7322:	684b      	ldr	r3, [r1, #4]
    7324:	2b00      	cmp	r3, #0
    7326:	dc05      	bgt.n	7334 <__sflush_r+0x20>
    7328:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    732a:	2b00      	cmp	r3, #0
    732c:	dc02      	bgt.n	7334 <__sflush_r+0x20>
    732e:	2000      	movs	r0, #0
    7330:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    7334:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    7336:	2e00      	cmp	r6, #0
    7338:	d0f9      	beq.n	732e <__sflush_r+0x1a>
    733a:	2300      	movs	r3, #0
    733c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    7340:	682f      	ldr	r7, [r5, #0]
    7342:	602b      	str	r3, [r5, #0]
    7344:	d032      	beq.n	73ac <__sflush_r+0x98>
    7346:	6d60      	ldr	r0, [r4, #84]	; 0x54
    7348:	89a3      	ldrh	r3, [r4, #12]
    734a:	075a      	lsls	r2, r3, #29
    734c:	d505      	bpl.n	735a <__sflush_r+0x46>
    734e:	6863      	ldr	r3, [r4, #4]
    7350:	1ac0      	subs	r0, r0, r3
    7352:	6b63      	ldr	r3, [r4, #52]	; 0x34
    7354:	b10b      	cbz	r3, 735a <__sflush_r+0x46>
    7356:	6c23      	ldr	r3, [r4, #64]	; 0x40
    7358:	1ac0      	subs	r0, r0, r3
    735a:	2300      	movs	r3, #0
    735c:	4602      	mov	r2, r0
    735e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    7360:	6a21      	ldr	r1, [r4, #32]
    7362:	4628      	mov	r0, r5
    7364:	47b0      	blx	r6
    7366:	1c43      	adds	r3, r0, #1
    7368:	89a3      	ldrh	r3, [r4, #12]
    736a:	d106      	bne.n	737a <__sflush_r+0x66>
    736c:	6829      	ldr	r1, [r5, #0]
    736e:	291d      	cmp	r1, #29
    7370:	d82c      	bhi.n	73cc <__sflush_r+0xb8>
    7372:	4a2a      	ldr	r2, [pc, #168]	; (741c <__sflush_r+0x108>)
    7374:	40ca      	lsrs	r2, r1
    7376:	07d6      	lsls	r6, r2, #31
    7378:	d528      	bpl.n	73cc <__sflush_r+0xb8>
    737a:	2200      	movs	r2, #0
    737c:	6062      	str	r2, [r4, #4]
    737e:	04d9      	lsls	r1, r3, #19
    7380:	6922      	ldr	r2, [r4, #16]
    7382:	6022      	str	r2, [r4, #0]
    7384:	d504      	bpl.n	7390 <__sflush_r+0x7c>
    7386:	1c42      	adds	r2, r0, #1
    7388:	d101      	bne.n	738e <__sflush_r+0x7a>
    738a:	682b      	ldr	r3, [r5, #0]
    738c:	b903      	cbnz	r3, 7390 <__sflush_r+0x7c>
    738e:	6560      	str	r0, [r4, #84]	; 0x54
    7390:	6b61      	ldr	r1, [r4, #52]	; 0x34
    7392:	602f      	str	r7, [r5, #0]
    7394:	2900      	cmp	r1, #0
    7396:	d0ca      	beq.n	732e <__sflush_r+0x1a>
    7398:	f104 0344 	add.w	r3, r4, #68	; 0x44
    739c:	4299      	cmp	r1, r3
    739e:	d002      	beq.n	73a6 <__sflush_r+0x92>
    73a0:	4628      	mov	r0, r5
    73a2:	f7fc ff91 	bl	42c8 <_free_r>
    73a6:	2000      	movs	r0, #0
    73a8:	6360      	str	r0, [r4, #52]	; 0x34
    73aa:	e7c1      	b.n	7330 <__sflush_r+0x1c>
    73ac:	6a21      	ldr	r1, [r4, #32]
    73ae:	2301      	movs	r3, #1
    73b0:	4628      	mov	r0, r5
    73b2:	47b0      	blx	r6
    73b4:	1c41      	adds	r1, r0, #1
    73b6:	d1c7      	bne.n	7348 <__sflush_r+0x34>
    73b8:	682b      	ldr	r3, [r5, #0]
    73ba:	2b00      	cmp	r3, #0
    73bc:	d0c4      	beq.n	7348 <__sflush_r+0x34>
    73be:	2b1d      	cmp	r3, #29
    73c0:	d001      	beq.n	73c6 <__sflush_r+0xb2>
    73c2:	2b16      	cmp	r3, #22
    73c4:	d101      	bne.n	73ca <__sflush_r+0xb6>
    73c6:	602f      	str	r7, [r5, #0]
    73c8:	e7b1      	b.n	732e <__sflush_r+0x1a>
    73ca:	89a3      	ldrh	r3, [r4, #12]
    73cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    73d0:	81a3      	strh	r3, [r4, #12]
    73d2:	e7ad      	b.n	7330 <__sflush_r+0x1c>
    73d4:	690f      	ldr	r7, [r1, #16]
    73d6:	2f00      	cmp	r7, #0
    73d8:	d0a9      	beq.n	732e <__sflush_r+0x1a>
    73da:	0793      	lsls	r3, r2, #30
    73dc:	680e      	ldr	r6, [r1, #0]
    73de:	bf08      	it	eq
    73e0:	694b      	ldreq	r3, [r1, #20]
    73e2:	600f      	str	r7, [r1, #0]
    73e4:	bf18      	it	ne
    73e6:	2300      	movne	r3, #0
    73e8:	eba6 0807 	sub.w	r8, r6, r7
    73ec:	608b      	str	r3, [r1, #8]
    73ee:	f1b8 0f00 	cmp.w	r8, #0
    73f2:	dd9c      	ble.n	732e <__sflush_r+0x1a>
    73f4:	4643      	mov	r3, r8
    73f6:	463a      	mov	r2, r7
    73f8:	6a21      	ldr	r1, [r4, #32]
    73fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    73fc:	4628      	mov	r0, r5
    73fe:	47b0      	blx	r6
    7400:	2800      	cmp	r0, #0
    7402:	dc06      	bgt.n	7412 <__sflush_r+0xfe>
    7404:	89a3      	ldrh	r3, [r4, #12]
    7406:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    740a:	81a3      	strh	r3, [r4, #12]
    740c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    7410:	e78e      	b.n	7330 <__sflush_r+0x1c>
    7412:	4407      	add	r7, r0
    7414:	eba8 0800 	sub.w	r8, r8, r0
    7418:	e7e9      	b.n	73ee <__sflush_r+0xda>
    741a:	bf00      	nop
    741c:	20400001 	.word	0x20400001

00007420 <_fflush_r>:
_fflush_r():
    7420:	b538      	push	{r3, r4, r5, lr}
    7422:	690b      	ldr	r3, [r1, #16]
    7424:	4605      	mov	r5, r0
    7426:	460c      	mov	r4, r1
    7428:	b913      	cbnz	r3, 7430 <_fflush_r+0x10>
    742a:	2500      	movs	r5, #0
    742c:	4628      	mov	r0, r5
    742e:	bd38      	pop	{r3, r4, r5, pc}
    7430:	b118      	cbz	r0, 743a <_fflush_r+0x1a>
    7432:	6983      	ldr	r3, [r0, #24]
    7434:	b90b      	cbnz	r3, 743a <_fflush_r+0x1a>
    7436:	f000 f899 	bl	756c <__sinit>
    743a:	4b14      	ldr	r3, [pc, #80]	; (748c <_fflush_r+0x6c>)
    743c:	429c      	cmp	r4, r3
    743e:	d11b      	bne.n	7478 <_fflush_r+0x58>
    7440:	686c      	ldr	r4, [r5, #4]
    7442:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7446:	2b00      	cmp	r3, #0
    7448:	d0ef      	beq.n	742a <_fflush_r+0xa>
    744a:	6e62      	ldr	r2, [r4, #100]	; 0x64
    744c:	07d0      	lsls	r0, r2, #31
    744e:	d404      	bmi.n	745a <_fflush_r+0x3a>
    7450:	0599      	lsls	r1, r3, #22
    7452:	d402      	bmi.n	745a <_fflush_r+0x3a>
    7454:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7456:	f7fc fef4 	bl	4242 <__retarget_lock_acquire_recursive>
    745a:	4628      	mov	r0, r5
    745c:	4621      	mov	r1, r4
    745e:	f7ff ff59 	bl	7314 <__sflush_r>
    7462:	6e63      	ldr	r3, [r4, #100]	; 0x64
    7464:	07da      	lsls	r2, r3, #31
    7466:	4605      	mov	r5, r0
    7468:	d4e0      	bmi.n	742c <_fflush_r+0xc>
    746a:	89a3      	ldrh	r3, [r4, #12]
    746c:	059b      	lsls	r3, r3, #22
    746e:	d4dd      	bmi.n	742c <_fflush_r+0xc>
    7470:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7472:	f7fc fee7 	bl	4244 <__retarget_lock_release_recursive>
    7476:	e7d9      	b.n	742c <_fflush_r+0xc>
    7478:	4b05      	ldr	r3, [pc, #20]	; (7490 <_fflush_r+0x70>)
    747a:	429c      	cmp	r4, r3
    747c:	d101      	bne.n	7482 <_fflush_r+0x62>
    747e:	68ac      	ldr	r4, [r5, #8]
    7480:	e7df      	b.n	7442 <_fflush_r+0x22>
    7482:	4b04      	ldr	r3, [pc, #16]	; (7494 <_fflush_r+0x74>)
    7484:	429c      	cmp	r4, r3
    7486:	bf08      	it	eq
    7488:	68ec      	ldreq	r4, [r5, #12]
    748a:	e7da      	b.n	7442 <_fflush_r+0x22>
    748c:	0000b358 	.word	0x0000b358
    7490:	0000b378 	.word	0x0000b378
    7494:	0000b338 	.word	0x0000b338

00007498 <fflush>:
fflush():
    7498:	4601      	mov	r1, r0
    749a:	b920      	cbnz	r0, 74a6 <fflush+0xe>
    749c:	4b04      	ldr	r3, [pc, #16]	; (74b0 <fflush+0x18>)
    749e:	4905      	ldr	r1, [pc, #20]	; (74b4 <fflush+0x1c>)
    74a0:	6818      	ldr	r0, [r3, #0]
    74a2:	f000 b8fd 	b.w	76a0 <_fwalk_reent>
    74a6:	4b04      	ldr	r3, [pc, #16]	; (74b8 <fflush+0x20>)
    74a8:	6818      	ldr	r0, [r3, #0]
    74aa:	f7ff bfb9 	b.w	7420 <_fflush_r>
    74ae:	bf00      	nop
    74b0:	0000b28c 	.word	0x0000b28c
    74b4:	00007421 	.word	0x00007421
    74b8:	10000180 	.word	0x10000180

000074bc <std>:
std():
    74bc:	2300      	movs	r3, #0
    74be:	b510      	push	{r4, lr}
    74c0:	4604      	mov	r4, r0
    74c2:	e9c0 3300 	strd	r3, r3, [r0]
    74c6:	6083      	str	r3, [r0, #8]
    74c8:	8181      	strh	r1, [r0, #12]
    74ca:	6643      	str	r3, [r0, #100]	; 0x64
    74cc:	81c2      	strh	r2, [r0, #14]
    74ce:	e9c0 3304 	strd	r3, r3, [r0, #16]
    74d2:	6183      	str	r3, [r0, #24]
    74d4:	4619      	mov	r1, r3
    74d6:	2208      	movs	r2, #8
    74d8:	305c      	adds	r0, #92	; 0x5c
    74da:	f7fc feed 	bl	42b8 <memset>
    74de:	4b05      	ldr	r3, [pc, #20]	; (74f4 <std+0x38>)
    74e0:	6263      	str	r3, [r4, #36]	; 0x24
    74e2:	4b05      	ldr	r3, [pc, #20]	; (74f8 <std+0x3c>)
    74e4:	62a3      	str	r3, [r4, #40]	; 0x28
    74e6:	4b05      	ldr	r3, [pc, #20]	; (74fc <std+0x40>)
    74e8:	62e3      	str	r3, [r4, #44]	; 0x2c
    74ea:	4b05      	ldr	r3, [pc, #20]	; (7500 <std+0x44>)
    74ec:	6224      	str	r4, [r4, #32]
    74ee:	6323      	str	r3, [r4, #48]	; 0x30
    74f0:	bd10      	pop	{r4, pc}
    74f2:	bf00      	nop
    74f4:	000091a5 	.word	0x000091a5
    74f8:	000091cb 	.word	0x000091cb
    74fc:	00009203 	.word	0x00009203
    7500:	00009227 	.word	0x00009227

00007504 <_cleanup_r>:
_cleanup_r():
    7504:	4901      	ldr	r1, [pc, #4]	; (750c <_cleanup_r+0x8>)
    7506:	f000 b8cb 	b.w	76a0 <_fwalk_reent>
    750a:	bf00      	nop
    750c:	00007421 	.word	0x00007421

00007510 <__sfmoreglue>:
__sfmoreglue():
    7510:	b570      	push	{r4, r5, r6, lr}
    7512:	1e4a      	subs	r2, r1, #1
    7514:	2568      	movs	r5, #104	; 0x68
    7516:	4355      	muls	r5, r2
    7518:	460e      	mov	r6, r1
    751a:	f105 0174 	add.w	r1, r5, #116	; 0x74
    751e:	f7fc ff21 	bl	4364 <_malloc_r>
    7522:	4604      	mov	r4, r0
    7524:	b140      	cbz	r0, 7538 <__sfmoreglue+0x28>
    7526:	2100      	movs	r1, #0
    7528:	e9c0 1600 	strd	r1, r6, [r0]
    752c:	300c      	adds	r0, #12
    752e:	60a0      	str	r0, [r4, #8]
    7530:	f105 0268 	add.w	r2, r5, #104	; 0x68
    7534:	f7fc fec0 	bl	42b8 <memset>
    7538:	4620      	mov	r0, r4
    753a:	bd70      	pop	{r4, r5, r6, pc}

0000753c <__sfp_lock_acquire>:
__sfp_lock_acquire():
    753c:	4801      	ldr	r0, [pc, #4]	; (7544 <__sfp_lock_acquire+0x8>)
    753e:	f7fc be80 	b.w	4242 <__retarget_lock_acquire_recursive>
    7542:	bf00      	nop
    7544:	100012e8 	.word	0x100012e8

00007548 <__sfp_lock_release>:
__sfp_lock_release():
    7548:	4801      	ldr	r0, [pc, #4]	; (7550 <__sfp_lock_release+0x8>)
    754a:	f7fc be7b 	b.w	4244 <__retarget_lock_release_recursive>
    754e:	bf00      	nop
    7550:	100012e8 	.word	0x100012e8

00007554 <__sinit_lock_acquire>:
__sinit_lock_acquire():
    7554:	4801      	ldr	r0, [pc, #4]	; (755c <__sinit_lock_acquire+0x8>)
    7556:	f7fc be74 	b.w	4242 <__retarget_lock_acquire_recursive>
    755a:	bf00      	nop
    755c:	100012e3 	.word	0x100012e3

00007560 <__sinit_lock_release>:
__sinit_lock_release():
    7560:	4801      	ldr	r0, [pc, #4]	; (7568 <__sinit_lock_release+0x8>)
    7562:	f7fc be6f 	b.w	4244 <__retarget_lock_release_recursive>
    7566:	bf00      	nop
    7568:	100012e3 	.word	0x100012e3

0000756c <__sinit>:
__sinit():
    756c:	b510      	push	{r4, lr}
    756e:	4604      	mov	r4, r0
    7570:	f7ff fff0 	bl	7554 <__sinit_lock_acquire>
    7574:	69a3      	ldr	r3, [r4, #24]
    7576:	b11b      	cbz	r3, 7580 <__sinit+0x14>
    7578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    757c:	f7ff bff0 	b.w	7560 <__sinit_lock_release>
    7580:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
    7584:	6523      	str	r3, [r4, #80]	; 0x50
    7586:	4b13      	ldr	r3, [pc, #76]	; (75d4 <__sinit+0x68>)
    7588:	4a13      	ldr	r2, [pc, #76]	; (75d8 <__sinit+0x6c>)
    758a:	681b      	ldr	r3, [r3, #0]
    758c:	62a2      	str	r2, [r4, #40]	; 0x28
    758e:	42a3      	cmp	r3, r4
    7590:	bf04      	itt	eq
    7592:	2301      	moveq	r3, #1
    7594:	61a3      	streq	r3, [r4, #24]
    7596:	4620      	mov	r0, r4
    7598:	f000 f820 	bl	75dc <__sfp>
    759c:	6060      	str	r0, [r4, #4]
    759e:	4620      	mov	r0, r4
    75a0:	f000 f81c 	bl	75dc <__sfp>
    75a4:	60a0      	str	r0, [r4, #8]
    75a6:	4620      	mov	r0, r4
    75a8:	f000 f818 	bl	75dc <__sfp>
    75ac:	2200      	movs	r2, #0
    75ae:	60e0      	str	r0, [r4, #12]
    75b0:	2104      	movs	r1, #4
    75b2:	6860      	ldr	r0, [r4, #4]
    75b4:	f7ff ff82 	bl	74bc <std>
    75b8:	2201      	movs	r2, #1
    75ba:	2109      	movs	r1, #9
    75bc:	68a0      	ldr	r0, [r4, #8]
    75be:	f7ff ff7d 	bl	74bc <std>
    75c2:	2202      	movs	r2, #2
    75c4:	2112      	movs	r1, #18
    75c6:	68e0      	ldr	r0, [r4, #12]
    75c8:	f7ff ff78 	bl	74bc <std>
    75cc:	2301      	movs	r3, #1
    75ce:	61a3      	str	r3, [r4, #24]
    75d0:	e7d2      	b.n	7578 <__sinit+0xc>
    75d2:	bf00      	nop
    75d4:	0000b28c 	.word	0x0000b28c
    75d8:	00007505 	.word	0x00007505

000075dc <__sfp>:
__sfp():
    75dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    75de:	4607      	mov	r7, r0
    75e0:	f7ff ffac 	bl	753c <__sfp_lock_acquire>
    75e4:	4b1e      	ldr	r3, [pc, #120]	; (7660 <__sfp+0x84>)
    75e6:	681e      	ldr	r6, [r3, #0]
    75e8:	69b3      	ldr	r3, [r6, #24]
    75ea:	b913      	cbnz	r3, 75f2 <__sfp+0x16>
    75ec:	4630      	mov	r0, r6
    75ee:	f7ff ffbd 	bl	756c <__sinit>
    75f2:	3648      	adds	r6, #72	; 0x48
    75f4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
    75f8:	3b01      	subs	r3, #1
    75fa:	d503      	bpl.n	7604 <__sfp+0x28>
    75fc:	6833      	ldr	r3, [r6, #0]
    75fe:	b30b      	cbz	r3, 7644 <__sfp+0x68>
    7600:	6836      	ldr	r6, [r6, #0]
    7602:	e7f7      	b.n	75f4 <__sfp+0x18>
    7604:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    7608:	b9d5      	cbnz	r5, 7640 <__sfp+0x64>
    760a:	4b16      	ldr	r3, [pc, #88]	; (7664 <__sfp+0x88>)
    760c:	60e3      	str	r3, [r4, #12]
    760e:	f104 0058 	add.w	r0, r4, #88	; 0x58
    7612:	6665      	str	r5, [r4, #100]	; 0x64
    7614:	f7fc fe14 	bl	4240 <__retarget_lock_init_recursive>
    7618:	f7ff ff96 	bl	7548 <__sfp_lock_release>
    761c:	6025      	str	r5, [r4, #0]
    761e:	e9c4 5501 	strd	r5, r5, [r4, #4]
    7622:	e9c4 5504 	strd	r5, r5, [r4, #16]
    7626:	61a5      	str	r5, [r4, #24]
    7628:	2208      	movs	r2, #8
    762a:	4629      	mov	r1, r5
    762c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    7630:	f7fc fe42 	bl	42b8 <memset>
    7634:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
    7638:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
    763c:	4620      	mov	r0, r4
    763e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7640:	3468      	adds	r4, #104	; 0x68
    7642:	e7d9      	b.n	75f8 <__sfp+0x1c>
    7644:	2104      	movs	r1, #4
    7646:	4638      	mov	r0, r7
    7648:	f7ff ff62 	bl	7510 <__sfmoreglue>
    764c:	4604      	mov	r4, r0
    764e:	6030      	str	r0, [r6, #0]
    7650:	2800      	cmp	r0, #0
    7652:	d1d5      	bne.n	7600 <__sfp+0x24>
    7654:	f7ff ff78 	bl	7548 <__sfp_lock_release>
    7658:	230c      	movs	r3, #12
    765a:	603b      	str	r3, [r7, #0]
    765c:	e7ee      	b.n	763c <__sfp+0x60>
    765e:	bf00      	nop
    7660:	0000b28c 	.word	0x0000b28c
    7664:	ffff0001 	.word	0xffff0001

00007668 <_fwalk>:
_fwalk():
    7668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    766c:	4688      	mov	r8, r1
    766e:	f100 0448 	add.w	r4, r0, #72	; 0x48
    7672:	2600      	movs	r6, #0
    7674:	b914      	cbnz	r4, 767c <_fwalk+0x14>
    7676:	4630      	mov	r0, r6
    7678:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    767c:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    7680:	3f01      	subs	r7, #1
    7682:	d501      	bpl.n	7688 <_fwalk+0x20>
    7684:	6824      	ldr	r4, [r4, #0]
    7686:	e7f5      	b.n	7674 <_fwalk+0xc>
    7688:	89ab      	ldrh	r3, [r5, #12]
    768a:	2b01      	cmp	r3, #1
    768c:	d906      	bls.n	769c <_fwalk+0x34>
    768e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    7692:	3301      	adds	r3, #1
    7694:	d002      	beq.n	769c <_fwalk+0x34>
    7696:	4628      	mov	r0, r5
    7698:	47c0      	blx	r8
    769a:	4306      	orrs	r6, r0
    769c:	3568      	adds	r5, #104	; 0x68
    769e:	e7ef      	b.n	7680 <_fwalk+0x18>

000076a0 <_fwalk_reent>:
_fwalk_reent():
    76a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    76a4:	4680      	mov	r8, r0
    76a6:	4689      	mov	r9, r1
    76a8:	f100 0448 	add.w	r4, r0, #72	; 0x48
    76ac:	2600      	movs	r6, #0
    76ae:	b914      	cbnz	r4, 76b6 <_fwalk_reent+0x16>
    76b0:	4630      	mov	r0, r6
    76b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    76b6:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    76ba:	3f01      	subs	r7, #1
    76bc:	d501      	bpl.n	76c2 <_fwalk_reent+0x22>
    76be:	6824      	ldr	r4, [r4, #0]
    76c0:	e7f5      	b.n	76ae <_fwalk_reent+0xe>
    76c2:	89ab      	ldrh	r3, [r5, #12]
    76c4:	2b01      	cmp	r3, #1
    76c6:	d907      	bls.n	76d8 <_fwalk_reent+0x38>
    76c8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    76cc:	3301      	adds	r3, #1
    76ce:	d003      	beq.n	76d8 <_fwalk_reent+0x38>
    76d0:	4629      	mov	r1, r5
    76d2:	4640      	mov	r0, r8
    76d4:	47c8      	blx	r9
    76d6:	4306      	orrs	r6, r0
    76d8:	3568      	adds	r5, #104	; 0x68
    76da:	e7ee      	b.n	76ba <_fwalk_reent+0x1a>

000076dc <rshift>:
rshift():
    76dc:	b5f0      	push	{r4, r5, r6, r7, lr}
    76de:	6906      	ldr	r6, [r0, #16]
    76e0:	114b      	asrs	r3, r1, #5
    76e2:	429e      	cmp	r6, r3
    76e4:	f100 0414 	add.w	r4, r0, #20
    76e8:	dd30      	ble.n	774c <rshift+0x70>
    76ea:	f011 011f 	ands.w	r1, r1, #31
    76ee:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    76f2:	eb04 0283 	add.w	r2, r4, r3, lsl #2
    76f6:	d108      	bne.n	770a <rshift+0x2e>
    76f8:	4621      	mov	r1, r4
    76fa:	42b2      	cmp	r2, r6
    76fc:	460b      	mov	r3, r1
    76fe:	d211      	bcs.n	7724 <rshift+0x48>
    7700:	f852 3b04 	ldr.w	r3, [r2], #4
    7704:	f841 3b04 	str.w	r3, [r1], #4
    7708:	e7f7      	b.n	76fa <rshift+0x1e>
    770a:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
    770e:	f1c1 0c20 	rsb	ip, r1, #32
    7712:	40cd      	lsrs	r5, r1
    7714:	3204      	adds	r2, #4
    7716:	4623      	mov	r3, r4
    7718:	4296      	cmp	r6, r2
    771a:	4617      	mov	r7, r2
    771c:	d80c      	bhi.n	7738 <rshift+0x5c>
    771e:	601d      	str	r5, [r3, #0]
    7720:	b105      	cbz	r5, 7724 <rshift+0x48>
    7722:	3304      	adds	r3, #4
    7724:	1b1a      	subs	r2, r3, r4
    7726:	42a3      	cmp	r3, r4
    7728:	ea4f 02a2 	mov.w	r2, r2, asr #2
    772c:	bf08      	it	eq
    772e:	2300      	moveq	r3, #0
    7730:	6102      	str	r2, [r0, #16]
    7732:	bf08      	it	eq
    7734:	6143      	streq	r3, [r0, #20]
    7736:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7738:	683f      	ldr	r7, [r7, #0]
    773a:	fa07 f70c 	lsl.w	r7, r7, ip
    773e:	433d      	orrs	r5, r7
    7740:	f843 5b04 	str.w	r5, [r3], #4
    7744:	f852 5b04 	ldr.w	r5, [r2], #4
    7748:	40cd      	lsrs	r5, r1
    774a:	e7e5      	b.n	7718 <rshift+0x3c>
    774c:	4623      	mov	r3, r4
    774e:	e7e9      	b.n	7724 <rshift+0x48>

00007750 <__hexdig_fun>:
__hexdig_fun():
    7750:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    7754:	2b09      	cmp	r3, #9
    7756:	d802      	bhi.n	775e <__hexdig_fun+0xe>
    7758:	3820      	subs	r0, #32
    775a:	b2c0      	uxtb	r0, r0
    775c:	4770      	bx	lr
    775e:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    7762:	2b05      	cmp	r3, #5
    7764:	d801      	bhi.n	776a <__hexdig_fun+0x1a>
    7766:	3847      	subs	r0, #71	; 0x47
    7768:	e7f7      	b.n	775a <__hexdig_fun+0xa>
    776a:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
    776e:	2b05      	cmp	r3, #5
    7770:	d801      	bhi.n	7776 <__hexdig_fun+0x26>
    7772:	3827      	subs	r0, #39	; 0x27
    7774:	e7f1      	b.n	775a <__hexdig_fun+0xa>
    7776:	2000      	movs	r0, #0
    7778:	4770      	bx	lr
    777a:	Address 0x000000000000777a is out of bounds.


0000777c <__gethex>:
__gethex():
    777c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7780:	b08b      	sub	sp, #44	; 0x2c
    7782:	468b      	mov	fp, r1
    7784:	9306      	str	r3, [sp, #24]
    7786:	4bb7      	ldr	r3, [pc, #732]	; (7a64 <__gethex+0x2e8>)
    7788:	9002      	str	r0, [sp, #8]
    778a:	681b      	ldr	r3, [r3, #0]
    778c:	9303      	str	r3, [sp, #12]
    778e:	4618      	mov	r0, r3
    7790:	4690      	mov	r8, r2
    7792:	f7fd ff7a 	bl	568a <strlen>
    7796:	9b03      	ldr	r3, [sp, #12]
    7798:	f8db 2000 	ldr.w	r2, [fp]
    779c:	9001      	str	r0, [sp, #4]
    779e:	4403      	add	r3, r0
    77a0:	f813 3c01 	ldrb.w	r3, [r3, #-1]
    77a4:	9307      	str	r3, [sp, #28]
    77a6:	1c93      	adds	r3, r2, #2
    77a8:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
    77ac:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
    77b0:	32fe      	adds	r2, #254	; 0xfe
    77b2:	eb02 0a03 	add.w	sl, r2, r3
    77b6:	461f      	mov	r7, r3
    77b8:	f813 0b01 	ldrb.w	r0, [r3], #1
    77bc:	2830      	cmp	r0, #48	; 0x30
    77be:	d0f8      	beq.n	77b2 <__gethex+0x36>
    77c0:	f7ff ffc6 	bl	7750 <__hexdig_fun>
    77c4:	4604      	mov	r4, r0
    77c6:	2800      	cmp	r0, #0
    77c8:	d168      	bne.n	789c <__gethex+0x120>
    77ca:	9a01      	ldr	r2, [sp, #4]
    77cc:	9903      	ldr	r1, [sp, #12]
    77ce:	4638      	mov	r0, r7
    77d0:	f7fd ff86 	bl	56e0 <strncmp>
    77d4:	4605      	mov	r5, r0
    77d6:	2800      	cmp	r0, #0
    77d8:	d163      	bne.n	78a2 <__gethex+0x126>
    77da:	9b01      	ldr	r3, [sp, #4]
    77dc:	5cf8      	ldrb	r0, [r7, r3]
    77de:	18fe      	adds	r6, r7, r3
    77e0:	f7ff ffb6 	bl	7750 <__hexdig_fun>
    77e4:	2800      	cmp	r0, #0
    77e6:	d05e      	beq.n	78a6 <__gethex+0x12a>
    77e8:	4633      	mov	r3, r6
    77ea:	7818      	ldrb	r0, [r3, #0]
    77ec:	2830      	cmp	r0, #48	; 0x30
    77ee:	461f      	mov	r7, r3
    77f0:	f103 0301 	add.w	r3, r3, #1
    77f4:	d0f9      	beq.n	77ea <__gethex+0x6e>
    77f6:	f7ff ffab 	bl	7750 <__hexdig_fun>
    77fa:	fab0 f480 	clz	r4, r0
    77fe:	0964      	lsrs	r4, r4, #5
    7800:	4635      	mov	r5, r6
    7802:	f04f 0a01 	mov.w	sl, #1
    7806:	463a      	mov	r2, r7
    7808:	4616      	mov	r6, r2
    780a:	3201      	adds	r2, #1
    780c:	7830      	ldrb	r0, [r6, #0]
    780e:	f7ff ff9f 	bl	7750 <__hexdig_fun>
    7812:	2800      	cmp	r0, #0
    7814:	d1f8      	bne.n	7808 <__gethex+0x8c>
    7816:	9a01      	ldr	r2, [sp, #4]
    7818:	9903      	ldr	r1, [sp, #12]
    781a:	4630      	mov	r0, r6
    781c:	f7fd ff60 	bl	56e0 <strncmp>
    7820:	b950      	cbnz	r0, 7838 <__gethex+0xbc>
    7822:	b955      	cbnz	r5, 783a <__gethex+0xbe>
    7824:	9b01      	ldr	r3, [sp, #4]
    7826:	18f5      	adds	r5, r6, r3
    7828:	462a      	mov	r2, r5
    782a:	4616      	mov	r6, r2
    782c:	3201      	adds	r2, #1
    782e:	7830      	ldrb	r0, [r6, #0]
    7830:	f7ff ff8e 	bl	7750 <__hexdig_fun>
    7834:	2800      	cmp	r0, #0
    7836:	d1f8      	bne.n	782a <__gethex+0xae>
    7838:	b10d      	cbz	r5, 783e <__gethex+0xc2>
    783a:	1bad      	subs	r5, r5, r6
    783c:	00ad      	lsls	r5, r5, #2
    783e:	7833      	ldrb	r3, [r6, #0]
    7840:	2b50      	cmp	r3, #80	; 0x50
    7842:	d001      	beq.n	7848 <__gethex+0xcc>
    7844:	2b70      	cmp	r3, #112	; 0x70
    7846:	d13c      	bne.n	78c2 <__gethex+0x146>
    7848:	7873      	ldrb	r3, [r6, #1]
    784a:	2b2b      	cmp	r3, #43	; 0x2b
    784c:	d02d      	beq.n	78aa <__gethex+0x12e>
    784e:	2b2d      	cmp	r3, #45	; 0x2d
    7850:	d02f      	beq.n	78b2 <__gethex+0x136>
    7852:	1c71      	adds	r1, r6, #1
    7854:	f04f 0900 	mov.w	r9, #0
    7858:	7808      	ldrb	r0, [r1, #0]
    785a:	f7ff ff79 	bl	7750 <__hexdig_fun>
    785e:	1e43      	subs	r3, r0, #1
    7860:	b2db      	uxtb	r3, r3
    7862:	2b18      	cmp	r3, #24
    7864:	d82d      	bhi.n	78c2 <__gethex+0x146>
    7866:	f1a0 0210 	sub.w	r2, r0, #16
    786a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
    786e:	f7ff ff6f 	bl	7750 <__hexdig_fun>
    7872:	1e43      	subs	r3, r0, #1
    7874:	b2db      	uxtb	r3, r3
    7876:	2b18      	cmp	r3, #24
    7878:	d91e      	bls.n	78b8 <__gethex+0x13c>
    787a:	f1b9 0f00 	cmp.w	r9, #0
    787e:	d000      	beq.n	7882 <__gethex+0x106>
    7880:	4252      	negs	r2, r2
    7882:	4415      	add	r5, r2
    7884:	f8cb 1000 	str.w	r1, [fp]
    7888:	b1ec      	cbz	r4, 78c6 <__gethex+0x14a>
    788a:	f1ba 0f00 	cmp.w	sl, #0
    788e:	bf14      	ite	ne
    7890:	2700      	movne	r7, #0
    7892:	2706      	moveq	r7, #6
    7894:	4638      	mov	r0, r7
    7896:	b00b      	add	sp, #44	; 0x2c
    7898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    789c:	2400      	movs	r4, #0
    789e:	4625      	mov	r5, r4
    78a0:	e7b1      	b.n	7806 <__gethex+0x8a>
    78a2:	463e      	mov	r6, r7
    78a4:	4625      	mov	r5, r4
    78a6:	2401      	movs	r4, #1
    78a8:	e7c9      	b.n	783e <__gethex+0xc2>
    78aa:	f04f 0900 	mov.w	r9, #0
    78ae:	1cb1      	adds	r1, r6, #2
    78b0:	e7d2      	b.n	7858 <__gethex+0xdc>
    78b2:	f04f 0901 	mov.w	r9, #1
    78b6:	e7fa      	b.n	78ae <__gethex+0x132>
    78b8:	230a      	movs	r3, #10
    78ba:	fb03 0202 	mla	r2, r3, r2, r0
    78be:	3a10      	subs	r2, #16
    78c0:	e7d3      	b.n	786a <__gethex+0xee>
    78c2:	4631      	mov	r1, r6
    78c4:	e7de      	b.n	7884 <__gethex+0x108>
    78c6:	1bf3      	subs	r3, r6, r7
    78c8:	3b01      	subs	r3, #1
    78ca:	4621      	mov	r1, r4
    78cc:	2b07      	cmp	r3, #7
    78ce:	dc4f      	bgt.n	7970 <__gethex+0x1f4>
    78d0:	9802      	ldr	r0, [sp, #8]
    78d2:	f000 fb49 	bl	7f68 <_Balloc>
    78d6:	9b01      	ldr	r3, [sp, #4]
    78d8:	f100 0914 	add.w	r9, r0, #20
    78dc:	f04f 0b00 	mov.w	fp, #0
    78e0:	f1c3 0301 	rsb	r3, r3, #1
    78e4:	4604      	mov	r4, r0
    78e6:	f8cd 9010 	str.w	r9, [sp, #16]
    78ea:	46da      	mov	sl, fp
    78ec:	9308      	str	r3, [sp, #32]
    78ee:	42b7      	cmp	r7, r6
    78f0:	d341      	bcc.n	7976 <__gethex+0x1fa>
    78f2:	9804      	ldr	r0, [sp, #16]
    78f4:	f840 ab04 	str.w	sl, [r0], #4
    78f8:	eba0 0009 	sub.w	r0, r0, r9
    78fc:	1080      	asrs	r0, r0, #2
    78fe:	6120      	str	r0, [r4, #16]
    7900:	0147      	lsls	r7, r0, #5
    7902:	4650      	mov	r0, sl
    7904:	f000 fbf4 	bl	80f0 <__hi0bits>
    7908:	f8d8 6000 	ldr.w	r6, [r8]
    790c:	1a3f      	subs	r7, r7, r0
    790e:	42b7      	cmp	r7, r6
    7910:	dd63      	ble.n	79da <__gethex+0x25e>
    7912:	1bbf      	subs	r7, r7, r6
    7914:	4639      	mov	r1, r7
    7916:	4620      	mov	r0, r4
    7918:	f000 fefd 	bl	8716 <__any_on>
    791c:	4682      	mov	sl, r0
    791e:	b1a8      	cbz	r0, 794c <__gethex+0x1d0>
    7920:	1e7b      	subs	r3, r7, #1
    7922:	1159      	asrs	r1, r3, #5
    7924:	f003 021f 	and.w	r2, r3, #31
    7928:	f04f 0a01 	mov.w	sl, #1
    792c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
    7930:	fa0a f202 	lsl.w	r2, sl, r2
    7934:	420a      	tst	r2, r1
    7936:	d009      	beq.n	794c <__gethex+0x1d0>
    7938:	4553      	cmp	r3, sl
    793a:	dd05      	ble.n	7948 <__gethex+0x1cc>
    793c:	1eb9      	subs	r1, r7, #2
    793e:	4620      	mov	r0, r4
    7940:	f000 fee9 	bl	8716 <__any_on>
    7944:	2800      	cmp	r0, #0
    7946:	d145      	bne.n	79d4 <__gethex+0x258>
    7948:	f04f 0a02 	mov.w	sl, #2
    794c:	4639      	mov	r1, r7
    794e:	4620      	mov	r0, r4
    7950:	f7ff fec4 	bl	76dc <rshift>
    7954:	443d      	add	r5, r7
    7956:	f8d8 3008 	ldr.w	r3, [r8, #8]
    795a:	42ab      	cmp	r3, r5
    795c:	da4b      	bge.n	79f6 <__gethex+0x27a>
    795e:	4621      	mov	r1, r4
    7960:	9802      	ldr	r0, [sp, #8]
    7962:	f000 fb35 	bl	7fd0 <_Bfree>
    7966:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7968:	2300      	movs	r3, #0
    796a:	6013      	str	r3, [r2, #0]
    796c:	27a3      	movs	r7, #163	; 0xa3
    796e:	e791      	b.n	7894 <__gethex+0x118>
    7970:	3101      	adds	r1, #1
    7972:	105b      	asrs	r3, r3, #1
    7974:	e7aa      	b.n	78cc <__gethex+0x150>
    7976:	1e73      	subs	r3, r6, #1
    7978:	9305      	str	r3, [sp, #20]
    797a:	9a07      	ldr	r2, [sp, #28]
    797c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
    7980:	4293      	cmp	r3, r2
    7982:	d017      	beq.n	79b4 <__gethex+0x238>
    7984:	f1bb 0f20 	cmp.w	fp, #32
    7988:	d106      	bne.n	7998 <__gethex+0x21c>
    798a:	9b04      	ldr	r3, [sp, #16]
    798c:	f843 ab04 	str.w	sl, [r3], #4
    7990:	f04f 0a00 	mov.w	sl, #0
    7994:	9304      	str	r3, [sp, #16]
    7996:	46d3      	mov	fp, sl
    7998:	f816 0c01 	ldrb.w	r0, [r6, #-1]
    799c:	f7ff fed8 	bl	7750 <__hexdig_fun>
    79a0:	f000 000f 	and.w	r0, r0, #15
    79a4:	fa00 f00b 	lsl.w	r0, r0, fp
    79a8:	ea4a 0a00 	orr.w	sl, sl, r0
    79ac:	f10b 0b04 	add.w	fp, fp, #4
    79b0:	9b05      	ldr	r3, [sp, #20]
    79b2:	e00d      	b.n	79d0 <__gethex+0x254>
    79b4:	9b05      	ldr	r3, [sp, #20]
    79b6:	9a08      	ldr	r2, [sp, #32]
    79b8:	4413      	add	r3, r2
    79ba:	42bb      	cmp	r3, r7
    79bc:	d3e2      	bcc.n	7984 <__gethex+0x208>
    79be:	4618      	mov	r0, r3
    79c0:	9a01      	ldr	r2, [sp, #4]
    79c2:	9903      	ldr	r1, [sp, #12]
    79c4:	9309      	str	r3, [sp, #36]	; 0x24
    79c6:	f7fd fe8b 	bl	56e0 <strncmp>
    79ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
    79cc:	2800      	cmp	r0, #0
    79ce:	d1d9      	bne.n	7984 <__gethex+0x208>
    79d0:	461e      	mov	r6, r3
    79d2:	e78c      	b.n	78ee <__gethex+0x172>
    79d4:	f04f 0a03 	mov.w	sl, #3
    79d8:	e7b8      	b.n	794c <__gethex+0x1d0>
    79da:	da09      	bge.n	79f0 <__gethex+0x274>
    79dc:	1bf7      	subs	r7, r6, r7
    79de:	4621      	mov	r1, r4
    79e0:	463a      	mov	r2, r7
    79e2:	9802      	ldr	r0, [sp, #8]
    79e4:	f000 fcbc 	bl	8360 <__lshift>
    79e8:	1bed      	subs	r5, r5, r7
    79ea:	4604      	mov	r4, r0
    79ec:	f100 0914 	add.w	r9, r0, #20
    79f0:	f04f 0a00 	mov.w	sl, #0
    79f4:	e7af      	b.n	7956 <__gethex+0x1da>
    79f6:	f8d8 3004 	ldr.w	r3, [r8, #4]
    79fa:	42ab      	cmp	r3, r5
    79fc:	dd6d      	ble.n	7ada <__gethex+0x35e>
    79fe:	1b5d      	subs	r5, r3, r5
    7a00:	42ae      	cmp	r6, r5
    7a02:	dc31      	bgt.n	7a68 <__gethex+0x2ec>
    7a04:	f8d8 300c 	ldr.w	r3, [r8, #12]
    7a08:	2b02      	cmp	r3, #2
    7a0a:	d022      	beq.n	7a52 <__gethex+0x2d6>
    7a0c:	2b03      	cmp	r3, #3
    7a0e:	d024      	beq.n	7a5a <__gethex+0x2de>
    7a10:	2b01      	cmp	r3, #1
    7a12:	d115      	bne.n	7a40 <__gethex+0x2c4>
    7a14:	42ae      	cmp	r6, r5
    7a16:	d113      	bne.n	7a40 <__gethex+0x2c4>
    7a18:	2e01      	cmp	r6, #1
    7a1a:	d10b      	bne.n	7a34 <__gethex+0x2b8>
    7a1c:	9a06      	ldr	r2, [sp, #24]
    7a1e:	f8d8 3004 	ldr.w	r3, [r8, #4]
    7a22:	6013      	str	r3, [r2, #0]
    7a24:	2301      	movs	r3, #1
    7a26:	6123      	str	r3, [r4, #16]
    7a28:	f8c9 3000 	str.w	r3, [r9]
    7a2c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7a2e:	2762      	movs	r7, #98	; 0x62
    7a30:	601c      	str	r4, [r3, #0]
    7a32:	e72f      	b.n	7894 <__gethex+0x118>
    7a34:	1e71      	subs	r1, r6, #1
    7a36:	4620      	mov	r0, r4
    7a38:	f000 fe6d 	bl	8716 <__any_on>
    7a3c:	2800      	cmp	r0, #0
    7a3e:	d1ed      	bne.n	7a1c <__gethex+0x2a0>
    7a40:	4621      	mov	r1, r4
    7a42:	9802      	ldr	r0, [sp, #8]
    7a44:	f000 fac4 	bl	7fd0 <_Bfree>
    7a48:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7a4a:	2300      	movs	r3, #0
    7a4c:	6013      	str	r3, [r2, #0]
    7a4e:	2750      	movs	r7, #80	; 0x50
    7a50:	e720      	b.n	7894 <__gethex+0x118>
    7a52:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7a54:	2b00      	cmp	r3, #0
    7a56:	d1f3      	bne.n	7a40 <__gethex+0x2c4>
    7a58:	e7e0      	b.n	7a1c <__gethex+0x2a0>
    7a5a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7a5c:	2b00      	cmp	r3, #0
    7a5e:	d1dd      	bne.n	7a1c <__gethex+0x2a0>
    7a60:	e7ee      	b.n	7a40 <__gethex+0x2c4>
    7a62:	bf00      	nop
    7a64:	0000b398 	.word	0x0000b398
    7a68:	1e6f      	subs	r7, r5, #1
    7a6a:	f1ba 0f00 	cmp.w	sl, #0
    7a6e:	d131      	bne.n	7ad4 <__gethex+0x358>
    7a70:	b127      	cbz	r7, 7a7c <__gethex+0x300>
    7a72:	4639      	mov	r1, r7
    7a74:	4620      	mov	r0, r4
    7a76:	f000 fe4e 	bl	8716 <__any_on>
    7a7a:	4682      	mov	sl, r0
    7a7c:	117a      	asrs	r2, r7, #5
    7a7e:	2301      	movs	r3, #1
    7a80:	f007 071f 	and.w	r7, r7, #31
    7a84:	fa03 f707 	lsl.w	r7, r3, r7
    7a88:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
    7a8c:	4629      	mov	r1, r5
    7a8e:	421f      	tst	r7, r3
    7a90:	4620      	mov	r0, r4
    7a92:	bf18      	it	ne
    7a94:	f04a 0a02 	orrne.w	sl, sl, #2
    7a98:	1b76      	subs	r6, r6, r5
    7a9a:	f7ff fe1f 	bl	76dc <rshift>
    7a9e:	f8d8 5004 	ldr.w	r5, [r8, #4]
    7aa2:	2702      	movs	r7, #2
    7aa4:	f1ba 0f00 	cmp.w	sl, #0
    7aa8:	d048      	beq.n	7b3c <__gethex+0x3c0>
    7aaa:	f8d8 300c 	ldr.w	r3, [r8, #12]
    7aae:	2b02      	cmp	r3, #2
    7ab0:	d015      	beq.n	7ade <__gethex+0x362>
    7ab2:	2b03      	cmp	r3, #3
    7ab4:	d017      	beq.n	7ae6 <__gethex+0x36a>
    7ab6:	2b01      	cmp	r3, #1
    7ab8:	d109      	bne.n	7ace <__gethex+0x352>
    7aba:	f01a 0f02 	tst.w	sl, #2
    7abe:	d006      	beq.n	7ace <__gethex+0x352>
    7ac0:	f8d9 3000 	ldr.w	r3, [r9]
    7ac4:	ea4a 0a03 	orr.w	sl, sl, r3
    7ac8:	f01a 0f01 	tst.w	sl, #1
    7acc:	d10e      	bne.n	7aec <__gethex+0x370>
    7ace:	f047 0710 	orr.w	r7, r7, #16
    7ad2:	e033      	b.n	7b3c <__gethex+0x3c0>
    7ad4:	f04f 0a01 	mov.w	sl, #1
    7ad8:	e7d0      	b.n	7a7c <__gethex+0x300>
    7ada:	2701      	movs	r7, #1
    7adc:	e7e2      	b.n	7aa4 <__gethex+0x328>
    7ade:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7ae0:	f1c3 0301 	rsb	r3, r3, #1
    7ae4:	9315      	str	r3, [sp, #84]	; 0x54
    7ae6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    7ae8:	2b00      	cmp	r3, #0
    7aea:	d0f0      	beq.n	7ace <__gethex+0x352>
    7aec:	f8d4 9010 	ldr.w	r9, [r4, #16]
    7af0:	f104 0314 	add.w	r3, r4, #20
    7af4:	ea4f 0a89 	mov.w	sl, r9, lsl #2
    7af8:	eb03 010a 	add.w	r1, r3, sl
    7afc:	f04f 0c00 	mov.w	ip, #0
    7b00:	4618      	mov	r0, r3
    7b02:	f853 2b04 	ldr.w	r2, [r3], #4
    7b06:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
    7b0a:	d01c      	beq.n	7b46 <__gethex+0x3ca>
    7b0c:	3201      	adds	r2, #1
    7b0e:	6002      	str	r2, [r0, #0]
    7b10:	2f02      	cmp	r7, #2
    7b12:	f104 0314 	add.w	r3, r4, #20
    7b16:	d138      	bne.n	7b8a <__gethex+0x40e>
    7b18:	f8d8 2000 	ldr.w	r2, [r8]
    7b1c:	3a01      	subs	r2, #1
    7b1e:	42b2      	cmp	r2, r6
    7b20:	d10a      	bne.n	7b38 <__gethex+0x3bc>
    7b22:	1171      	asrs	r1, r6, #5
    7b24:	2201      	movs	r2, #1
    7b26:	f006 061f 	and.w	r6, r6, #31
    7b2a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    7b2e:	fa02 f606 	lsl.w	r6, r2, r6
    7b32:	421e      	tst	r6, r3
    7b34:	bf18      	it	ne
    7b36:	4617      	movne	r7, r2
    7b38:	f047 0720 	orr.w	r7, r7, #32
    7b3c:	9b14      	ldr	r3, [sp, #80]	; 0x50
    7b3e:	601c      	str	r4, [r3, #0]
    7b40:	9b06      	ldr	r3, [sp, #24]
    7b42:	601d      	str	r5, [r3, #0]
    7b44:	e6a6      	b.n	7894 <__gethex+0x118>
    7b46:	4299      	cmp	r1, r3
    7b48:	f843 cc04 	str.w	ip, [r3, #-4]
    7b4c:	d8d8      	bhi.n	7b00 <__gethex+0x384>
    7b4e:	68a3      	ldr	r3, [r4, #8]
    7b50:	4599      	cmp	r9, r3
    7b52:	db12      	blt.n	7b7a <__gethex+0x3fe>
    7b54:	6861      	ldr	r1, [r4, #4]
    7b56:	9802      	ldr	r0, [sp, #8]
    7b58:	3101      	adds	r1, #1
    7b5a:	f000 fa05 	bl	7f68 <_Balloc>
    7b5e:	6922      	ldr	r2, [r4, #16]
    7b60:	3202      	adds	r2, #2
    7b62:	f104 010c 	add.w	r1, r4, #12
    7b66:	4683      	mov	fp, r0
    7b68:	0092      	lsls	r2, r2, #2
    7b6a:	300c      	adds	r0, #12
    7b6c:	f7fc fb7c 	bl	4268 <memcpy>
    7b70:	4621      	mov	r1, r4
    7b72:	9802      	ldr	r0, [sp, #8]
    7b74:	f000 fa2c 	bl	7fd0 <_Bfree>
    7b78:	465c      	mov	r4, fp
    7b7a:	6923      	ldr	r3, [r4, #16]
    7b7c:	1c5a      	adds	r2, r3, #1
    7b7e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    7b82:	6122      	str	r2, [r4, #16]
    7b84:	2201      	movs	r2, #1
    7b86:	615a      	str	r2, [r3, #20]
    7b88:	e7c2      	b.n	7b10 <__gethex+0x394>
    7b8a:	6922      	ldr	r2, [r4, #16]
    7b8c:	454a      	cmp	r2, r9
    7b8e:	dd0b      	ble.n	7ba8 <__gethex+0x42c>
    7b90:	2101      	movs	r1, #1
    7b92:	4620      	mov	r0, r4
    7b94:	f7ff fda2 	bl	76dc <rshift>
    7b98:	f8d8 3008 	ldr.w	r3, [r8, #8]
    7b9c:	3501      	adds	r5, #1
    7b9e:	42ab      	cmp	r3, r5
    7ba0:	f6ff aedd 	blt.w	795e <__gethex+0x1e2>
    7ba4:	2701      	movs	r7, #1
    7ba6:	e7c7      	b.n	7b38 <__gethex+0x3bc>
    7ba8:	f016 061f 	ands.w	r6, r6, #31
    7bac:	d0fa      	beq.n	7ba4 <__gethex+0x428>
    7bae:	449a      	add	sl, r3
    7bb0:	f1c6 0620 	rsb	r6, r6, #32
    7bb4:	f85a 0c04 	ldr.w	r0, [sl, #-4]
    7bb8:	f000 fa9a 	bl	80f0 <__hi0bits>
    7bbc:	42b0      	cmp	r0, r6
    7bbe:	dbe7      	blt.n	7b90 <__gethex+0x414>
    7bc0:	e7f0      	b.n	7ba4 <__gethex+0x428>
    7bc2:	bf00      	nop

00007bc4 <L_shift>:
L_shift():
    7bc4:	f1c2 0208 	rsb	r2, r2, #8
    7bc8:	0092      	lsls	r2, r2, #2
    7bca:	b570      	push	{r4, r5, r6, lr}
    7bcc:	f1c2 0620 	rsb	r6, r2, #32
    7bd0:	6843      	ldr	r3, [r0, #4]
    7bd2:	6804      	ldr	r4, [r0, #0]
    7bd4:	fa03 f506 	lsl.w	r5, r3, r6
    7bd8:	432c      	orrs	r4, r5
    7bda:	40d3      	lsrs	r3, r2
    7bdc:	6004      	str	r4, [r0, #0]
    7bde:	f840 3f04 	str.w	r3, [r0, #4]!
    7be2:	4288      	cmp	r0, r1
    7be4:	d3f4      	bcc.n	7bd0 <L_shift+0xc>
    7be6:	bd70      	pop	{r4, r5, r6, pc}

00007be8 <__match>:
__match():
    7be8:	b530      	push	{r4, r5, lr}
    7bea:	6803      	ldr	r3, [r0, #0]
    7bec:	3301      	adds	r3, #1
    7bee:	f811 4b01 	ldrb.w	r4, [r1], #1
    7bf2:	b914      	cbnz	r4, 7bfa <__match+0x12>
    7bf4:	6003      	str	r3, [r0, #0]
    7bf6:	2001      	movs	r0, #1
    7bf8:	bd30      	pop	{r4, r5, pc}
    7bfa:	f813 2b01 	ldrb.w	r2, [r3], #1
    7bfe:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
    7c02:	2d19      	cmp	r5, #25
    7c04:	bf98      	it	ls
    7c06:	3220      	addls	r2, #32
    7c08:	42a2      	cmp	r2, r4
    7c0a:	d0f0      	beq.n	7bee <__match+0x6>
    7c0c:	2000      	movs	r0, #0
    7c0e:	e7f3      	b.n	7bf8 <__match+0x10>

00007c10 <__hexnan>:
__hexnan():
    7c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7c14:	680b      	ldr	r3, [r1, #0]
    7c16:	6801      	ldr	r1, [r0, #0]
    7c18:	115f      	asrs	r7, r3, #5
    7c1a:	eb02 0787 	add.w	r7, r2, r7, lsl #2
    7c1e:	f013 031f 	ands.w	r3, r3, #31
    7c22:	b087      	sub	sp, #28
    7c24:	bf18      	it	ne
    7c26:	3704      	addne	r7, #4
    7c28:	2500      	movs	r5, #0
    7c2a:	1f3e      	subs	r6, r7, #4
    7c2c:	4682      	mov	sl, r0
    7c2e:	4690      	mov	r8, r2
    7c30:	9301      	str	r3, [sp, #4]
    7c32:	f847 5c04 	str.w	r5, [r7, #-4]
    7c36:	46b1      	mov	r9, r6
    7c38:	4634      	mov	r4, r6
    7c3a:	9502      	str	r5, [sp, #8]
    7c3c:	46ab      	mov	fp, r5
    7c3e:	784a      	ldrb	r2, [r1, #1]
    7c40:	1c4b      	adds	r3, r1, #1
    7c42:	9303      	str	r3, [sp, #12]
    7c44:	b342      	cbz	r2, 7c98 <__hexnan+0x88>
    7c46:	4610      	mov	r0, r2
    7c48:	9105      	str	r1, [sp, #20]
    7c4a:	9204      	str	r2, [sp, #16]
    7c4c:	f7ff fd80 	bl	7750 <__hexdig_fun>
    7c50:	2800      	cmp	r0, #0
    7c52:	d143      	bne.n	7cdc <__hexnan+0xcc>
    7c54:	9a04      	ldr	r2, [sp, #16]
    7c56:	9905      	ldr	r1, [sp, #20]
    7c58:	2a20      	cmp	r2, #32
    7c5a:	d818      	bhi.n	7c8e <__hexnan+0x7e>
    7c5c:	9b02      	ldr	r3, [sp, #8]
    7c5e:	459b      	cmp	fp, r3
    7c60:	dd13      	ble.n	7c8a <__hexnan+0x7a>
    7c62:	454c      	cmp	r4, r9
    7c64:	d206      	bcs.n	7c74 <__hexnan+0x64>
    7c66:	2d07      	cmp	r5, #7
    7c68:	dc04      	bgt.n	7c74 <__hexnan+0x64>
    7c6a:	462a      	mov	r2, r5
    7c6c:	4649      	mov	r1, r9
    7c6e:	4620      	mov	r0, r4
    7c70:	f7ff ffa8 	bl	7bc4 <L_shift>
    7c74:	4544      	cmp	r4, r8
    7c76:	d944      	bls.n	7d02 <__hexnan+0xf2>
    7c78:	2300      	movs	r3, #0
    7c7a:	f1a4 0904 	sub.w	r9, r4, #4
    7c7e:	f844 3c04 	str.w	r3, [r4, #-4]
    7c82:	f8cd b008 	str.w	fp, [sp, #8]
    7c86:	464c      	mov	r4, r9
    7c88:	461d      	mov	r5, r3
    7c8a:	9903      	ldr	r1, [sp, #12]
    7c8c:	e7d7      	b.n	7c3e <__hexnan+0x2e>
    7c8e:	2a29      	cmp	r2, #41	; 0x29
    7c90:	d14a      	bne.n	7d28 <__hexnan+0x118>
    7c92:	3102      	adds	r1, #2
    7c94:	f8ca 1000 	str.w	r1, [sl]
    7c98:	f1bb 0f00 	cmp.w	fp, #0
    7c9c:	d044      	beq.n	7d28 <__hexnan+0x118>
    7c9e:	454c      	cmp	r4, r9
    7ca0:	d206      	bcs.n	7cb0 <__hexnan+0xa0>
    7ca2:	2d07      	cmp	r5, #7
    7ca4:	dc04      	bgt.n	7cb0 <__hexnan+0xa0>
    7ca6:	462a      	mov	r2, r5
    7ca8:	4649      	mov	r1, r9
    7caa:	4620      	mov	r0, r4
    7cac:	f7ff ff8a 	bl	7bc4 <L_shift>
    7cb0:	4544      	cmp	r4, r8
    7cb2:	d928      	bls.n	7d06 <__hexnan+0xf6>
    7cb4:	4643      	mov	r3, r8
    7cb6:	f854 2b04 	ldr.w	r2, [r4], #4
    7cba:	f843 2b04 	str.w	r2, [r3], #4
    7cbe:	42a6      	cmp	r6, r4
    7cc0:	d2f9      	bcs.n	7cb6 <__hexnan+0xa6>
    7cc2:	2200      	movs	r2, #0
    7cc4:	f843 2b04 	str.w	r2, [r3], #4
    7cc8:	429e      	cmp	r6, r3
    7cca:	d2fb      	bcs.n	7cc4 <__hexnan+0xb4>
    7ccc:	6833      	ldr	r3, [r6, #0]
    7cce:	b91b      	cbnz	r3, 7cd8 <__hexnan+0xc8>
    7cd0:	4546      	cmp	r6, r8
    7cd2:	d127      	bne.n	7d24 <__hexnan+0x114>
    7cd4:	2301      	movs	r3, #1
    7cd6:	6033      	str	r3, [r6, #0]
    7cd8:	2005      	movs	r0, #5
    7cda:	e026      	b.n	7d2a <__hexnan+0x11a>
    7cdc:	3501      	adds	r5, #1
    7cde:	2d08      	cmp	r5, #8
    7ce0:	f10b 0b01 	add.w	fp, fp, #1
    7ce4:	dd06      	ble.n	7cf4 <__hexnan+0xe4>
    7ce6:	4544      	cmp	r4, r8
    7ce8:	d9cf      	bls.n	7c8a <__hexnan+0x7a>
    7cea:	2300      	movs	r3, #0
    7cec:	f844 3c04 	str.w	r3, [r4, #-4]
    7cf0:	2501      	movs	r5, #1
    7cf2:	3c04      	subs	r4, #4
    7cf4:	6822      	ldr	r2, [r4, #0]
    7cf6:	f000 000f 	and.w	r0, r0, #15
    7cfa:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
    7cfe:	6020      	str	r0, [r4, #0]
    7d00:	e7c3      	b.n	7c8a <__hexnan+0x7a>
    7d02:	2508      	movs	r5, #8
    7d04:	e7c1      	b.n	7c8a <__hexnan+0x7a>
    7d06:	9b01      	ldr	r3, [sp, #4]
    7d08:	2b00      	cmp	r3, #0
    7d0a:	d0df      	beq.n	7ccc <__hexnan+0xbc>
    7d0c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    7d10:	f1c3 0320 	rsb	r3, r3, #32
    7d14:	fa22 f303 	lsr.w	r3, r2, r3
    7d18:	f857 2c04 	ldr.w	r2, [r7, #-4]
    7d1c:	401a      	ands	r2, r3
    7d1e:	f847 2c04 	str.w	r2, [r7, #-4]
    7d22:	e7d3      	b.n	7ccc <__hexnan+0xbc>
    7d24:	3e04      	subs	r6, #4
    7d26:	e7d1      	b.n	7ccc <__hexnan+0xbc>
    7d28:	2004      	movs	r0, #4
    7d2a:	b007      	add	sp, #28
    7d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007d30 <_getc_r>:
_getc_r():
    7d30:	b538      	push	{r3, r4, r5, lr}
    7d32:	460c      	mov	r4, r1
    7d34:	4605      	mov	r5, r0
    7d36:	b118      	cbz	r0, 7d40 <_getc_r+0x10>
    7d38:	6983      	ldr	r3, [r0, #24]
    7d3a:	b90b      	cbnz	r3, 7d40 <_getc_r+0x10>
    7d3c:	f7ff fc16 	bl	756c <__sinit>
    7d40:	4b18      	ldr	r3, [pc, #96]	; (7da4 <_getc_r+0x74>)
    7d42:	429c      	cmp	r4, r3
    7d44:	d11e      	bne.n	7d84 <_getc_r+0x54>
    7d46:	686c      	ldr	r4, [r5, #4]
    7d48:	6e63      	ldr	r3, [r4, #100]	; 0x64
    7d4a:	07d8      	lsls	r0, r3, #31
    7d4c:	d405      	bmi.n	7d5a <_getc_r+0x2a>
    7d4e:	89a3      	ldrh	r3, [r4, #12]
    7d50:	0599      	lsls	r1, r3, #22
    7d52:	d402      	bmi.n	7d5a <_getc_r+0x2a>
    7d54:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7d56:	f7fc fa74 	bl	4242 <__retarget_lock_acquire_recursive>
    7d5a:	6863      	ldr	r3, [r4, #4]
    7d5c:	3b01      	subs	r3, #1
    7d5e:	2b00      	cmp	r3, #0
    7d60:	6063      	str	r3, [r4, #4]
    7d62:	da19      	bge.n	7d98 <_getc_r+0x68>
    7d64:	4628      	mov	r0, r5
    7d66:	4621      	mov	r1, r4
    7d68:	f001 f9b4 	bl	90d4 <__srget_r>
    7d6c:	4605      	mov	r5, r0
    7d6e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    7d70:	07da      	lsls	r2, r3, #31
    7d72:	d405      	bmi.n	7d80 <_getc_r+0x50>
    7d74:	89a3      	ldrh	r3, [r4, #12]
    7d76:	059b      	lsls	r3, r3, #22
    7d78:	d402      	bmi.n	7d80 <_getc_r+0x50>
    7d7a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    7d7c:	f7fc fa62 	bl	4244 <__retarget_lock_release_recursive>
    7d80:	4628      	mov	r0, r5
    7d82:	bd38      	pop	{r3, r4, r5, pc}
    7d84:	4b08      	ldr	r3, [pc, #32]	; (7da8 <_getc_r+0x78>)
    7d86:	429c      	cmp	r4, r3
    7d88:	d101      	bne.n	7d8e <_getc_r+0x5e>
    7d8a:	68ac      	ldr	r4, [r5, #8]
    7d8c:	e7dc      	b.n	7d48 <_getc_r+0x18>
    7d8e:	4b07      	ldr	r3, [pc, #28]	; (7dac <_getc_r+0x7c>)
    7d90:	429c      	cmp	r4, r3
    7d92:	bf08      	it	eq
    7d94:	68ec      	ldreq	r4, [r5, #12]
    7d96:	e7d7      	b.n	7d48 <_getc_r+0x18>
    7d98:	6823      	ldr	r3, [r4, #0]
    7d9a:	1c5a      	adds	r2, r3, #1
    7d9c:	6022      	str	r2, [r4, #0]
    7d9e:	781d      	ldrb	r5, [r3, #0]
    7da0:	e7e5      	b.n	7d6e <_getc_r+0x3e>
    7da2:	bf00      	nop
    7da4:	0000b358 	.word	0x0000b358
    7da8:	0000b378 	.word	0x0000b378
    7dac:	0000b338 	.word	0x0000b338

00007db0 <_localeconv_r>:
_localeconv_r():
    7db0:	4800      	ldr	r0, [pc, #0]	; (7db4 <_localeconv_r+0x4>)
    7db2:	4770      	bx	lr
    7db4:	100002d8 	.word	0x100002d8

00007db8 <__swhatbuf_r>:
__swhatbuf_r():
    7db8:	b570      	push	{r4, r5, r6, lr}
    7dba:	460e      	mov	r6, r1
    7dbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    7dc0:	2900      	cmp	r1, #0
    7dc2:	b096      	sub	sp, #88	; 0x58
    7dc4:	4614      	mov	r4, r2
    7dc6:	461d      	mov	r5, r3
    7dc8:	da07      	bge.n	7dda <__swhatbuf_r+0x22>
    7dca:	2300      	movs	r3, #0
    7dcc:	602b      	str	r3, [r5, #0]
    7dce:	89b3      	ldrh	r3, [r6, #12]
    7dd0:	061a      	lsls	r2, r3, #24
    7dd2:	d410      	bmi.n	7df6 <__swhatbuf_r+0x3e>
    7dd4:	f44f 6380 	mov.w	r3, #1024	; 0x400
    7dd8:	e00e      	b.n	7df8 <__swhatbuf_r+0x40>
    7dda:	466a      	mov	r2, sp
    7ddc:	f001 fb0a 	bl	93f4 <_fstat_r>
    7de0:	2800      	cmp	r0, #0
    7de2:	dbf2      	blt.n	7dca <__swhatbuf_r+0x12>
    7de4:	9a01      	ldr	r2, [sp, #4]
    7de6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    7dea:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
    7dee:	425a      	negs	r2, r3
    7df0:	415a      	adcs	r2, r3
    7df2:	602a      	str	r2, [r5, #0]
    7df4:	e7ee      	b.n	7dd4 <__swhatbuf_r+0x1c>
    7df6:	2340      	movs	r3, #64	; 0x40
    7df8:	2000      	movs	r0, #0
    7dfa:	6023      	str	r3, [r4, #0]
    7dfc:	b016      	add	sp, #88	; 0x58
    7dfe:	bd70      	pop	{r4, r5, r6, pc}

00007e00 <__smakebuf_r>:
__smakebuf_r():
    7e00:	898b      	ldrh	r3, [r1, #12]
    7e02:	b573      	push	{r0, r1, r4, r5, r6, lr}
    7e04:	079d      	lsls	r5, r3, #30
    7e06:	4606      	mov	r6, r0
    7e08:	460c      	mov	r4, r1
    7e0a:	d507      	bpl.n	7e1c <__smakebuf_r+0x1c>
    7e0c:	f104 0347 	add.w	r3, r4, #71	; 0x47
    7e10:	6023      	str	r3, [r4, #0]
    7e12:	6123      	str	r3, [r4, #16]
    7e14:	2301      	movs	r3, #1
    7e16:	6163      	str	r3, [r4, #20]
    7e18:	b002      	add	sp, #8
    7e1a:	bd70      	pop	{r4, r5, r6, pc}
    7e1c:	ab01      	add	r3, sp, #4
    7e1e:	466a      	mov	r2, sp
    7e20:	f7ff ffca 	bl	7db8 <__swhatbuf_r>
    7e24:	9900      	ldr	r1, [sp, #0]
    7e26:	4605      	mov	r5, r0
    7e28:	4630      	mov	r0, r6
    7e2a:	f7fc fa9b 	bl	4364 <_malloc_r>
    7e2e:	b948      	cbnz	r0, 7e44 <__smakebuf_r+0x44>
    7e30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7e34:	059a      	lsls	r2, r3, #22
    7e36:	d4ef      	bmi.n	7e18 <__smakebuf_r+0x18>
    7e38:	f023 0303 	bic.w	r3, r3, #3
    7e3c:	f043 0302 	orr.w	r3, r3, #2
    7e40:	81a3      	strh	r3, [r4, #12]
    7e42:	e7e3      	b.n	7e0c <__smakebuf_r+0xc>
    7e44:	4b0d      	ldr	r3, [pc, #52]	; (7e7c <__smakebuf_r+0x7c>)
    7e46:	62b3      	str	r3, [r6, #40]	; 0x28
    7e48:	89a3      	ldrh	r3, [r4, #12]
    7e4a:	6020      	str	r0, [r4, #0]
    7e4c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    7e50:	81a3      	strh	r3, [r4, #12]
    7e52:	9b00      	ldr	r3, [sp, #0]
    7e54:	6163      	str	r3, [r4, #20]
    7e56:	9b01      	ldr	r3, [sp, #4]
    7e58:	6120      	str	r0, [r4, #16]
    7e5a:	b15b      	cbz	r3, 7e74 <__smakebuf_r+0x74>
    7e5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    7e60:	4630      	mov	r0, r6
    7e62:	f001 fad9 	bl	9418 <_isatty_r>
    7e66:	b128      	cbz	r0, 7e74 <__smakebuf_r+0x74>
    7e68:	89a3      	ldrh	r3, [r4, #12]
    7e6a:	f023 0303 	bic.w	r3, r3, #3
    7e6e:	f043 0301 	orr.w	r3, r3, #1
    7e72:	81a3      	strh	r3, [r4, #12]
    7e74:	89a3      	ldrh	r3, [r4, #12]
    7e76:	431d      	orrs	r5, r3
    7e78:	81a5      	strh	r5, [r4, #12]
    7e7a:	e7cd      	b.n	7e18 <__smakebuf_r+0x18>
    7e7c:	00007505 	.word	0x00007505

00007e80 <__ascii_mbtowc>:
__ascii_mbtowc():
    7e80:	b082      	sub	sp, #8
    7e82:	b901      	cbnz	r1, 7e86 <__ascii_mbtowc+0x6>
    7e84:	a901      	add	r1, sp, #4
    7e86:	b142      	cbz	r2, 7e9a <__ascii_mbtowc+0x1a>
    7e88:	b14b      	cbz	r3, 7e9e <__ascii_mbtowc+0x1e>
    7e8a:	7813      	ldrb	r3, [r2, #0]
    7e8c:	600b      	str	r3, [r1, #0]
    7e8e:	7812      	ldrb	r2, [r2, #0]
    7e90:	1c10      	adds	r0, r2, #0
    7e92:	bf18      	it	ne
    7e94:	2001      	movne	r0, #1
    7e96:	b002      	add	sp, #8
    7e98:	4770      	bx	lr
    7e9a:	4610      	mov	r0, r2
    7e9c:	e7fb      	b.n	7e96 <__ascii_mbtowc+0x16>
    7e9e:	f06f 0001 	mvn.w	r0, #1
    7ea2:	e7f8      	b.n	7e96 <__ascii_mbtowc+0x16>
    7ea4:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    7ea8:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    7eac:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

00007eb0 <memchr>:
memchr():
    7eb0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    7eb4:	2a10      	cmp	r2, #16
    7eb6:	db2b      	blt.n	7f10 <memchr+0x60>
    7eb8:	f010 0f07 	tst.w	r0, #7
    7ebc:	d008      	beq.n	7ed0 <memchr+0x20>
    7ebe:	f810 3b01 	ldrb.w	r3, [r0], #1
    7ec2:	3a01      	subs	r2, #1
    7ec4:	428b      	cmp	r3, r1
    7ec6:	d02d      	beq.n	7f24 <memchr+0x74>
    7ec8:	f010 0f07 	tst.w	r0, #7
    7ecc:	b342      	cbz	r2, 7f20 <memchr+0x70>
    7ece:	d1f6      	bne.n	7ebe <memchr+0xe>
    7ed0:	b4f0      	push	{r4, r5, r6, r7}
    7ed2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    7ed6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    7eda:	f022 0407 	bic.w	r4, r2, #7
    7ede:	f07f 0700 	mvns.w	r7, #0
    7ee2:	2300      	movs	r3, #0
    7ee4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    7ee8:	3c08      	subs	r4, #8
    7eea:	ea85 0501 	eor.w	r5, r5, r1
    7eee:	ea86 0601 	eor.w	r6, r6, r1
    7ef2:	fa85 f547 	uadd8	r5, r5, r7
    7ef6:	faa3 f587 	sel	r5, r3, r7
    7efa:	fa86 f647 	uadd8	r6, r6, r7
    7efe:	faa5 f687 	sel	r6, r5, r7
    7f02:	b98e      	cbnz	r6, 7f28 <memchr+0x78>
    7f04:	d1ee      	bne.n	7ee4 <memchr+0x34>
    7f06:	bcf0      	pop	{r4, r5, r6, r7}
    7f08:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    7f0c:	f002 0207 	and.w	r2, r2, #7
    7f10:	b132      	cbz	r2, 7f20 <memchr+0x70>
    7f12:	f810 3b01 	ldrb.w	r3, [r0], #1
    7f16:	3a01      	subs	r2, #1
    7f18:	ea83 0301 	eor.w	r3, r3, r1
    7f1c:	b113      	cbz	r3, 7f24 <memchr+0x74>
    7f1e:	d1f8      	bne.n	7f12 <memchr+0x62>
    7f20:	2000      	movs	r0, #0
    7f22:	4770      	bx	lr
    7f24:	3801      	subs	r0, #1
    7f26:	4770      	bx	lr
    7f28:	2d00      	cmp	r5, #0
    7f2a:	bf06      	itte	eq
    7f2c:	4635      	moveq	r5, r6
    7f2e:	3803      	subeq	r0, #3
    7f30:	3807      	subne	r0, #7
    7f32:	f015 0f01 	tst.w	r5, #1
    7f36:	d107      	bne.n	7f48 <memchr+0x98>
    7f38:	3001      	adds	r0, #1
    7f3a:	f415 7f80 	tst.w	r5, #256	; 0x100
    7f3e:	bf02      	ittt	eq
    7f40:	3001      	addeq	r0, #1
    7f42:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    7f46:	3001      	addeq	r0, #1
    7f48:	bcf0      	pop	{r4, r5, r6, r7}
    7f4a:	3801      	subs	r0, #1
    7f4c:	4770      	bx	lr
    7f4e:	bf00      	nop

00007f50 <__malloc_lock>:
__malloc_lock():
    7f50:	4801      	ldr	r0, [pc, #4]	; (7f58 <__malloc_lock+0x8>)
    7f52:	f7fc b976 	b.w	4242 <__retarget_lock_acquire_recursive>
    7f56:	bf00      	nop
    7f58:	100012e4 	.word	0x100012e4

00007f5c <__malloc_unlock>:
__malloc_unlock():
    7f5c:	4801      	ldr	r0, [pc, #4]	; (7f64 <__malloc_unlock+0x8>)
    7f5e:	f7fc b971 	b.w	4244 <__retarget_lock_release_recursive>
    7f62:	bf00      	nop
    7f64:	100012e4 	.word	0x100012e4

00007f68 <_Balloc>:
_Balloc():
    7f68:	b570      	push	{r4, r5, r6, lr}
    7f6a:	6a45      	ldr	r5, [r0, #36]	; 0x24
    7f6c:	4604      	mov	r4, r0
    7f6e:	460e      	mov	r6, r1
    7f70:	b93d      	cbnz	r5, 7f82 <_Balloc+0x1a>
    7f72:	2010      	movs	r0, #16
    7f74:	f7fc f968 	bl	4248 <malloc>
    7f78:	e9c0 5501 	strd	r5, r5, [r0, #4]
    7f7c:	6260      	str	r0, [r4, #36]	; 0x24
    7f7e:	6005      	str	r5, [r0, #0]
    7f80:	60c5      	str	r5, [r0, #12]
    7f82:	6a65      	ldr	r5, [r4, #36]	; 0x24
    7f84:	68eb      	ldr	r3, [r5, #12]
    7f86:	b183      	cbz	r3, 7faa <_Balloc+0x42>
    7f88:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7f8a:	68db      	ldr	r3, [r3, #12]
    7f8c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    7f90:	b9b8      	cbnz	r0, 7fc2 <_Balloc+0x5a>
    7f92:	2101      	movs	r1, #1
    7f94:	fa01 f506 	lsl.w	r5, r1, r6
    7f98:	1d6a      	adds	r2, r5, #5
    7f9a:	0092      	lsls	r2, r2, #2
    7f9c:	4620      	mov	r0, r4
    7f9e:	f000 fbdb 	bl	8758 <_calloc_r>
    7fa2:	b160      	cbz	r0, 7fbe <_Balloc+0x56>
    7fa4:	e9c0 6501 	strd	r6, r5, [r0, #4]
    7fa8:	e00e      	b.n	7fc8 <_Balloc+0x60>
    7faa:	2221      	movs	r2, #33	; 0x21
    7fac:	2104      	movs	r1, #4
    7fae:	4620      	mov	r0, r4
    7fb0:	f000 fbd2 	bl	8758 <_calloc_r>
    7fb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
    7fb6:	60e8      	str	r0, [r5, #12]
    7fb8:	68db      	ldr	r3, [r3, #12]
    7fba:	2b00      	cmp	r3, #0
    7fbc:	d1e4      	bne.n	7f88 <_Balloc+0x20>
    7fbe:	2000      	movs	r0, #0
    7fc0:	bd70      	pop	{r4, r5, r6, pc}
    7fc2:	6802      	ldr	r2, [r0, #0]
    7fc4:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    7fc8:	2300      	movs	r3, #0
    7fca:	e9c0 3303 	strd	r3, r3, [r0, #12]
    7fce:	e7f7      	b.n	7fc0 <_Balloc+0x58>

00007fd0 <_Bfree>:
_Bfree():
    7fd0:	b570      	push	{r4, r5, r6, lr}
    7fd2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    7fd4:	4606      	mov	r6, r0
    7fd6:	460d      	mov	r5, r1
    7fd8:	b93c      	cbnz	r4, 7fea <_Bfree+0x1a>
    7fda:	2010      	movs	r0, #16
    7fdc:	f7fc f934 	bl	4248 <malloc>
    7fe0:	e9c0 4401 	strd	r4, r4, [r0, #4]
    7fe4:	6270      	str	r0, [r6, #36]	; 0x24
    7fe6:	6004      	str	r4, [r0, #0]
    7fe8:	60c4      	str	r4, [r0, #12]
    7fea:	b13d      	cbz	r5, 7ffc <_Bfree+0x2c>
    7fec:	6a73      	ldr	r3, [r6, #36]	; 0x24
    7fee:	686a      	ldr	r2, [r5, #4]
    7ff0:	68db      	ldr	r3, [r3, #12]
    7ff2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    7ff6:	6029      	str	r1, [r5, #0]
    7ff8:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    7ffc:	bd70      	pop	{r4, r5, r6, pc}

00007ffe <__multadd>:
__multadd():
    7ffe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8002:	690d      	ldr	r5, [r1, #16]
    8004:	461f      	mov	r7, r3
    8006:	4606      	mov	r6, r0
    8008:	460c      	mov	r4, r1
    800a:	f101 0c14 	add.w	ip, r1, #20
    800e:	2300      	movs	r3, #0
    8010:	f8dc 0000 	ldr.w	r0, [ip]
    8014:	b281      	uxth	r1, r0
    8016:	fb02 7101 	mla	r1, r2, r1, r7
    801a:	0c0f      	lsrs	r7, r1, #16
    801c:	0c00      	lsrs	r0, r0, #16
    801e:	fb02 7000 	mla	r0, r2, r0, r7
    8022:	b289      	uxth	r1, r1
    8024:	3301      	adds	r3, #1
    8026:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    802a:	429d      	cmp	r5, r3
    802c:	ea4f 4710 	mov.w	r7, r0, lsr #16
    8030:	f84c 1b04 	str.w	r1, [ip], #4
    8034:	dcec      	bgt.n	8010 <__multadd+0x12>
    8036:	b1d7      	cbz	r7, 806e <__multadd+0x70>
    8038:	68a3      	ldr	r3, [r4, #8]
    803a:	42ab      	cmp	r3, r5
    803c:	dc12      	bgt.n	8064 <__multadd+0x66>
    803e:	6861      	ldr	r1, [r4, #4]
    8040:	4630      	mov	r0, r6
    8042:	3101      	adds	r1, #1
    8044:	f7ff ff90 	bl	7f68 <_Balloc>
    8048:	6922      	ldr	r2, [r4, #16]
    804a:	3202      	adds	r2, #2
    804c:	f104 010c 	add.w	r1, r4, #12
    8050:	4680      	mov	r8, r0
    8052:	0092      	lsls	r2, r2, #2
    8054:	300c      	adds	r0, #12
    8056:	f7fc f907 	bl	4268 <memcpy>
    805a:	4621      	mov	r1, r4
    805c:	4630      	mov	r0, r6
    805e:	f7ff ffb7 	bl	7fd0 <_Bfree>
    8062:	4644      	mov	r4, r8
    8064:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    8068:	3501      	adds	r5, #1
    806a:	615f      	str	r7, [r3, #20]
    806c:	6125      	str	r5, [r4, #16]
    806e:	4620      	mov	r0, r4
    8070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00008074 <__s2b>:
__s2b():
    8074:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8078:	460c      	mov	r4, r1
    807a:	4615      	mov	r5, r2
    807c:	461f      	mov	r7, r3
    807e:	2209      	movs	r2, #9
    8080:	3308      	adds	r3, #8
    8082:	4606      	mov	r6, r0
    8084:	fb93 f3f2 	sdiv	r3, r3, r2
    8088:	2100      	movs	r1, #0
    808a:	2201      	movs	r2, #1
    808c:	429a      	cmp	r2, r3
    808e:	db20      	blt.n	80d2 <__s2b+0x5e>
    8090:	4630      	mov	r0, r6
    8092:	f7ff ff69 	bl	7f68 <_Balloc>
    8096:	9b08      	ldr	r3, [sp, #32]
    8098:	6143      	str	r3, [r0, #20]
    809a:	2d09      	cmp	r5, #9
    809c:	f04f 0301 	mov.w	r3, #1
    80a0:	6103      	str	r3, [r0, #16]
    80a2:	dd19      	ble.n	80d8 <__s2b+0x64>
    80a4:	f104 0909 	add.w	r9, r4, #9
    80a8:	46c8      	mov	r8, r9
    80aa:	442c      	add	r4, r5
    80ac:	f818 3b01 	ldrb.w	r3, [r8], #1
    80b0:	4601      	mov	r1, r0
    80b2:	3b30      	subs	r3, #48	; 0x30
    80b4:	220a      	movs	r2, #10
    80b6:	4630      	mov	r0, r6
    80b8:	f7ff ffa1 	bl	7ffe <__multadd>
    80bc:	45a0      	cmp	r8, r4
    80be:	d1f5      	bne.n	80ac <__s2b+0x38>
    80c0:	f1a5 0408 	sub.w	r4, r5, #8
    80c4:	444c      	add	r4, r9
    80c6:	1b2d      	subs	r5, r5, r4
    80c8:	1963      	adds	r3, r4, r5
    80ca:	42bb      	cmp	r3, r7
    80cc:	db07      	blt.n	80de <__s2b+0x6a>
    80ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    80d2:	0052      	lsls	r2, r2, #1
    80d4:	3101      	adds	r1, #1
    80d6:	e7d9      	b.n	808c <__s2b+0x18>
    80d8:	340a      	adds	r4, #10
    80da:	2509      	movs	r5, #9
    80dc:	e7f3      	b.n	80c6 <__s2b+0x52>
    80de:	f814 3b01 	ldrb.w	r3, [r4], #1
    80e2:	4601      	mov	r1, r0
    80e4:	3b30      	subs	r3, #48	; 0x30
    80e6:	220a      	movs	r2, #10
    80e8:	4630      	mov	r0, r6
    80ea:	f7ff ff88 	bl	7ffe <__multadd>
    80ee:	e7eb      	b.n	80c8 <__s2b+0x54>

000080f0 <__hi0bits>:
__hi0bits():
    80f0:	0c02      	lsrs	r2, r0, #16
    80f2:	0412      	lsls	r2, r2, #16
    80f4:	4603      	mov	r3, r0
    80f6:	b9ca      	cbnz	r2, 812c <__hi0bits+0x3c>
    80f8:	0403      	lsls	r3, r0, #16
    80fa:	2010      	movs	r0, #16
    80fc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    8100:	bf04      	itt	eq
    8102:	021b      	lsleq	r3, r3, #8
    8104:	3008      	addeq	r0, #8
    8106:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    810a:	bf04      	itt	eq
    810c:	011b      	lsleq	r3, r3, #4
    810e:	3004      	addeq	r0, #4
    8110:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    8114:	bf04      	itt	eq
    8116:	009b      	lsleq	r3, r3, #2
    8118:	3002      	addeq	r0, #2
    811a:	2b00      	cmp	r3, #0
    811c:	db05      	blt.n	812a <__hi0bits+0x3a>
    811e:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
    8122:	f100 0001 	add.w	r0, r0, #1
    8126:	bf08      	it	eq
    8128:	2020      	moveq	r0, #32
    812a:	4770      	bx	lr
    812c:	2000      	movs	r0, #0
    812e:	e7e5      	b.n	80fc <__hi0bits+0xc>

00008130 <__lo0bits>:
__lo0bits():
    8130:	6803      	ldr	r3, [r0, #0]
    8132:	f013 0207 	ands.w	r2, r3, #7
    8136:	4601      	mov	r1, r0
    8138:	d00b      	beq.n	8152 <__lo0bits+0x22>
    813a:	07da      	lsls	r2, r3, #31
    813c:	d424      	bmi.n	8188 <__lo0bits+0x58>
    813e:	0798      	lsls	r0, r3, #30
    8140:	bf49      	itett	mi
    8142:	085b      	lsrmi	r3, r3, #1
    8144:	089b      	lsrpl	r3, r3, #2
    8146:	2001      	movmi	r0, #1
    8148:	600b      	strmi	r3, [r1, #0]
    814a:	bf5c      	itt	pl
    814c:	600b      	strpl	r3, [r1, #0]
    814e:	2002      	movpl	r0, #2
    8150:	4770      	bx	lr
    8152:	b298      	uxth	r0, r3
    8154:	b9b0      	cbnz	r0, 8184 <__lo0bits+0x54>
    8156:	0c1b      	lsrs	r3, r3, #16
    8158:	2010      	movs	r0, #16
    815a:	f013 0fff 	tst.w	r3, #255	; 0xff
    815e:	bf04      	itt	eq
    8160:	0a1b      	lsreq	r3, r3, #8
    8162:	3008      	addeq	r0, #8
    8164:	071a      	lsls	r2, r3, #28
    8166:	bf04      	itt	eq
    8168:	091b      	lsreq	r3, r3, #4
    816a:	3004      	addeq	r0, #4
    816c:	079a      	lsls	r2, r3, #30
    816e:	bf04      	itt	eq
    8170:	089b      	lsreq	r3, r3, #2
    8172:	3002      	addeq	r0, #2
    8174:	07da      	lsls	r2, r3, #31
    8176:	d403      	bmi.n	8180 <__lo0bits+0x50>
    8178:	085b      	lsrs	r3, r3, #1
    817a:	f100 0001 	add.w	r0, r0, #1
    817e:	d005      	beq.n	818c <__lo0bits+0x5c>
    8180:	600b      	str	r3, [r1, #0]
    8182:	4770      	bx	lr
    8184:	4610      	mov	r0, r2
    8186:	e7e8      	b.n	815a <__lo0bits+0x2a>
    8188:	2000      	movs	r0, #0
    818a:	4770      	bx	lr
    818c:	2020      	movs	r0, #32
    818e:	4770      	bx	lr

00008190 <__i2b>:
__i2b():
    8190:	b510      	push	{r4, lr}
    8192:	460c      	mov	r4, r1
    8194:	2101      	movs	r1, #1
    8196:	f7ff fee7 	bl	7f68 <_Balloc>
    819a:	2201      	movs	r2, #1
    819c:	6144      	str	r4, [r0, #20]
    819e:	6102      	str	r2, [r0, #16]
    81a0:	bd10      	pop	{r4, pc}

000081a2 <__multiply>:
__multiply():
    81a2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    81a6:	4690      	mov	r8, r2
    81a8:	690a      	ldr	r2, [r1, #16]
    81aa:	f8d8 3010 	ldr.w	r3, [r8, #16]
    81ae:	429a      	cmp	r2, r3
    81b0:	bfb8      	it	lt
    81b2:	460b      	movlt	r3, r1
    81b4:	460c      	mov	r4, r1
    81b6:	bfbc      	itt	lt
    81b8:	4644      	movlt	r4, r8
    81ba:	4698      	movlt	r8, r3
    81bc:	6927      	ldr	r7, [r4, #16]
    81be:	f8d8 9010 	ldr.w	r9, [r8, #16]
    81c2:	68a3      	ldr	r3, [r4, #8]
    81c4:	6861      	ldr	r1, [r4, #4]
    81c6:	eb07 0609 	add.w	r6, r7, r9
    81ca:	42b3      	cmp	r3, r6
    81cc:	bfb8      	it	lt
    81ce:	3101      	addlt	r1, #1
    81d0:	f7ff feca 	bl	7f68 <_Balloc>
    81d4:	f100 0514 	add.w	r5, r0, #20
    81d8:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    81dc:	462b      	mov	r3, r5
    81de:	2200      	movs	r2, #0
    81e0:	4573      	cmp	r3, lr
    81e2:	d316      	bcc.n	8212 <__multiply+0x70>
    81e4:	f104 0314 	add.w	r3, r4, #20
    81e8:	f108 0214 	add.w	r2, r8, #20
    81ec:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    81f0:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    81f4:	9300      	str	r3, [sp, #0]
    81f6:	9b00      	ldr	r3, [sp, #0]
    81f8:	9201      	str	r2, [sp, #4]
    81fa:	4293      	cmp	r3, r2
    81fc:	d80c      	bhi.n	8218 <__multiply+0x76>
    81fe:	2e00      	cmp	r6, #0
    8200:	dd03      	ble.n	820a <__multiply+0x68>
    8202:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    8206:	2b00      	cmp	r3, #0
    8208:	d059      	beq.n	82be <__multiply+0x11c>
    820a:	6106      	str	r6, [r0, #16]
    820c:	b003      	add	sp, #12
    820e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8212:	f843 2b04 	str.w	r2, [r3], #4
    8216:	e7e3      	b.n	81e0 <__multiply+0x3e>
    8218:	f8b2 a000 	ldrh.w	sl, [r2]
    821c:	f1ba 0f00 	cmp.w	sl, #0
    8220:	d023      	beq.n	826a <__multiply+0xc8>
    8222:	f104 0914 	add.w	r9, r4, #20
    8226:	46ac      	mov	ip, r5
    8228:	f04f 0800 	mov.w	r8, #0
    822c:	f859 1b04 	ldr.w	r1, [r9], #4
    8230:	f8dc b000 	ldr.w	fp, [ip]
    8234:	b28b      	uxth	r3, r1
    8236:	fa1f fb8b 	uxth.w	fp, fp
    823a:	fb0a b303 	mla	r3, sl, r3, fp
    823e:	ea4f 4b11 	mov.w	fp, r1, lsr #16
    8242:	f8dc 1000 	ldr.w	r1, [ip]
    8246:	4443      	add	r3, r8
    8248:	ea4f 4811 	mov.w	r8, r1, lsr #16
    824c:	fb0a 810b 	mla	r1, sl, fp, r8
    8250:	eb01 4113 	add.w	r1, r1, r3, lsr #16
    8254:	b29b      	uxth	r3, r3
    8256:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    825a:	454f      	cmp	r7, r9
    825c:	ea4f 4811 	mov.w	r8, r1, lsr #16
    8260:	f84c 3b04 	str.w	r3, [ip], #4
    8264:	d8e2      	bhi.n	822c <__multiply+0x8a>
    8266:	f8cc 8000 	str.w	r8, [ip]
    826a:	9b01      	ldr	r3, [sp, #4]
    826c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
    8270:	3204      	adds	r2, #4
    8272:	f1b9 0f00 	cmp.w	r9, #0
    8276:	d020      	beq.n	82ba <__multiply+0x118>
    8278:	682b      	ldr	r3, [r5, #0]
    827a:	f104 0814 	add.w	r8, r4, #20
    827e:	46ac      	mov	ip, r5
    8280:	f04f 0a00 	mov.w	sl, #0
    8284:	f8b8 1000 	ldrh.w	r1, [r8]
    8288:	f8bc b002 	ldrh.w	fp, [ip, #2]
    828c:	fb09 b101 	mla	r1, r9, r1, fp
    8290:	448a      	add	sl, r1
    8292:	b29b      	uxth	r3, r3
    8294:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    8298:	f84c 3b04 	str.w	r3, [ip], #4
    829c:	f858 3b04 	ldr.w	r3, [r8], #4
    82a0:	f8bc 1000 	ldrh.w	r1, [ip]
    82a4:	0c1b      	lsrs	r3, r3, #16
    82a6:	fb09 1303 	mla	r3, r9, r3, r1
    82aa:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    82ae:	4547      	cmp	r7, r8
    82b0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    82b4:	d8e6      	bhi.n	8284 <__multiply+0xe2>
    82b6:	f8cc 3000 	str.w	r3, [ip]
    82ba:	3504      	adds	r5, #4
    82bc:	e79b      	b.n	81f6 <__multiply+0x54>
    82be:	3e01      	subs	r6, #1
    82c0:	e79d      	b.n	81fe <__multiply+0x5c>
    82c2:	Address 0x00000000000082c2 is out of bounds.


000082c4 <__pow5mult>:
__pow5mult():
    82c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    82c8:	4615      	mov	r5, r2
    82ca:	f012 0203 	ands.w	r2, r2, #3
    82ce:	4606      	mov	r6, r0
    82d0:	460f      	mov	r7, r1
    82d2:	d007      	beq.n	82e4 <__pow5mult+0x20>
    82d4:	3a01      	subs	r2, #1
    82d6:	4c21      	ldr	r4, [pc, #132]	; (835c <__pow5mult+0x98>)
    82d8:	2300      	movs	r3, #0
    82da:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    82de:	f7ff fe8e 	bl	7ffe <__multadd>
    82e2:	4607      	mov	r7, r0
    82e4:	10ad      	asrs	r5, r5, #2
    82e6:	d035      	beq.n	8354 <__pow5mult+0x90>
    82e8:	6a74      	ldr	r4, [r6, #36]	; 0x24
    82ea:	b93c      	cbnz	r4, 82fc <__pow5mult+0x38>
    82ec:	2010      	movs	r0, #16
    82ee:	f7fb ffab 	bl	4248 <malloc>
    82f2:	e9c0 4401 	strd	r4, r4, [r0, #4]
    82f6:	6270      	str	r0, [r6, #36]	; 0x24
    82f8:	6004      	str	r4, [r0, #0]
    82fa:	60c4      	str	r4, [r0, #12]
    82fc:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    8300:	f8d8 4008 	ldr.w	r4, [r8, #8]
    8304:	b94c      	cbnz	r4, 831a <__pow5mult+0x56>
    8306:	f240 2171 	movw	r1, #625	; 0x271
    830a:	4630      	mov	r0, r6
    830c:	f7ff ff40 	bl	8190 <__i2b>
    8310:	2300      	movs	r3, #0
    8312:	f8c8 0008 	str.w	r0, [r8, #8]
    8316:	4604      	mov	r4, r0
    8318:	6003      	str	r3, [r0, #0]
    831a:	f04f 0800 	mov.w	r8, #0
    831e:	07eb      	lsls	r3, r5, #31
    8320:	d50a      	bpl.n	8338 <__pow5mult+0x74>
    8322:	4639      	mov	r1, r7
    8324:	4622      	mov	r2, r4
    8326:	4630      	mov	r0, r6
    8328:	f7ff ff3b 	bl	81a2 <__multiply>
    832c:	4639      	mov	r1, r7
    832e:	4681      	mov	r9, r0
    8330:	4630      	mov	r0, r6
    8332:	f7ff fe4d 	bl	7fd0 <_Bfree>
    8336:	464f      	mov	r7, r9
    8338:	106d      	asrs	r5, r5, #1
    833a:	d00b      	beq.n	8354 <__pow5mult+0x90>
    833c:	6820      	ldr	r0, [r4, #0]
    833e:	b938      	cbnz	r0, 8350 <__pow5mult+0x8c>
    8340:	4622      	mov	r2, r4
    8342:	4621      	mov	r1, r4
    8344:	4630      	mov	r0, r6
    8346:	f7ff ff2c 	bl	81a2 <__multiply>
    834a:	6020      	str	r0, [r4, #0]
    834c:	f8c0 8000 	str.w	r8, [r0]
    8350:	4604      	mov	r4, r0
    8352:	e7e4      	b.n	831e <__pow5mult+0x5a>
    8354:	4638      	mov	r0, r7
    8356:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    835a:	bf00      	nop
    835c:	0000b4a0 	.word	0x0000b4a0

00008360 <__lshift>:
__lshift():
    8360:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    8364:	460c      	mov	r4, r1
    8366:	ea4f 1a62 	mov.w	sl, r2, asr #5
    836a:	6923      	ldr	r3, [r4, #16]
    836c:	6849      	ldr	r1, [r1, #4]
    836e:	eb0a 0903 	add.w	r9, sl, r3
    8372:	68a3      	ldr	r3, [r4, #8]
    8374:	4607      	mov	r7, r0
    8376:	4616      	mov	r6, r2
    8378:	f109 0501 	add.w	r5, r9, #1
    837c:	42ab      	cmp	r3, r5
    837e:	db33      	blt.n	83e8 <__lshift+0x88>
    8380:	4638      	mov	r0, r7
    8382:	f7ff fdf1 	bl	7f68 <_Balloc>
    8386:	2300      	movs	r3, #0
    8388:	4680      	mov	r8, r0
    838a:	f100 0114 	add.w	r1, r0, #20
    838e:	f100 0210 	add.w	r2, r0, #16
    8392:	4618      	mov	r0, r3
    8394:	4553      	cmp	r3, sl
    8396:	db2a      	blt.n	83ee <__lshift+0x8e>
    8398:	6920      	ldr	r0, [r4, #16]
    839a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    839e:	f104 0314 	add.w	r3, r4, #20
    83a2:	f016 021f 	ands.w	r2, r6, #31
    83a6:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    83aa:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    83ae:	d022      	beq.n	83f6 <__lshift+0x96>
    83b0:	f1c2 0e20 	rsb	lr, r2, #32
    83b4:	2000      	movs	r0, #0
    83b6:	681e      	ldr	r6, [r3, #0]
    83b8:	4096      	lsls	r6, r2
    83ba:	4330      	orrs	r0, r6
    83bc:	f841 0b04 	str.w	r0, [r1], #4
    83c0:	f853 0b04 	ldr.w	r0, [r3], #4
    83c4:	459c      	cmp	ip, r3
    83c6:	fa20 f00e 	lsr.w	r0, r0, lr
    83ca:	d8f4      	bhi.n	83b6 <__lshift+0x56>
    83cc:	6008      	str	r0, [r1, #0]
    83ce:	b108      	cbz	r0, 83d4 <__lshift+0x74>
    83d0:	f109 0502 	add.w	r5, r9, #2
    83d4:	3d01      	subs	r5, #1
    83d6:	4638      	mov	r0, r7
    83d8:	f8c8 5010 	str.w	r5, [r8, #16]
    83dc:	4621      	mov	r1, r4
    83de:	f7ff fdf7 	bl	7fd0 <_Bfree>
    83e2:	4640      	mov	r0, r8
    83e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    83e8:	3101      	adds	r1, #1
    83ea:	005b      	lsls	r3, r3, #1
    83ec:	e7c6      	b.n	837c <__lshift+0x1c>
    83ee:	f842 0f04 	str.w	r0, [r2, #4]!
    83f2:	3301      	adds	r3, #1
    83f4:	e7ce      	b.n	8394 <__lshift+0x34>
    83f6:	3904      	subs	r1, #4
    83f8:	f853 2b04 	ldr.w	r2, [r3], #4
    83fc:	f841 2f04 	str.w	r2, [r1, #4]!
    8400:	459c      	cmp	ip, r3
    8402:	d8f9      	bhi.n	83f8 <__lshift+0x98>
    8404:	e7e6      	b.n	83d4 <__lshift+0x74>

00008406 <__mcmp>:
__mcmp():
    8406:	6903      	ldr	r3, [r0, #16]
    8408:	690a      	ldr	r2, [r1, #16]
    840a:	1a9b      	subs	r3, r3, r2
    840c:	b530      	push	{r4, r5, lr}
    840e:	d10c      	bne.n	842a <__mcmp+0x24>
    8410:	0092      	lsls	r2, r2, #2
    8412:	3014      	adds	r0, #20
    8414:	3114      	adds	r1, #20
    8416:	1884      	adds	r4, r0, r2
    8418:	4411      	add	r1, r2
    841a:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    841e:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    8422:	4295      	cmp	r5, r2
    8424:	d003      	beq.n	842e <__mcmp+0x28>
    8426:	d305      	bcc.n	8434 <__mcmp+0x2e>
    8428:	2301      	movs	r3, #1
    842a:	4618      	mov	r0, r3
    842c:	bd30      	pop	{r4, r5, pc}
    842e:	42a0      	cmp	r0, r4
    8430:	d3f3      	bcc.n	841a <__mcmp+0x14>
    8432:	e7fa      	b.n	842a <__mcmp+0x24>
    8434:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    8438:	e7f7      	b.n	842a <__mcmp+0x24>

0000843a <__mdiff>:
__mdiff():
    843a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    843e:	460d      	mov	r5, r1
    8440:	4607      	mov	r7, r0
    8442:	4611      	mov	r1, r2
    8444:	4628      	mov	r0, r5
    8446:	4614      	mov	r4, r2
    8448:	f7ff ffdd 	bl	8406 <__mcmp>
    844c:	1e06      	subs	r6, r0, #0
    844e:	d108      	bne.n	8462 <__mdiff+0x28>
    8450:	4631      	mov	r1, r6
    8452:	4638      	mov	r0, r7
    8454:	f7ff fd88 	bl	7f68 <_Balloc>
    8458:	2301      	movs	r3, #1
    845a:	e9c0 3604 	strd	r3, r6, [r0, #16]
    845e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    8462:	bfa4      	itt	ge
    8464:	4623      	movge	r3, r4
    8466:	462c      	movge	r4, r5
    8468:	4638      	mov	r0, r7
    846a:	6861      	ldr	r1, [r4, #4]
    846c:	bfa6      	itte	ge
    846e:	461d      	movge	r5, r3
    8470:	2600      	movge	r6, #0
    8472:	2601      	movlt	r6, #1
    8474:	f7ff fd78 	bl	7f68 <_Balloc>
    8478:	692b      	ldr	r3, [r5, #16]
    847a:	60c6      	str	r6, [r0, #12]
    847c:	6926      	ldr	r6, [r4, #16]
    847e:	f105 0914 	add.w	r9, r5, #20
    8482:	f104 0214 	add.w	r2, r4, #20
    8486:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    848a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    848e:	f100 0514 	add.w	r5, r0, #20
    8492:	f04f 0e00 	mov.w	lr, #0
    8496:	f852 ab04 	ldr.w	sl, [r2], #4
    849a:	f859 4b04 	ldr.w	r4, [r9], #4
    849e:	fa1e f18a 	uxtah	r1, lr, sl
    84a2:	b2a3      	uxth	r3, r4
    84a4:	1ac9      	subs	r1, r1, r3
    84a6:	0c23      	lsrs	r3, r4, #16
    84a8:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    84ac:	eb03 4321 	add.w	r3, r3, r1, asr #16
    84b0:	b289      	uxth	r1, r1
    84b2:	ea4f 4e23 	mov.w	lr, r3, asr #16
    84b6:	45c8      	cmp	r8, r9
    84b8:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    84bc:	4694      	mov	ip, r2
    84be:	f845 3b04 	str.w	r3, [r5], #4
    84c2:	d8e8      	bhi.n	8496 <__mdiff+0x5c>
    84c4:	45bc      	cmp	ip, r7
    84c6:	d304      	bcc.n	84d2 <__mdiff+0x98>
    84c8:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    84cc:	b183      	cbz	r3, 84f0 <__mdiff+0xb6>
    84ce:	6106      	str	r6, [r0, #16]
    84d0:	e7c5      	b.n	845e <__mdiff+0x24>
    84d2:	f85c 1b04 	ldr.w	r1, [ip], #4
    84d6:	fa1e f381 	uxtah	r3, lr, r1
    84da:	141a      	asrs	r2, r3, #16
    84dc:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    84e0:	b29b      	uxth	r3, r3
    84e2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    84e6:	ea4f 4e22 	mov.w	lr, r2, asr #16
    84ea:	f845 3b04 	str.w	r3, [r5], #4
    84ee:	e7e9      	b.n	84c4 <__mdiff+0x8a>
    84f0:	3e01      	subs	r6, #1
    84f2:	e7e9      	b.n	84c8 <__mdiff+0x8e>

000084f4 <__ulp>:
__ulp():
    84f4:	4b11      	ldr	r3, [pc, #68]	; (853c <__ulp+0x48>)
    84f6:	ee10 2a90 	vmov	r2, s1
    84fa:	401a      	ands	r2, r3
    84fc:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
    8500:	2b00      	cmp	r3, #0
    8502:	dd04      	ble.n	850e <__ulp+0x1a>
    8504:	2000      	movs	r0, #0
    8506:	4619      	mov	r1, r3
    8508:	ec41 0b10 	vmov	d0, r0, r1
    850c:	4770      	bx	lr
    850e:	425b      	negs	r3, r3
    8510:	151b      	asrs	r3, r3, #20
    8512:	2b13      	cmp	r3, #19
    8514:	f04f 0000 	mov.w	r0, #0
    8518:	f04f 0100 	mov.w	r1, #0
    851c:	dc04      	bgt.n	8528 <__ulp+0x34>
    851e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    8522:	fa42 f103 	asr.w	r1, r2, r3
    8526:	e7ef      	b.n	8508 <__ulp+0x14>
    8528:	3b14      	subs	r3, #20
    852a:	2b1e      	cmp	r3, #30
    852c:	bfda      	itte	le
    852e:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
    8532:	fa22 f303 	lsrle.w	r3, r2, r3
    8536:	2301      	movgt	r3, #1
    8538:	4618      	mov	r0, r3
    853a:	e7e5      	b.n	8508 <__ulp+0x14>
    853c:	7ff00000 	.word	0x7ff00000

00008540 <__b2d>:
__b2d():
    8540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8542:	6905      	ldr	r5, [r0, #16]
    8544:	f100 0714 	add.w	r7, r0, #20
    8548:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    854c:	1f2e      	subs	r6, r5, #4
    854e:	f855 4c04 	ldr.w	r4, [r5, #-4]
    8552:	4620      	mov	r0, r4
    8554:	f7ff fdcc 	bl	80f0 <__hi0bits>
    8558:	f1c0 0320 	rsb	r3, r0, #32
    855c:	280a      	cmp	r0, #10
    855e:	600b      	str	r3, [r1, #0]
    8560:	f8df c078 	ldr.w	ip, [pc, #120]	; 85dc <__b2d+0x9c>
    8564:	dc14      	bgt.n	8590 <__b2d+0x50>
    8566:	f1c0 0e0b 	rsb	lr, r0, #11
    856a:	fa24 f10e 	lsr.w	r1, r4, lr
    856e:	42b7      	cmp	r7, r6
    8570:	ea41 030c 	orr.w	r3, r1, ip
    8574:	bf34      	ite	cc
    8576:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    857a:	2100      	movcs	r1, #0
    857c:	3015      	adds	r0, #21
    857e:	fa04 f000 	lsl.w	r0, r4, r0
    8582:	fa21 f10e 	lsr.w	r1, r1, lr
    8586:	ea40 0201 	orr.w	r2, r0, r1
    858a:	ec43 2b10 	vmov	d0, r2, r3
    858e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8590:	42b7      	cmp	r7, r6
    8592:	bf3a      	itte	cc
    8594:	f1a5 0608 	subcc.w	r6, r5, #8
    8598:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    859c:	2100      	movcs	r1, #0
    859e:	380b      	subs	r0, #11
    85a0:	d017      	beq.n	85d2 <__b2d+0x92>
    85a2:	f1c0 0c20 	rsb	ip, r0, #32
    85a6:	fa04 f500 	lsl.w	r5, r4, r0
    85aa:	42be      	cmp	r6, r7
    85ac:	fa21 f40c 	lsr.w	r4, r1, ip
    85b0:	ea45 0504 	orr.w	r5, r5, r4
    85b4:	bf8c      	ite	hi
    85b6:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
    85ba:	2400      	movls	r4, #0
    85bc:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
    85c0:	fa01 f000 	lsl.w	r0, r1, r0
    85c4:	fa24 f40c 	lsr.w	r4, r4, ip
    85c8:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    85cc:	ea40 0204 	orr.w	r2, r0, r4
    85d0:	e7db      	b.n	858a <__b2d+0x4a>
    85d2:	ea44 030c 	orr.w	r3, r4, ip
    85d6:	460a      	mov	r2, r1
    85d8:	e7d7      	b.n	858a <__b2d+0x4a>
    85da:	bf00      	nop
    85dc:	3ff00000 	.word	0x3ff00000

000085e0 <__d2b>:
__d2b():
    85e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    85e4:	460e      	mov	r6, r1
    85e6:	2101      	movs	r1, #1
    85e8:	ec59 8b10 	vmov	r8, r9, d0
    85ec:	4615      	mov	r5, r2
    85ee:	f7ff fcbb 	bl	7f68 <_Balloc>
    85f2:	f3c9 540a 	ubfx	r4, r9, #20, #11
    85f6:	4607      	mov	r7, r0
    85f8:	f3c9 0313 	ubfx	r3, r9, #0, #20
    85fc:	bb2c      	cbnz	r4, 864a <__d2b+0x6a>
    85fe:	9301      	str	r3, [sp, #4]
    8600:	f1b8 0300 	subs.w	r3, r8, #0
    8604:	d026      	beq.n	8654 <__d2b+0x74>
    8606:	4668      	mov	r0, sp
    8608:	9300      	str	r3, [sp, #0]
    860a:	f7ff fd91 	bl	8130 <__lo0bits>
    860e:	9900      	ldr	r1, [sp, #0]
    8610:	b1f0      	cbz	r0, 8650 <__d2b+0x70>
    8612:	9a01      	ldr	r2, [sp, #4]
    8614:	f1c0 0320 	rsb	r3, r0, #32
    8618:	fa02 f303 	lsl.w	r3, r2, r3
    861c:	430b      	orrs	r3, r1
    861e:	40c2      	lsrs	r2, r0
    8620:	617b      	str	r3, [r7, #20]
    8622:	9201      	str	r2, [sp, #4]
    8624:	9b01      	ldr	r3, [sp, #4]
    8626:	61bb      	str	r3, [r7, #24]
    8628:	2b00      	cmp	r3, #0
    862a:	bf14      	ite	ne
    862c:	2102      	movne	r1, #2
    862e:	2101      	moveq	r1, #1
    8630:	6139      	str	r1, [r7, #16]
    8632:	b1c4      	cbz	r4, 8666 <__d2b+0x86>
    8634:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    8638:	4404      	add	r4, r0
    863a:	6034      	str	r4, [r6, #0]
    863c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    8640:	6028      	str	r0, [r5, #0]
    8642:	4638      	mov	r0, r7
    8644:	b003      	add	sp, #12
    8646:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    864a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    864e:	e7d6      	b.n	85fe <__d2b+0x1e>
    8650:	6179      	str	r1, [r7, #20]
    8652:	e7e7      	b.n	8624 <__d2b+0x44>
    8654:	a801      	add	r0, sp, #4
    8656:	f7ff fd6b 	bl	8130 <__lo0bits>
    865a:	9b01      	ldr	r3, [sp, #4]
    865c:	617b      	str	r3, [r7, #20]
    865e:	2101      	movs	r1, #1
    8660:	6139      	str	r1, [r7, #16]
    8662:	3020      	adds	r0, #32
    8664:	e7e5      	b.n	8632 <__d2b+0x52>
    8666:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    866a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    866e:	6030      	str	r0, [r6, #0]
    8670:	6918      	ldr	r0, [r3, #16]
    8672:	f7ff fd3d 	bl	80f0 <__hi0bits>
    8676:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    867a:	e7e1      	b.n	8640 <__d2b+0x60>

0000867c <__ratio>:
__ratio():
    867c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8680:	4688      	mov	r8, r1
    8682:	4669      	mov	r1, sp
    8684:	4681      	mov	r9, r0
    8686:	f7ff ff5b 	bl	8540 <__b2d>
    868a:	a901      	add	r1, sp, #4
    868c:	4640      	mov	r0, r8
    868e:	ec57 6b10 	vmov	r6, r7, d0
    8692:	f7ff ff55 	bl	8540 <__b2d>
    8696:	f8d9 3010 	ldr.w	r3, [r9, #16]
    869a:	f8d8 2010 	ldr.w	r2, [r8, #16]
    869e:	eba3 0c02 	sub.w	ip, r3, r2
    86a2:	e9dd 3200 	ldrd	r3, r2, [sp]
    86a6:	1a9b      	subs	r3, r3, r2
    86a8:	eb03 134c 	add.w	r3, r3, ip, lsl #5
    86ac:	ec5b ab10 	vmov	sl, fp, d0
    86b0:	2b00      	cmp	r3, #0
    86b2:	bfce      	itee	gt
    86b4:	463a      	movgt	r2, r7
    86b6:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
    86ba:	465a      	movle	r2, fp
    86bc:	4659      	mov	r1, fp
    86be:	463d      	mov	r5, r7
    86c0:	bfd4      	ite	le
    86c2:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
    86c6:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
    86ca:	4630      	mov	r0, r6
    86cc:	ee10 2a10 	vmov	r2, s0
    86d0:	460b      	mov	r3, r1
    86d2:	4629      	mov	r1, r5
    86d4:	f001 fa58 	bl	9b88 <__aeabi_ddiv>
    86d8:	ec41 0b10 	vmov	d0, r0, r1
    86dc:	b003      	add	sp, #12
    86de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000086e2 <__copybits>:
__copybits():
    86e2:	3901      	subs	r1, #1
    86e4:	b510      	push	{r4, lr}
    86e6:	1149      	asrs	r1, r1, #5
    86e8:	6914      	ldr	r4, [r2, #16]
    86ea:	3101      	adds	r1, #1
    86ec:	f102 0314 	add.w	r3, r2, #20
    86f0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    86f4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
    86f8:	42a3      	cmp	r3, r4
    86fa:	4602      	mov	r2, r0
    86fc:	d303      	bcc.n	8706 <__copybits+0x24>
    86fe:	2300      	movs	r3, #0
    8700:	428a      	cmp	r2, r1
    8702:	d305      	bcc.n	8710 <__copybits+0x2e>
    8704:	bd10      	pop	{r4, pc}
    8706:	f853 2b04 	ldr.w	r2, [r3], #4
    870a:	f840 2b04 	str.w	r2, [r0], #4
    870e:	e7f3      	b.n	86f8 <__copybits+0x16>
    8710:	f842 3b04 	str.w	r3, [r2], #4
    8714:	e7f4      	b.n	8700 <__copybits+0x1e>

00008716 <__any_on>:
__any_on():
    8716:	f100 0214 	add.w	r2, r0, #20
    871a:	6900      	ldr	r0, [r0, #16]
    871c:	114b      	asrs	r3, r1, #5
    871e:	4298      	cmp	r0, r3
    8720:	b510      	push	{r4, lr}
    8722:	db11      	blt.n	8748 <__any_on+0x32>
    8724:	dd0a      	ble.n	873c <__any_on+0x26>
    8726:	f011 011f 	ands.w	r1, r1, #31
    872a:	d007      	beq.n	873c <__any_on+0x26>
    872c:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
    8730:	fa24 f001 	lsr.w	r0, r4, r1
    8734:	fa00 f101 	lsl.w	r1, r0, r1
    8738:	428c      	cmp	r4, r1
    873a:	d10b      	bne.n	8754 <__any_on+0x3e>
    873c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    8740:	4293      	cmp	r3, r2
    8742:	d803      	bhi.n	874c <__any_on+0x36>
    8744:	2000      	movs	r0, #0
    8746:	bd10      	pop	{r4, pc}
    8748:	4603      	mov	r3, r0
    874a:	e7f7      	b.n	873c <__any_on+0x26>
    874c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    8750:	2900      	cmp	r1, #0
    8752:	d0f5      	beq.n	8740 <__any_on+0x2a>
    8754:	2001      	movs	r0, #1
    8756:	e7f6      	b.n	8746 <__any_on+0x30>

00008758 <_calloc_r>:
_calloc_r():
    8758:	b538      	push	{r3, r4, r5, lr}
    875a:	fb02 f401 	mul.w	r4, r2, r1
    875e:	4621      	mov	r1, r4
    8760:	f7fb fe00 	bl	4364 <_malloc_r>
    8764:	4605      	mov	r5, r0
    8766:	b118      	cbz	r0, 8770 <_calloc_r+0x18>
    8768:	4622      	mov	r2, r4
    876a:	2100      	movs	r1, #0
    876c:	f7fb fda4 	bl	42b8 <memset>
    8770:	4628      	mov	r0, r5
    8772:	bd38      	pop	{r3, r4, r5, pc}

00008774 <_realloc_r>:
_realloc_r():
    8774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8776:	4607      	mov	r7, r0
    8778:	4614      	mov	r4, r2
    877a:	460e      	mov	r6, r1
    877c:	b921      	cbnz	r1, 8788 <_realloc_r+0x14>
    877e:	4611      	mov	r1, r2
    8780:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    8784:	f7fb bdee 	b.w	4364 <_malloc_r>
    8788:	b922      	cbnz	r2, 8794 <_realloc_r+0x20>
    878a:	f7fb fd9d 	bl	42c8 <_free_r>
    878e:	4625      	mov	r5, r4
    8790:	4628      	mov	r0, r5
    8792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8794:	f000 fe62 	bl	945c <_malloc_usable_size_r>
    8798:	42a0      	cmp	r0, r4
    879a:	d20f      	bcs.n	87bc <_realloc_r+0x48>
    879c:	4621      	mov	r1, r4
    879e:	4638      	mov	r0, r7
    87a0:	f7fb fde0 	bl	4364 <_malloc_r>
    87a4:	4605      	mov	r5, r0
    87a6:	2800      	cmp	r0, #0
    87a8:	d0f2      	beq.n	8790 <_realloc_r+0x1c>
    87aa:	4631      	mov	r1, r6
    87ac:	4622      	mov	r2, r4
    87ae:	f7fb fd5b 	bl	4268 <memcpy>
    87b2:	4631      	mov	r1, r6
    87b4:	4638      	mov	r0, r7
    87b6:	f7fb fd87 	bl	42c8 <_free_r>
    87ba:	e7e9      	b.n	8790 <_realloc_r+0x1c>
    87bc:	4635      	mov	r5, r6
    87be:	e7e7      	b.n	8790 <_realloc_r+0x1c>

000087c0 <__ssputs_r>:
__ssputs_r():
    87c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    87c4:	688e      	ldr	r6, [r1, #8]
    87c6:	429e      	cmp	r6, r3
    87c8:	4682      	mov	sl, r0
    87ca:	460c      	mov	r4, r1
    87cc:	4691      	mov	r9, r2
    87ce:	4698      	mov	r8, r3
    87d0:	d838      	bhi.n	8844 <__ssputs_r+0x84>
    87d2:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
    87d6:	f41c 6f90 	tst.w	ip, #1152	; 0x480
    87da:	d031      	beq.n	8840 <__ssputs_r+0x80>
    87dc:	6962      	ldr	r2, [r4, #20]
    87de:	6825      	ldr	r5, [r4, #0]
    87e0:	6909      	ldr	r1, [r1, #16]
    87e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    87e6:	1a6f      	subs	r7, r5, r1
    87e8:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
    87ec:	3301      	adds	r3, #1
    87ee:	1055      	asrs	r5, r2, #1
    87f0:	443b      	add	r3, r7
    87f2:	429d      	cmp	r5, r3
    87f4:	bf38      	it	cc
    87f6:	461d      	movcc	r5, r3
    87f8:	f41c 6f80 	tst.w	ip, #1024	; 0x400
    87fc:	d030      	beq.n	8860 <__ssputs_r+0xa0>
    87fe:	4629      	mov	r1, r5
    8800:	f7fb fdb0 	bl	4364 <_malloc_r>
    8804:	4606      	mov	r6, r0
    8806:	b950      	cbnz	r0, 881e <__ssputs_r+0x5e>
    8808:	230c      	movs	r3, #12
    880a:	f8ca 3000 	str.w	r3, [sl]
    880e:	89a3      	ldrh	r3, [r4, #12]
    8810:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8814:	81a3      	strh	r3, [r4, #12]
    8816:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    881a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    881e:	463a      	mov	r2, r7
    8820:	6921      	ldr	r1, [r4, #16]
    8822:	f7fb fd21 	bl	4268 <memcpy>
    8826:	89a3      	ldrh	r3, [r4, #12]
    8828:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    882c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    8830:	81a3      	strh	r3, [r4, #12]
    8832:	6126      	str	r6, [r4, #16]
    8834:	6165      	str	r5, [r4, #20]
    8836:	443e      	add	r6, r7
    8838:	1bed      	subs	r5, r5, r7
    883a:	6026      	str	r6, [r4, #0]
    883c:	60a5      	str	r5, [r4, #8]
    883e:	4646      	mov	r6, r8
    8840:	4546      	cmp	r6, r8
    8842:	d900      	bls.n	8846 <__ssputs_r+0x86>
    8844:	4646      	mov	r6, r8
    8846:	4632      	mov	r2, r6
    8848:	4649      	mov	r1, r9
    884a:	6820      	ldr	r0, [r4, #0]
    884c:	f7fb fd1a 	bl	4284 <memmove>
    8850:	68a3      	ldr	r3, [r4, #8]
    8852:	1b9b      	subs	r3, r3, r6
    8854:	60a3      	str	r3, [r4, #8]
    8856:	6823      	ldr	r3, [r4, #0]
    8858:	441e      	add	r6, r3
    885a:	6026      	str	r6, [r4, #0]
    885c:	2000      	movs	r0, #0
    885e:	e7dc      	b.n	881a <__ssputs_r+0x5a>
    8860:	462a      	mov	r2, r5
    8862:	f7ff ff87 	bl	8774 <_realloc_r>
    8866:	4606      	mov	r6, r0
    8868:	2800      	cmp	r0, #0
    886a:	d1e2      	bne.n	8832 <__ssputs_r+0x72>
    886c:	6921      	ldr	r1, [r4, #16]
    886e:	4650      	mov	r0, sl
    8870:	f7fb fd2a 	bl	42c8 <_free_r>
    8874:	e7c8      	b.n	8808 <__ssputs_r+0x48>
    8876:	Address 0x0000000000008876 is out of bounds.


00008878 <_svfiprintf_r>:
_svfiprintf_r():
    8878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    887c:	461e      	mov	r6, r3
    887e:	898b      	ldrh	r3, [r1, #12]
    8880:	061b      	lsls	r3, r3, #24
    8882:	b09d      	sub	sp, #116	; 0x74
    8884:	4607      	mov	r7, r0
    8886:	460d      	mov	r5, r1
    8888:	4614      	mov	r4, r2
    888a:	d50e      	bpl.n	88aa <_svfiprintf_r+0x32>
    888c:	690b      	ldr	r3, [r1, #16]
    888e:	b963      	cbnz	r3, 88aa <_svfiprintf_r+0x32>
    8890:	2140      	movs	r1, #64	; 0x40
    8892:	f7fb fd67 	bl	4364 <_malloc_r>
    8896:	6028      	str	r0, [r5, #0]
    8898:	6128      	str	r0, [r5, #16]
    889a:	b920      	cbnz	r0, 88a6 <_svfiprintf_r+0x2e>
    889c:	230c      	movs	r3, #12
    889e:	603b      	str	r3, [r7, #0]
    88a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    88a4:	e0c9      	b.n	8a3a <_svfiprintf_r+0x1c2>
    88a6:	2340      	movs	r3, #64	; 0x40
    88a8:	616b      	str	r3, [r5, #20]
    88aa:	2300      	movs	r3, #0
    88ac:	9309      	str	r3, [sp, #36]	; 0x24
    88ae:	2320      	movs	r3, #32
    88b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    88b4:	f8df 919c 	ldr.w	r9, [pc, #412]	; 8a54 <_svfiprintf_r+0x1dc>
    88b8:	9603      	str	r6, [sp, #12]
    88ba:	2330      	movs	r3, #48	; 0x30
    88bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    88c0:	f04f 0a01 	mov.w	sl, #1
    88c4:	4623      	mov	r3, r4
    88c6:	461e      	mov	r6, r3
    88c8:	f813 2b01 	ldrb.w	r2, [r3], #1
    88cc:	b10a      	cbz	r2, 88d2 <_svfiprintf_r+0x5a>
    88ce:	2a25      	cmp	r2, #37	; 0x25
    88d0:	d1f9      	bne.n	88c6 <_svfiprintf_r+0x4e>
    88d2:	ebb6 0b04 	subs.w	fp, r6, r4
    88d6:	d00b      	beq.n	88f0 <_svfiprintf_r+0x78>
    88d8:	465b      	mov	r3, fp
    88da:	4622      	mov	r2, r4
    88dc:	4629      	mov	r1, r5
    88de:	4638      	mov	r0, r7
    88e0:	f7ff ff6e 	bl	87c0 <__ssputs_r>
    88e4:	3001      	adds	r0, #1
    88e6:	f000 80a3 	beq.w	8a30 <_svfiprintf_r+0x1b8>
    88ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
    88ec:	445b      	add	r3, fp
    88ee:	9309      	str	r3, [sp, #36]	; 0x24
    88f0:	7833      	ldrb	r3, [r6, #0]
    88f2:	2b00      	cmp	r3, #0
    88f4:	f000 809c 	beq.w	8a30 <_svfiprintf_r+0x1b8>
    88f8:	2300      	movs	r3, #0
    88fa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    88fe:	e9cd 2305 	strd	r2, r3, [sp, #20]
    8902:	3601      	adds	r6, #1
    8904:	9304      	str	r3, [sp, #16]
    8906:	9307      	str	r3, [sp, #28]
    8908:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    890c:	931a      	str	r3, [sp, #104]	; 0x68
    890e:	4634      	mov	r4, r6
    8910:	2205      	movs	r2, #5
    8912:	f814 1b01 	ldrb.w	r1, [r4], #1
    8916:	484f      	ldr	r0, [pc, #316]	; (8a54 <_svfiprintf_r+0x1dc>)
    8918:	f7ff faca 	bl	7eb0 <memchr>
    891c:	9b04      	ldr	r3, [sp, #16]
    891e:	b9c0      	cbnz	r0, 8952 <_svfiprintf_r+0xda>
    8920:	06d9      	lsls	r1, r3, #27
    8922:	bf44      	itt	mi
    8924:	2220      	movmi	r2, #32
    8926:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    892a:	071a      	lsls	r2, r3, #28
    892c:	bf44      	itt	mi
    892e:	222b      	movmi	r2, #43	; 0x2b
    8930:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    8934:	7832      	ldrb	r2, [r6, #0]
    8936:	2a2a      	cmp	r2, #42	; 0x2a
    8938:	d013      	beq.n	8962 <_svfiprintf_r+0xea>
    893a:	9a07      	ldr	r2, [sp, #28]
    893c:	4634      	mov	r4, r6
    893e:	2000      	movs	r0, #0
    8940:	260a      	movs	r6, #10
    8942:	4621      	mov	r1, r4
    8944:	f811 3b01 	ldrb.w	r3, [r1], #1
    8948:	3b30      	subs	r3, #48	; 0x30
    894a:	2b09      	cmp	r3, #9
    894c:	d94b      	bls.n	89e6 <_svfiprintf_r+0x16e>
    894e:	b970      	cbnz	r0, 896e <_svfiprintf_r+0xf6>
    8950:	e014      	b.n	897c <_svfiprintf_r+0x104>
    8952:	eba0 0009 	sub.w	r0, r0, r9
    8956:	fa0a f000 	lsl.w	r0, sl, r0
    895a:	4318      	orrs	r0, r3
    895c:	9004      	str	r0, [sp, #16]
    895e:	4626      	mov	r6, r4
    8960:	e7d5      	b.n	890e <_svfiprintf_r+0x96>
    8962:	9a03      	ldr	r2, [sp, #12]
    8964:	1d11      	adds	r1, r2, #4
    8966:	6812      	ldr	r2, [r2, #0]
    8968:	9103      	str	r1, [sp, #12]
    896a:	2a00      	cmp	r2, #0
    896c:	db01      	blt.n	8972 <_svfiprintf_r+0xfa>
    896e:	9207      	str	r2, [sp, #28]
    8970:	e004      	b.n	897c <_svfiprintf_r+0x104>
    8972:	4252      	negs	r2, r2
    8974:	f043 0302 	orr.w	r3, r3, #2
    8978:	9207      	str	r2, [sp, #28]
    897a:	9304      	str	r3, [sp, #16]
    897c:	7823      	ldrb	r3, [r4, #0]
    897e:	2b2e      	cmp	r3, #46	; 0x2e
    8980:	d10c      	bne.n	899c <_svfiprintf_r+0x124>
    8982:	7863      	ldrb	r3, [r4, #1]
    8984:	2b2a      	cmp	r3, #42	; 0x2a
    8986:	d133      	bne.n	89f0 <_svfiprintf_r+0x178>
    8988:	9b03      	ldr	r3, [sp, #12]
    898a:	1d1a      	adds	r2, r3, #4
    898c:	681b      	ldr	r3, [r3, #0]
    898e:	9203      	str	r2, [sp, #12]
    8990:	2b00      	cmp	r3, #0
    8992:	bfb8      	it	lt
    8994:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    8998:	3402      	adds	r4, #2
    899a:	9305      	str	r3, [sp, #20]
    899c:	4e2e      	ldr	r6, [pc, #184]	; (8a58 <_svfiprintf_r+0x1e0>)
    899e:	7821      	ldrb	r1, [r4, #0]
    89a0:	2203      	movs	r2, #3
    89a2:	4630      	mov	r0, r6
    89a4:	f7ff fa84 	bl	7eb0 <memchr>
    89a8:	b138      	cbz	r0, 89ba <_svfiprintf_r+0x142>
    89aa:	2340      	movs	r3, #64	; 0x40
    89ac:	1b80      	subs	r0, r0, r6
    89ae:	fa03 f000 	lsl.w	r0, r3, r0
    89b2:	9b04      	ldr	r3, [sp, #16]
    89b4:	4303      	orrs	r3, r0
    89b6:	3401      	adds	r4, #1
    89b8:	9304      	str	r3, [sp, #16]
    89ba:	f814 1b01 	ldrb.w	r1, [r4], #1
    89be:	4827      	ldr	r0, [pc, #156]	; (8a5c <_svfiprintf_r+0x1e4>)
    89c0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    89c4:	2206      	movs	r2, #6
    89c6:	f7ff fa73 	bl	7eb0 <memchr>
    89ca:	2800      	cmp	r0, #0
    89cc:	d038      	beq.n	8a40 <_svfiprintf_r+0x1c8>
    89ce:	4b24      	ldr	r3, [pc, #144]	; (8a60 <_svfiprintf_r+0x1e8>)
    89d0:	bb13      	cbnz	r3, 8a18 <_svfiprintf_r+0x1a0>
    89d2:	9b03      	ldr	r3, [sp, #12]
    89d4:	3307      	adds	r3, #7
    89d6:	f023 0307 	bic.w	r3, r3, #7
    89da:	3308      	adds	r3, #8
    89dc:	9303      	str	r3, [sp, #12]
    89de:	9b09      	ldr	r3, [sp, #36]	; 0x24
    89e0:	4443      	add	r3, r8
    89e2:	9309      	str	r3, [sp, #36]	; 0x24
    89e4:	e76e      	b.n	88c4 <_svfiprintf_r+0x4c>
    89e6:	fb06 3202 	mla	r2, r6, r2, r3
    89ea:	2001      	movs	r0, #1
    89ec:	460c      	mov	r4, r1
    89ee:	e7a8      	b.n	8942 <_svfiprintf_r+0xca>
    89f0:	2300      	movs	r3, #0
    89f2:	3401      	adds	r4, #1
    89f4:	9305      	str	r3, [sp, #20]
    89f6:	4619      	mov	r1, r3
    89f8:	260a      	movs	r6, #10
    89fa:	4620      	mov	r0, r4
    89fc:	f810 2b01 	ldrb.w	r2, [r0], #1
    8a00:	3a30      	subs	r2, #48	; 0x30
    8a02:	2a09      	cmp	r2, #9
    8a04:	d903      	bls.n	8a0e <_svfiprintf_r+0x196>
    8a06:	2b00      	cmp	r3, #0
    8a08:	d0c8      	beq.n	899c <_svfiprintf_r+0x124>
    8a0a:	9105      	str	r1, [sp, #20]
    8a0c:	e7c6      	b.n	899c <_svfiprintf_r+0x124>
    8a0e:	fb06 2101 	mla	r1, r6, r1, r2
    8a12:	2301      	movs	r3, #1
    8a14:	4604      	mov	r4, r0
    8a16:	e7f0      	b.n	89fa <_svfiprintf_r+0x182>
    8a18:	ab03      	add	r3, sp, #12
    8a1a:	9300      	str	r3, [sp, #0]
    8a1c:	462a      	mov	r2, r5
    8a1e:	4b11      	ldr	r3, [pc, #68]	; (8a64 <_svfiprintf_r+0x1ec>)
    8a20:	a904      	add	r1, sp, #16
    8a22:	4638      	mov	r0, r7
    8a24:	f7fb feda 	bl	47dc <_printf_float>
    8a28:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    8a2c:	4680      	mov	r8, r0
    8a2e:	d1d6      	bne.n	89de <_svfiprintf_r+0x166>
    8a30:	89ab      	ldrh	r3, [r5, #12]
    8a32:	065b      	lsls	r3, r3, #25
    8a34:	f53f af34 	bmi.w	88a0 <_svfiprintf_r+0x28>
    8a38:	9809      	ldr	r0, [sp, #36]	; 0x24
    8a3a:	b01d      	add	sp, #116	; 0x74
    8a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8a40:	ab03      	add	r3, sp, #12
    8a42:	9300      	str	r3, [sp, #0]
    8a44:	462a      	mov	r2, r5
    8a46:	4b07      	ldr	r3, [pc, #28]	; (8a64 <_svfiprintf_r+0x1ec>)
    8a48:	a904      	add	r1, sp, #16
    8a4a:	4638      	mov	r0, r7
    8a4c:	f7fc f966 	bl	4d1c <_printf_i>
    8a50:	e7ea      	b.n	8a28 <_svfiprintf_r+0x1b0>
    8a52:	bf00      	nop
    8a54:	0000b290 	.word	0x0000b290
    8a58:	0000b296 	.word	0x0000b296
    8a5c:	0000b29a 	.word	0x0000b29a
    8a60:	000047dd 	.word	0x000047dd
    8a64:	000087c1 	.word	0x000087c1

00008a68 <_sungetc_r>:
_sungetc_r():
    8a68:	b538      	push	{r3, r4, r5, lr}
    8a6a:	1c4b      	adds	r3, r1, #1
    8a6c:	4614      	mov	r4, r2
    8a6e:	d103      	bne.n	8a78 <_sungetc_r+0x10>
    8a70:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    8a74:	4628      	mov	r0, r5
    8a76:	bd38      	pop	{r3, r4, r5, pc}
    8a78:	8993      	ldrh	r3, [r2, #12]
    8a7a:	f023 0320 	bic.w	r3, r3, #32
    8a7e:	8193      	strh	r3, [r2, #12]
    8a80:	6b63      	ldr	r3, [r4, #52]	; 0x34
    8a82:	6852      	ldr	r2, [r2, #4]
    8a84:	b2cd      	uxtb	r5, r1
    8a86:	b18b      	cbz	r3, 8aac <_sungetc_r+0x44>
    8a88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    8a8a:	4293      	cmp	r3, r2
    8a8c:	dd08      	ble.n	8aa0 <_sungetc_r+0x38>
    8a8e:	6823      	ldr	r3, [r4, #0]
    8a90:	1e5a      	subs	r2, r3, #1
    8a92:	6022      	str	r2, [r4, #0]
    8a94:	f803 5c01 	strb.w	r5, [r3, #-1]
    8a98:	6863      	ldr	r3, [r4, #4]
    8a9a:	3301      	adds	r3, #1
    8a9c:	6063      	str	r3, [r4, #4]
    8a9e:	e7e9      	b.n	8a74 <_sungetc_r+0xc>
    8aa0:	4621      	mov	r1, r4
    8aa2:	f000 fc3d 	bl	9320 <__submore>
    8aa6:	2800      	cmp	r0, #0
    8aa8:	d0f1      	beq.n	8a8e <_sungetc_r+0x26>
    8aaa:	e7e1      	b.n	8a70 <_sungetc_r+0x8>
    8aac:	6921      	ldr	r1, [r4, #16]
    8aae:	6823      	ldr	r3, [r4, #0]
    8ab0:	b151      	cbz	r1, 8ac8 <_sungetc_r+0x60>
    8ab2:	4299      	cmp	r1, r3
    8ab4:	d208      	bcs.n	8ac8 <_sungetc_r+0x60>
    8ab6:	f813 1c01 	ldrb.w	r1, [r3, #-1]
    8aba:	42a9      	cmp	r1, r5
    8abc:	d104      	bne.n	8ac8 <_sungetc_r+0x60>
    8abe:	3b01      	subs	r3, #1
    8ac0:	3201      	adds	r2, #1
    8ac2:	6023      	str	r3, [r4, #0]
    8ac4:	6062      	str	r2, [r4, #4]
    8ac6:	e7d5      	b.n	8a74 <_sungetc_r+0xc>
    8ac8:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
    8acc:	f104 0344 	add.w	r3, r4, #68	; 0x44
    8ad0:	6363      	str	r3, [r4, #52]	; 0x34
    8ad2:	2303      	movs	r3, #3
    8ad4:	63a3      	str	r3, [r4, #56]	; 0x38
    8ad6:	4623      	mov	r3, r4
    8ad8:	f803 5f46 	strb.w	r5, [r3, #70]!
    8adc:	6023      	str	r3, [r4, #0]
    8ade:	2301      	movs	r3, #1
    8ae0:	e7dc      	b.n	8a9c <_sungetc_r+0x34>

00008ae2 <__ssrefill_r>:
__ssrefill_r():
    8ae2:	b510      	push	{r4, lr}
    8ae4:	460c      	mov	r4, r1
    8ae6:	6b49      	ldr	r1, [r1, #52]	; 0x34
    8ae8:	b169      	cbz	r1, 8b06 <__ssrefill_r+0x24>
    8aea:	f104 0344 	add.w	r3, r4, #68	; 0x44
    8aee:	4299      	cmp	r1, r3
    8af0:	d001      	beq.n	8af6 <__ssrefill_r+0x14>
    8af2:	f7fb fbe9 	bl	42c8 <_free_r>
    8af6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    8af8:	6063      	str	r3, [r4, #4]
    8afa:	2000      	movs	r0, #0
    8afc:	6360      	str	r0, [r4, #52]	; 0x34
    8afe:	b113      	cbz	r3, 8b06 <__ssrefill_r+0x24>
    8b00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    8b02:	6023      	str	r3, [r4, #0]
    8b04:	bd10      	pop	{r4, pc}
    8b06:	6923      	ldr	r3, [r4, #16]
    8b08:	6023      	str	r3, [r4, #0]
    8b0a:	2300      	movs	r3, #0
    8b0c:	6063      	str	r3, [r4, #4]
    8b0e:	89a3      	ldrh	r3, [r4, #12]
    8b10:	f043 0320 	orr.w	r3, r3, #32
    8b14:	81a3      	strh	r3, [r4, #12]
    8b16:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    8b1a:	e7f3      	b.n	8b04 <__ssrefill_r+0x22>

00008b1c <__ssvfiscanf_r>:
__ssvfiscanf_r():
    8b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b20:	460c      	mov	r4, r1
    8b22:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
    8b26:	2100      	movs	r1, #0
    8b28:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
    8b2c:	499a      	ldr	r1, [pc, #616]	; (8d98 <__ssvfiscanf_r+0x27c>)
    8b2e:	91a0      	str	r1, [sp, #640]	; 0x280
    8b30:	f10d 0804 	add.w	r8, sp, #4
    8b34:	4999      	ldr	r1, [pc, #612]	; (8d9c <__ssvfiscanf_r+0x280>)
    8b36:	4f9a      	ldr	r7, [pc, #616]	; (8da0 <__ssvfiscanf_r+0x284>)
    8b38:	f8df 9268 	ldr.w	r9, [pc, #616]	; 8da4 <__ssvfiscanf_r+0x288>
    8b3c:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
    8b40:	4606      	mov	r6, r0
    8b42:	91a1      	str	r1, [sp, #644]	; 0x284
    8b44:	9300      	str	r3, [sp, #0]
    8b46:	f892 a000 	ldrb.w	sl, [r2]
    8b4a:	f1ba 0f00 	cmp.w	sl, #0
    8b4e:	f000 8120 	beq.w	8d92 <__ssvfiscanf_r+0x276>
    8b52:	f81a 3007 	ldrb.w	r3, [sl, r7]
    8b56:	f013 0308 	ands.w	r3, r3, #8
    8b5a:	f102 0501 	add.w	r5, r2, #1
    8b5e:	d019      	beq.n	8b94 <__ssvfiscanf_r+0x78>
    8b60:	6863      	ldr	r3, [r4, #4]
    8b62:	2b00      	cmp	r3, #0
    8b64:	dd0f      	ble.n	8b86 <__ssvfiscanf_r+0x6a>
    8b66:	6823      	ldr	r3, [r4, #0]
    8b68:	781a      	ldrb	r2, [r3, #0]
    8b6a:	5cba      	ldrb	r2, [r7, r2]
    8b6c:	0712      	lsls	r2, r2, #28
    8b6e:	d401      	bmi.n	8b74 <__ssvfiscanf_r+0x58>
    8b70:	462a      	mov	r2, r5
    8b72:	e7e8      	b.n	8b46 <__ssvfiscanf_r+0x2a>
    8b74:	9a45      	ldr	r2, [sp, #276]	; 0x114
    8b76:	3201      	adds	r2, #1
    8b78:	9245      	str	r2, [sp, #276]	; 0x114
    8b7a:	6862      	ldr	r2, [r4, #4]
    8b7c:	3301      	adds	r3, #1
    8b7e:	3a01      	subs	r2, #1
    8b80:	6062      	str	r2, [r4, #4]
    8b82:	6023      	str	r3, [r4, #0]
    8b84:	e7ec      	b.n	8b60 <__ssvfiscanf_r+0x44>
    8b86:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    8b88:	4621      	mov	r1, r4
    8b8a:	4630      	mov	r0, r6
    8b8c:	4798      	blx	r3
    8b8e:	2800      	cmp	r0, #0
    8b90:	d0e9      	beq.n	8b66 <__ssvfiscanf_r+0x4a>
    8b92:	e7ed      	b.n	8b70 <__ssvfiscanf_r+0x54>
    8b94:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
    8b98:	d17d      	bne.n	8c96 <__ssvfiscanf_r+0x17a>
    8b9a:	9341      	str	r3, [sp, #260]	; 0x104
    8b9c:	9343      	str	r3, [sp, #268]	; 0x10c
    8b9e:	7853      	ldrb	r3, [r2, #1]
    8ba0:	2b2a      	cmp	r3, #42	; 0x2a
    8ba2:	bf02      	ittt	eq
    8ba4:	2310      	moveq	r3, #16
    8ba6:	1c95      	addeq	r5, r2, #2
    8ba8:	9341      	streq	r3, [sp, #260]	; 0x104
    8baa:	220a      	movs	r2, #10
    8bac:	46ab      	mov	fp, r5
    8bae:	f81b 1b01 	ldrb.w	r1, [fp], #1
    8bb2:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    8bb6:	2b09      	cmp	r3, #9
    8bb8:	d921      	bls.n	8bfe <__ssvfiscanf_r+0xe2>
    8bba:	2203      	movs	r2, #3
    8bbc:	4879      	ldr	r0, [pc, #484]	; (8da4 <__ssvfiscanf_r+0x288>)
    8bbe:	f7ff f977 	bl	7eb0 <memchr>
    8bc2:	b138      	cbz	r0, 8bd4 <__ssvfiscanf_r+0xb8>
    8bc4:	eba0 0309 	sub.w	r3, r0, r9
    8bc8:	2001      	movs	r0, #1
    8bca:	4098      	lsls	r0, r3
    8bcc:	9b41      	ldr	r3, [sp, #260]	; 0x104
    8bce:	4318      	orrs	r0, r3
    8bd0:	9041      	str	r0, [sp, #260]	; 0x104
    8bd2:	465d      	mov	r5, fp
    8bd4:	f815 3b01 	ldrb.w	r3, [r5], #1
    8bd8:	2b67      	cmp	r3, #103	; 0x67
    8bda:	d848      	bhi.n	8c6e <__ssvfiscanf_r+0x152>
    8bdc:	2b65      	cmp	r3, #101	; 0x65
    8bde:	f080 809e 	bcs.w	8d1e <__ssvfiscanf_r+0x202>
    8be2:	2b47      	cmp	r3, #71	; 0x47
    8be4:	d812      	bhi.n	8c0c <__ssvfiscanf_r+0xf0>
    8be6:	2b45      	cmp	r3, #69	; 0x45
    8be8:	f080 8099 	bcs.w	8d1e <__ssvfiscanf_r+0x202>
    8bec:	2b00      	cmp	r3, #0
    8bee:	d06b      	beq.n	8cc8 <__ssvfiscanf_r+0x1ac>
    8bf0:	2b25      	cmp	r3, #37	; 0x25
    8bf2:	d050      	beq.n	8c96 <__ssvfiscanf_r+0x17a>
    8bf4:	2303      	movs	r3, #3
    8bf6:	9347      	str	r3, [sp, #284]	; 0x11c
    8bf8:	230a      	movs	r3, #10
    8bfa:	9342      	str	r3, [sp, #264]	; 0x108
    8bfc:	e016      	b.n	8c2c <__ssvfiscanf_r+0x110>
    8bfe:	9b43      	ldr	r3, [sp, #268]	; 0x10c
    8c00:	fb02 1303 	mla	r3, r2, r3, r1
    8c04:	3b30      	subs	r3, #48	; 0x30
    8c06:	9343      	str	r3, [sp, #268]	; 0x10c
    8c08:	465d      	mov	r5, fp
    8c0a:	e7cf      	b.n	8bac <__ssvfiscanf_r+0x90>
    8c0c:	2b5b      	cmp	r3, #91	; 0x5b
    8c0e:	d067      	beq.n	8ce0 <__ssvfiscanf_r+0x1c4>
    8c10:	d827      	bhi.n	8c62 <__ssvfiscanf_r+0x146>
    8c12:	2b58      	cmp	r3, #88	; 0x58
    8c14:	d1ee      	bne.n	8bf4 <__ssvfiscanf_r+0xd8>
    8c16:	9a41      	ldr	r2, [sp, #260]	; 0x104
    8c18:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    8c1c:	9241      	str	r2, [sp, #260]	; 0x104
    8c1e:	2210      	movs	r2, #16
    8c20:	2b6f      	cmp	r3, #111	; 0x6f
    8c22:	9242      	str	r2, [sp, #264]	; 0x108
    8c24:	bf34      	ite	cc
    8c26:	2303      	movcc	r3, #3
    8c28:	2304      	movcs	r3, #4
    8c2a:	9347      	str	r3, [sp, #284]	; 0x11c
    8c2c:	6863      	ldr	r3, [r4, #4]
    8c2e:	2b00      	cmp	r3, #0
    8c30:	dd77      	ble.n	8d22 <__ssvfiscanf_r+0x206>
    8c32:	9b41      	ldr	r3, [sp, #260]	; 0x104
    8c34:	0659      	lsls	r1, r3, #25
    8c36:	d404      	bmi.n	8c42 <__ssvfiscanf_r+0x126>
    8c38:	6823      	ldr	r3, [r4, #0]
    8c3a:	781a      	ldrb	r2, [r3, #0]
    8c3c:	5cba      	ldrb	r2, [r7, r2]
    8c3e:	0712      	lsls	r2, r2, #28
    8c40:	d476      	bmi.n	8d30 <__ssvfiscanf_r+0x214>
    8c42:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    8c44:	2b02      	cmp	r3, #2
    8c46:	f300 8086 	bgt.w	8d56 <__ssvfiscanf_r+0x23a>
    8c4a:	466b      	mov	r3, sp
    8c4c:	4622      	mov	r2, r4
    8c4e:	a941      	add	r1, sp, #260	; 0x104
    8c50:	4630      	mov	r0, r6
    8c52:	f000 f8ab 	bl	8dac <_scanf_chars>
    8c56:	2801      	cmp	r0, #1
    8c58:	f000 809b 	beq.w	8d92 <__ssvfiscanf_r+0x276>
    8c5c:	2802      	cmp	r0, #2
    8c5e:	d187      	bne.n	8b70 <__ssvfiscanf_r+0x54>
    8c60:	e02f      	b.n	8cc2 <__ssvfiscanf_r+0x1a6>
    8c62:	2b63      	cmp	r3, #99	; 0x63
    8c64:	d047      	beq.n	8cf6 <__ssvfiscanf_r+0x1da>
    8c66:	2b64      	cmp	r3, #100	; 0x64
    8c68:	d1c4      	bne.n	8bf4 <__ssvfiscanf_r+0xd8>
    8c6a:	220a      	movs	r2, #10
    8c6c:	e7d8      	b.n	8c20 <__ssvfiscanf_r+0x104>
    8c6e:	2b70      	cmp	r3, #112	; 0x70
    8c70:	d02d      	beq.n	8cce <__ssvfiscanf_r+0x1b2>
    8c72:	d808      	bhi.n	8c86 <__ssvfiscanf_r+0x16a>
    8c74:	2b6e      	cmp	r3, #110	; 0x6e
    8c76:	d044      	beq.n	8d02 <__ssvfiscanf_r+0x1e6>
    8c78:	d82e      	bhi.n	8cd8 <__ssvfiscanf_r+0x1bc>
    8c7a:	2b69      	cmp	r3, #105	; 0x69
    8c7c:	d1ba      	bne.n	8bf4 <__ssvfiscanf_r+0xd8>
    8c7e:	2300      	movs	r3, #0
    8c80:	9342      	str	r3, [sp, #264]	; 0x108
    8c82:	2303      	movs	r3, #3
    8c84:	e7d1      	b.n	8c2a <__ssvfiscanf_r+0x10e>
    8c86:	2b75      	cmp	r3, #117	; 0x75
    8c88:	d0ef      	beq.n	8c6a <__ssvfiscanf_r+0x14e>
    8c8a:	2b78      	cmp	r3, #120	; 0x78
    8c8c:	d0c3      	beq.n	8c16 <__ssvfiscanf_r+0xfa>
    8c8e:	2b73      	cmp	r3, #115	; 0x73
    8c90:	d1b0      	bne.n	8bf4 <__ssvfiscanf_r+0xd8>
    8c92:	2302      	movs	r3, #2
    8c94:	e7c9      	b.n	8c2a <__ssvfiscanf_r+0x10e>
    8c96:	6863      	ldr	r3, [r4, #4]
    8c98:	2b00      	cmp	r3, #0
    8c9a:	dd0c      	ble.n	8cb6 <__ssvfiscanf_r+0x19a>
    8c9c:	6823      	ldr	r3, [r4, #0]
    8c9e:	781a      	ldrb	r2, [r3, #0]
    8ca0:	4552      	cmp	r2, sl
    8ca2:	d176      	bne.n	8d92 <__ssvfiscanf_r+0x276>
    8ca4:	3301      	adds	r3, #1
    8ca6:	6862      	ldr	r2, [r4, #4]
    8ca8:	6023      	str	r3, [r4, #0]
    8caa:	9b45      	ldr	r3, [sp, #276]	; 0x114
    8cac:	3a01      	subs	r2, #1
    8cae:	3301      	adds	r3, #1
    8cb0:	6062      	str	r2, [r4, #4]
    8cb2:	9345      	str	r3, [sp, #276]	; 0x114
    8cb4:	e75c      	b.n	8b70 <__ssvfiscanf_r+0x54>
    8cb6:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    8cb8:	4621      	mov	r1, r4
    8cba:	4630      	mov	r0, r6
    8cbc:	4798      	blx	r3
    8cbe:	2800      	cmp	r0, #0
    8cc0:	d0ec      	beq.n	8c9c <__ssvfiscanf_r+0x180>
    8cc2:	9844      	ldr	r0, [sp, #272]	; 0x110
    8cc4:	2800      	cmp	r0, #0
    8cc6:	d15a      	bne.n	8d7e <__ssvfiscanf_r+0x262>
    8cc8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    8ccc:	e05d      	b.n	8d8a <__ssvfiscanf_r+0x26e>
    8cce:	9a41      	ldr	r2, [sp, #260]	; 0x104
    8cd0:	f042 0220 	orr.w	r2, r2, #32
    8cd4:	9241      	str	r2, [sp, #260]	; 0x104
    8cd6:	e79e      	b.n	8c16 <__ssvfiscanf_r+0xfa>
    8cd8:	2308      	movs	r3, #8
    8cda:	9342      	str	r3, [sp, #264]	; 0x108
    8cdc:	2304      	movs	r3, #4
    8cde:	e7a4      	b.n	8c2a <__ssvfiscanf_r+0x10e>
    8ce0:	4629      	mov	r1, r5
    8ce2:	4640      	mov	r0, r8
    8ce4:	f000 fa2c 	bl	9140 <__sccl>
    8ce8:	9b41      	ldr	r3, [sp, #260]	; 0x104
    8cea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8cee:	9341      	str	r3, [sp, #260]	; 0x104
    8cf0:	4605      	mov	r5, r0
    8cf2:	2301      	movs	r3, #1
    8cf4:	e799      	b.n	8c2a <__ssvfiscanf_r+0x10e>
    8cf6:	9b41      	ldr	r3, [sp, #260]	; 0x104
    8cf8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8cfc:	9341      	str	r3, [sp, #260]	; 0x104
    8cfe:	2300      	movs	r3, #0
    8d00:	e793      	b.n	8c2a <__ssvfiscanf_r+0x10e>
    8d02:	9841      	ldr	r0, [sp, #260]	; 0x104
    8d04:	06c3      	lsls	r3, r0, #27
    8d06:	f53f af33 	bmi.w	8b70 <__ssvfiscanf_r+0x54>
    8d0a:	9b00      	ldr	r3, [sp, #0]
    8d0c:	9a45      	ldr	r2, [sp, #276]	; 0x114
    8d0e:	1d19      	adds	r1, r3, #4
    8d10:	9100      	str	r1, [sp, #0]
    8d12:	681b      	ldr	r3, [r3, #0]
    8d14:	07c0      	lsls	r0, r0, #31
    8d16:	bf4c      	ite	mi
    8d18:	801a      	strhmi	r2, [r3, #0]
    8d1a:	601a      	strpl	r2, [r3, #0]
    8d1c:	e728      	b.n	8b70 <__ssvfiscanf_r+0x54>
    8d1e:	2305      	movs	r3, #5
    8d20:	e783      	b.n	8c2a <__ssvfiscanf_r+0x10e>
    8d22:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    8d24:	4621      	mov	r1, r4
    8d26:	4630      	mov	r0, r6
    8d28:	4798      	blx	r3
    8d2a:	2800      	cmp	r0, #0
    8d2c:	d081      	beq.n	8c32 <__ssvfiscanf_r+0x116>
    8d2e:	e7c8      	b.n	8cc2 <__ssvfiscanf_r+0x1a6>
    8d30:	9a45      	ldr	r2, [sp, #276]	; 0x114
    8d32:	3201      	adds	r2, #1
    8d34:	9245      	str	r2, [sp, #276]	; 0x114
    8d36:	6862      	ldr	r2, [r4, #4]
    8d38:	3a01      	subs	r2, #1
    8d3a:	2a00      	cmp	r2, #0
    8d3c:	6062      	str	r2, [r4, #4]
    8d3e:	dd02      	ble.n	8d46 <__ssvfiscanf_r+0x22a>
    8d40:	3301      	adds	r3, #1
    8d42:	6023      	str	r3, [r4, #0]
    8d44:	e778      	b.n	8c38 <__ssvfiscanf_r+0x11c>
    8d46:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    8d48:	4621      	mov	r1, r4
    8d4a:	4630      	mov	r0, r6
    8d4c:	4798      	blx	r3
    8d4e:	2800      	cmp	r0, #0
    8d50:	f43f af72 	beq.w	8c38 <__ssvfiscanf_r+0x11c>
    8d54:	e7b5      	b.n	8cc2 <__ssvfiscanf_r+0x1a6>
    8d56:	2b04      	cmp	r3, #4
    8d58:	dc06      	bgt.n	8d68 <__ssvfiscanf_r+0x24c>
    8d5a:	466b      	mov	r3, sp
    8d5c:	4622      	mov	r2, r4
    8d5e:	a941      	add	r1, sp, #260	; 0x104
    8d60:	4630      	mov	r0, r6
    8d62:	f000 f87b 	bl	8e5c <_scanf_i>
    8d66:	e776      	b.n	8c56 <__ssvfiscanf_r+0x13a>
    8d68:	4b0f      	ldr	r3, [pc, #60]	; (8da8 <__ssvfiscanf_r+0x28c>)
    8d6a:	2b00      	cmp	r3, #0
    8d6c:	f43f af00 	beq.w	8b70 <__ssvfiscanf_r+0x54>
    8d70:	466b      	mov	r3, sp
    8d72:	4622      	mov	r2, r4
    8d74:	a941      	add	r1, sp, #260	; 0x104
    8d76:	4630      	mov	r0, r6
    8d78:	f7fc f8e4 	bl	4f44 <_scanf_float>
    8d7c:	e76b      	b.n	8c56 <__ssvfiscanf_r+0x13a>
    8d7e:	89a3      	ldrh	r3, [r4, #12]
    8d80:	f013 0f40 	tst.w	r3, #64	; 0x40
    8d84:	bf18      	it	ne
    8d86:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    8d8a:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
    8d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d92:	9844      	ldr	r0, [sp, #272]	; 0x110
    8d94:	e7f9      	b.n	8d8a <__ssvfiscanf_r+0x26e>
    8d96:	bf00      	nop
    8d98:	00008a69 	.word	0x00008a69
    8d9c:	00008ae3 	.word	0x00008ae3
    8da0:	0000b189 	.word	0x0000b189
    8da4:	0000b296 	.word	0x0000b296
    8da8:	00004f45 	.word	0x00004f45

00008dac <_scanf_chars>:
_scanf_chars():
    8dac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8db0:	4615      	mov	r5, r2
    8db2:	688a      	ldr	r2, [r1, #8]
    8db4:	4680      	mov	r8, r0
    8db6:	460c      	mov	r4, r1
    8db8:	b932      	cbnz	r2, 8dc8 <_scanf_chars+0x1c>
    8dba:	698a      	ldr	r2, [r1, #24]
    8dbc:	2a00      	cmp	r2, #0
    8dbe:	bf0c      	ite	eq
    8dc0:	2201      	moveq	r2, #1
    8dc2:	f04f 32ff 	movne.w	r2, #4294967295	; 0xffffffff
    8dc6:	608a      	str	r2, [r1, #8]
    8dc8:	6822      	ldr	r2, [r4, #0]
    8dca:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8e58 <_scanf_chars+0xac>
    8dce:	06d1      	lsls	r1, r2, #27
    8dd0:	bf5f      	itttt	pl
    8dd2:	681a      	ldrpl	r2, [r3, #0]
    8dd4:	1d11      	addpl	r1, r2, #4
    8dd6:	6019      	strpl	r1, [r3, #0]
    8dd8:	6816      	ldrpl	r6, [r2, #0]
    8dda:	2700      	movs	r7, #0
    8ddc:	69a0      	ldr	r0, [r4, #24]
    8dde:	b188      	cbz	r0, 8e04 <_scanf_chars+0x58>
    8de0:	2801      	cmp	r0, #1
    8de2:	d107      	bne.n	8df4 <_scanf_chars+0x48>
    8de4:	682b      	ldr	r3, [r5, #0]
    8de6:	781a      	ldrb	r2, [r3, #0]
    8de8:	6963      	ldr	r3, [r4, #20]
    8dea:	5c9b      	ldrb	r3, [r3, r2]
    8dec:	b953      	cbnz	r3, 8e04 <_scanf_chars+0x58>
    8dee:	bb27      	cbnz	r7, 8e3a <_scanf_chars+0x8e>
    8df0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8df4:	2802      	cmp	r0, #2
    8df6:	d120      	bne.n	8e3a <_scanf_chars+0x8e>
    8df8:	682b      	ldr	r3, [r5, #0]
    8dfa:	781b      	ldrb	r3, [r3, #0]
    8dfc:	f813 3009 	ldrb.w	r3, [r3, r9]
    8e00:	071b      	lsls	r3, r3, #28
    8e02:	d41a      	bmi.n	8e3a <_scanf_chars+0x8e>
    8e04:	6823      	ldr	r3, [r4, #0]
    8e06:	06da      	lsls	r2, r3, #27
    8e08:	bf5e      	ittt	pl
    8e0a:	682b      	ldrpl	r3, [r5, #0]
    8e0c:	781b      	ldrbpl	r3, [r3, #0]
    8e0e:	f806 3b01 	strbpl.w	r3, [r6], #1
    8e12:	682a      	ldr	r2, [r5, #0]
    8e14:	686b      	ldr	r3, [r5, #4]
    8e16:	3201      	adds	r2, #1
    8e18:	602a      	str	r2, [r5, #0]
    8e1a:	68a2      	ldr	r2, [r4, #8]
    8e1c:	3b01      	subs	r3, #1
    8e1e:	3a01      	subs	r2, #1
    8e20:	606b      	str	r3, [r5, #4]
    8e22:	3701      	adds	r7, #1
    8e24:	60a2      	str	r2, [r4, #8]
    8e26:	b142      	cbz	r2, 8e3a <_scanf_chars+0x8e>
    8e28:	2b00      	cmp	r3, #0
    8e2a:	dcd7      	bgt.n	8ddc <_scanf_chars+0x30>
    8e2c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    8e30:	4629      	mov	r1, r5
    8e32:	4640      	mov	r0, r8
    8e34:	4798      	blx	r3
    8e36:	2800      	cmp	r0, #0
    8e38:	d0d0      	beq.n	8ddc <_scanf_chars+0x30>
    8e3a:	6823      	ldr	r3, [r4, #0]
    8e3c:	f013 0310 	ands.w	r3, r3, #16
    8e40:	d105      	bne.n	8e4e <_scanf_chars+0xa2>
    8e42:	68e2      	ldr	r2, [r4, #12]
    8e44:	3201      	adds	r2, #1
    8e46:	60e2      	str	r2, [r4, #12]
    8e48:	69a2      	ldr	r2, [r4, #24]
    8e4a:	b102      	cbz	r2, 8e4e <_scanf_chars+0xa2>
    8e4c:	7033      	strb	r3, [r6, #0]
    8e4e:	6923      	ldr	r3, [r4, #16]
    8e50:	441f      	add	r7, r3
    8e52:	6127      	str	r7, [r4, #16]
    8e54:	2000      	movs	r0, #0
    8e56:	e7cb      	b.n	8df0 <_scanf_chars+0x44>
    8e58:	0000b189 	.word	0x0000b189

00008e5c <_scanf_i>:
_scanf_i():
    8e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e60:	4699      	mov	r9, r3
    8e62:	4b74      	ldr	r3, [pc, #464]	; (9034 <_scanf_i+0x1d8>)
    8e64:	460c      	mov	r4, r1
    8e66:	4682      	mov	sl, r0
    8e68:	4616      	mov	r6, r2
    8e6a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    8e6e:	b087      	sub	sp, #28
    8e70:	ab03      	add	r3, sp, #12
    8e72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    8e76:	4b70      	ldr	r3, [pc, #448]	; (9038 <_scanf_i+0x1dc>)
    8e78:	69a1      	ldr	r1, [r4, #24]
    8e7a:	4a70      	ldr	r2, [pc, #448]	; (903c <_scanf_i+0x1e0>)
    8e7c:	2903      	cmp	r1, #3
    8e7e:	bf18      	it	ne
    8e80:	461a      	movne	r2, r3
    8e82:	68a3      	ldr	r3, [r4, #8]
    8e84:	9201      	str	r2, [sp, #4]
    8e86:	1e5a      	subs	r2, r3, #1
    8e88:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    8e8c:	bf88      	it	hi
    8e8e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    8e92:	4627      	mov	r7, r4
    8e94:	bf82      	ittt	hi
    8e96:	eb03 0805 	addhi.w	r8, r3, r5
    8e9a:	f240 135d 	movwhi	r3, #349	; 0x15d
    8e9e:	60a3      	strhi	r3, [r4, #8]
    8ea0:	f857 3b1c 	ldr.w	r3, [r7], #28
    8ea4:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
    8ea8:	bf98      	it	ls
    8eaa:	f04f 0800 	movls.w	r8, #0
    8eae:	6023      	str	r3, [r4, #0]
    8eb0:	463d      	mov	r5, r7
    8eb2:	f04f 0b00 	mov.w	fp, #0
    8eb6:	6831      	ldr	r1, [r6, #0]
    8eb8:	ab03      	add	r3, sp, #12
    8eba:	2202      	movs	r2, #2
    8ebc:	7809      	ldrb	r1, [r1, #0]
    8ebe:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
    8ec2:	f7fe fff5 	bl	7eb0 <memchr>
    8ec6:	b328      	cbz	r0, 8f14 <_scanf_i+0xb8>
    8ec8:	f1bb 0f01 	cmp.w	fp, #1
    8ecc:	d159      	bne.n	8f82 <_scanf_i+0x126>
    8ece:	6862      	ldr	r2, [r4, #4]
    8ed0:	b92a      	cbnz	r2, 8ede <_scanf_i+0x82>
    8ed2:	6822      	ldr	r2, [r4, #0]
    8ed4:	2308      	movs	r3, #8
    8ed6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    8eda:	6063      	str	r3, [r4, #4]
    8edc:	6022      	str	r2, [r4, #0]
    8ede:	6822      	ldr	r2, [r4, #0]
    8ee0:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
    8ee4:	6022      	str	r2, [r4, #0]
    8ee6:	68a2      	ldr	r2, [r4, #8]
    8ee8:	1e51      	subs	r1, r2, #1
    8eea:	60a1      	str	r1, [r4, #8]
    8eec:	b192      	cbz	r2, 8f14 <_scanf_i+0xb8>
    8eee:	6832      	ldr	r2, [r6, #0]
    8ef0:	1c51      	adds	r1, r2, #1
    8ef2:	6031      	str	r1, [r6, #0]
    8ef4:	7812      	ldrb	r2, [r2, #0]
    8ef6:	f805 2b01 	strb.w	r2, [r5], #1
    8efa:	6872      	ldr	r2, [r6, #4]
    8efc:	3a01      	subs	r2, #1
    8efe:	2a00      	cmp	r2, #0
    8f00:	6072      	str	r2, [r6, #4]
    8f02:	dc07      	bgt.n	8f14 <_scanf_i+0xb8>
    8f04:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
    8f08:	4631      	mov	r1, r6
    8f0a:	4650      	mov	r0, sl
    8f0c:	4790      	blx	r2
    8f0e:	2800      	cmp	r0, #0
    8f10:	f040 8085 	bne.w	901e <_scanf_i+0x1c2>
    8f14:	f10b 0b01 	add.w	fp, fp, #1
    8f18:	f1bb 0f03 	cmp.w	fp, #3
    8f1c:	d1cb      	bne.n	8eb6 <_scanf_i+0x5a>
    8f1e:	6863      	ldr	r3, [r4, #4]
    8f20:	b90b      	cbnz	r3, 8f26 <_scanf_i+0xca>
    8f22:	230a      	movs	r3, #10
    8f24:	6063      	str	r3, [r4, #4]
    8f26:	6863      	ldr	r3, [r4, #4]
    8f28:	4945      	ldr	r1, [pc, #276]	; (9040 <_scanf_i+0x1e4>)
    8f2a:	6960      	ldr	r0, [r4, #20]
    8f2c:	1ac9      	subs	r1, r1, r3
    8f2e:	f000 f907 	bl	9140 <__sccl>
    8f32:	f04f 0b00 	mov.w	fp, #0
    8f36:	68a3      	ldr	r3, [r4, #8]
    8f38:	6822      	ldr	r2, [r4, #0]
    8f3a:	2b00      	cmp	r3, #0
    8f3c:	d03d      	beq.n	8fba <_scanf_i+0x15e>
    8f3e:	6831      	ldr	r1, [r6, #0]
    8f40:	6960      	ldr	r0, [r4, #20]
    8f42:	f891 c000 	ldrb.w	ip, [r1]
    8f46:	f810 000c 	ldrb.w	r0, [r0, ip]
    8f4a:	2800      	cmp	r0, #0
    8f4c:	d035      	beq.n	8fba <_scanf_i+0x15e>
    8f4e:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
    8f52:	d124      	bne.n	8f9e <_scanf_i+0x142>
    8f54:	0510      	lsls	r0, r2, #20
    8f56:	d522      	bpl.n	8f9e <_scanf_i+0x142>
    8f58:	f10b 0b01 	add.w	fp, fp, #1
    8f5c:	f1b8 0f00 	cmp.w	r8, #0
    8f60:	d003      	beq.n	8f6a <_scanf_i+0x10e>
    8f62:	3301      	adds	r3, #1
    8f64:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
    8f68:	60a3      	str	r3, [r4, #8]
    8f6a:	6873      	ldr	r3, [r6, #4]
    8f6c:	3b01      	subs	r3, #1
    8f6e:	2b00      	cmp	r3, #0
    8f70:	6073      	str	r3, [r6, #4]
    8f72:	dd1b      	ble.n	8fac <_scanf_i+0x150>
    8f74:	6833      	ldr	r3, [r6, #0]
    8f76:	3301      	adds	r3, #1
    8f78:	6033      	str	r3, [r6, #0]
    8f7a:	68a3      	ldr	r3, [r4, #8]
    8f7c:	3b01      	subs	r3, #1
    8f7e:	60a3      	str	r3, [r4, #8]
    8f80:	e7d9      	b.n	8f36 <_scanf_i+0xda>
    8f82:	f1bb 0f02 	cmp.w	fp, #2
    8f86:	d1ae      	bne.n	8ee6 <_scanf_i+0x8a>
    8f88:	6822      	ldr	r2, [r4, #0]
    8f8a:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
    8f8e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    8f92:	d1bf      	bne.n	8f14 <_scanf_i+0xb8>
    8f94:	2310      	movs	r3, #16
    8f96:	6063      	str	r3, [r4, #4]
    8f98:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    8f9c:	e7a2      	b.n	8ee4 <_scanf_i+0x88>
    8f9e:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
    8fa2:	6022      	str	r2, [r4, #0]
    8fa4:	780b      	ldrb	r3, [r1, #0]
    8fa6:	f805 3b01 	strb.w	r3, [r5], #1
    8faa:	e7de      	b.n	8f6a <_scanf_i+0x10e>
    8fac:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    8fb0:	4631      	mov	r1, r6
    8fb2:	4650      	mov	r0, sl
    8fb4:	4798      	blx	r3
    8fb6:	2800      	cmp	r0, #0
    8fb8:	d0df      	beq.n	8f7a <_scanf_i+0x11e>
    8fba:	6823      	ldr	r3, [r4, #0]
    8fbc:	05d9      	lsls	r1, r3, #23
    8fbe:	d50d      	bpl.n	8fdc <_scanf_i+0x180>
    8fc0:	42bd      	cmp	r5, r7
    8fc2:	d909      	bls.n	8fd8 <_scanf_i+0x17c>
    8fc4:	f815 1c01 	ldrb.w	r1, [r5, #-1]
    8fc8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    8fcc:	4632      	mov	r2, r6
    8fce:	4650      	mov	r0, sl
    8fd0:	4798      	blx	r3
    8fd2:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
    8fd6:	4645      	mov	r5, r8
    8fd8:	42bd      	cmp	r5, r7
    8fda:	d028      	beq.n	902e <_scanf_i+0x1d2>
    8fdc:	6822      	ldr	r2, [r4, #0]
    8fde:	f012 0210 	ands.w	r2, r2, #16
    8fe2:	d113      	bne.n	900c <_scanf_i+0x1b0>
    8fe4:	702a      	strb	r2, [r5, #0]
    8fe6:	6863      	ldr	r3, [r4, #4]
    8fe8:	9e01      	ldr	r6, [sp, #4]
    8fea:	4639      	mov	r1, r7
    8fec:	4650      	mov	r0, sl
    8fee:	47b0      	blx	r6
    8ff0:	f8d9 3000 	ldr.w	r3, [r9]
    8ff4:	6821      	ldr	r1, [r4, #0]
    8ff6:	1d1a      	adds	r2, r3, #4
    8ff8:	f8c9 2000 	str.w	r2, [r9]
    8ffc:	f011 0f20 	tst.w	r1, #32
    9000:	681b      	ldr	r3, [r3, #0]
    9002:	d00f      	beq.n	9024 <_scanf_i+0x1c8>
    9004:	6018      	str	r0, [r3, #0]
    9006:	68e3      	ldr	r3, [r4, #12]
    9008:	3301      	adds	r3, #1
    900a:	60e3      	str	r3, [r4, #12]
    900c:	1bed      	subs	r5, r5, r7
    900e:	44ab      	add	fp, r5
    9010:	6925      	ldr	r5, [r4, #16]
    9012:	445d      	add	r5, fp
    9014:	6125      	str	r5, [r4, #16]
    9016:	2000      	movs	r0, #0
    9018:	b007      	add	sp, #28
    901a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    901e:	f04f 0b00 	mov.w	fp, #0
    9022:	e7ca      	b.n	8fba <_scanf_i+0x15e>
    9024:	07ca      	lsls	r2, r1, #31
    9026:	bf4c      	ite	mi
    9028:	8018      	strhmi	r0, [r3, #0]
    902a:	6018      	strpl	r0, [r3, #0]
    902c:	e7eb      	b.n	9006 <_scanf_i+0x1aa>
    902e:	2001      	movs	r0, #1
    9030:	e7f2      	b.n	9018 <_scanf_i+0x1bc>
    9032:	bf00      	nop
    9034:	0000b4ac 	.word	0x0000b4ac
    9038:	0000931d 	.word	0x0000931d
    903c:	00006425 	.word	0x00006425
    9040:	0000b4c8 	.word	0x0000b4c8

00009044 <_putc_r>:
_putc_r():
    9044:	b570      	push	{r4, r5, r6, lr}
    9046:	460d      	mov	r5, r1
    9048:	4614      	mov	r4, r2
    904a:	4606      	mov	r6, r0
    904c:	b118      	cbz	r0, 9056 <_putc_r+0x12>
    904e:	6983      	ldr	r3, [r0, #24]
    9050:	b90b      	cbnz	r3, 9056 <_putc_r+0x12>
    9052:	f7fe fa8b 	bl	756c <__sinit>
    9056:	4b1c      	ldr	r3, [pc, #112]	; (90c8 <_putc_r+0x84>)
    9058:	429c      	cmp	r4, r3
    905a:	d124      	bne.n	90a6 <_putc_r+0x62>
    905c:	6874      	ldr	r4, [r6, #4]
    905e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9060:	07d8      	lsls	r0, r3, #31
    9062:	d405      	bmi.n	9070 <_putc_r+0x2c>
    9064:	89a3      	ldrh	r3, [r4, #12]
    9066:	0599      	lsls	r1, r3, #22
    9068:	d402      	bmi.n	9070 <_putc_r+0x2c>
    906a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    906c:	f7fb f8e9 	bl	4242 <__retarget_lock_acquire_recursive>
    9070:	68a3      	ldr	r3, [r4, #8]
    9072:	3b01      	subs	r3, #1
    9074:	2b00      	cmp	r3, #0
    9076:	60a3      	str	r3, [r4, #8]
    9078:	da05      	bge.n	9086 <_putc_r+0x42>
    907a:	69a2      	ldr	r2, [r4, #24]
    907c:	4293      	cmp	r3, r2
    907e:	db1c      	blt.n	90ba <_putc_r+0x76>
    9080:	b2eb      	uxtb	r3, r5
    9082:	2b0a      	cmp	r3, #10
    9084:	d019      	beq.n	90ba <_putc_r+0x76>
    9086:	6823      	ldr	r3, [r4, #0]
    9088:	1c5a      	adds	r2, r3, #1
    908a:	6022      	str	r2, [r4, #0]
    908c:	701d      	strb	r5, [r3, #0]
    908e:	b2ed      	uxtb	r5, r5
    9090:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9092:	07da      	lsls	r2, r3, #31
    9094:	d405      	bmi.n	90a2 <_putc_r+0x5e>
    9096:	89a3      	ldrh	r3, [r4, #12]
    9098:	059b      	lsls	r3, r3, #22
    909a:	d402      	bmi.n	90a2 <_putc_r+0x5e>
    909c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    909e:	f7fb f8d1 	bl	4244 <__retarget_lock_release_recursive>
    90a2:	4628      	mov	r0, r5
    90a4:	bd70      	pop	{r4, r5, r6, pc}
    90a6:	4b09      	ldr	r3, [pc, #36]	; (90cc <_putc_r+0x88>)
    90a8:	429c      	cmp	r4, r3
    90aa:	d101      	bne.n	90b0 <_putc_r+0x6c>
    90ac:	68b4      	ldr	r4, [r6, #8]
    90ae:	e7d6      	b.n	905e <_putc_r+0x1a>
    90b0:	4b07      	ldr	r3, [pc, #28]	; (90d0 <_putc_r+0x8c>)
    90b2:	429c      	cmp	r4, r3
    90b4:	bf08      	it	eq
    90b6:	68f4      	ldreq	r4, [r6, #12]
    90b8:	e7d1      	b.n	905e <_putc_r+0x1a>
    90ba:	4629      	mov	r1, r5
    90bc:	4622      	mov	r2, r4
    90be:	4630      	mov	r0, r6
    90c0:	f7fd fa24 	bl	650c <__swbuf_r>
    90c4:	4605      	mov	r5, r0
    90c6:	e7e3      	b.n	9090 <_putc_r+0x4c>
    90c8:	0000b358 	.word	0x0000b358
    90cc:	0000b378 	.word	0x0000b378
    90d0:	0000b338 	.word	0x0000b338

000090d4 <__srget_r>:
__srget_r():
    90d4:	b538      	push	{r3, r4, r5, lr}
    90d6:	460c      	mov	r4, r1
    90d8:	4605      	mov	r5, r0
    90da:	b118      	cbz	r0, 90e4 <__srget_r+0x10>
    90dc:	6983      	ldr	r3, [r0, #24]
    90de:	b90b      	cbnz	r3, 90e4 <__srget_r+0x10>
    90e0:	f7fe fa44 	bl	756c <__sinit>
    90e4:	4b0e      	ldr	r3, [pc, #56]	; (9120 <__srget_r+0x4c>)
    90e6:	429c      	cmp	r4, r3
    90e8:	d10d      	bne.n	9106 <__srget_r+0x32>
    90ea:	686c      	ldr	r4, [r5, #4]
    90ec:	4621      	mov	r1, r4
    90ee:	4628      	mov	r0, r5
    90f0:	f000 f9d8 	bl	94a4 <__srefill_r>
    90f4:	b988      	cbnz	r0, 911a <__srget_r+0x46>
    90f6:	6863      	ldr	r3, [r4, #4]
    90f8:	3b01      	subs	r3, #1
    90fa:	6063      	str	r3, [r4, #4]
    90fc:	6823      	ldr	r3, [r4, #0]
    90fe:	1c5a      	adds	r2, r3, #1
    9100:	6022      	str	r2, [r4, #0]
    9102:	7818      	ldrb	r0, [r3, #0]
    9104:	bd38      	pop	{r3, r4, r5, pc}
    9106:	4b07      	ldr	r3, [pc, #28]	; (9124 <__srget_r+0x50>)
    9108:	429c      	cmp	r4, r3
    910a:	d101      	bne.n	9110 <__srget_r+0x3c>
    910c:	68ac      	ldr	r4, [r5, #8]
    910e:	e7ed      	b.n	90ec <__srget_r+0x18>
    9110:	4b05      	ldr	r3, [pc, #20]	; (9128 <__srget_r+0x54>)
    9112:	429c      	cmp	r4, r3
    9114:	bf08      	it	eq
    9116:	68ec      	ldreq	r4, [r5, #12]
    9118:	e7e8      	b.n	90ec <__srget_r+0x18>
    911a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    911e:	e7f1      	b.n	9104 <__srget_r+0x30>
    9120:	0000b358 	.word	0x0000b358
    9124:	0000b378 	.word	0x0000b378
    9128:	0000b338 	.word	0x0000b338
    912c:	ffffffff 	.word	0xffffffff

00009130 <nan>:
nan():
    9130:	ed9f 0b01 	vldr	d0, [pc, #4]	; 9138 <nan+0x8>
    9134:	4770      	bx	lr
    9136:	bf00      	nop
    9138:	00000000 	.word	0x00000000
    913c:	7ff80000 	.word	0x7ff80000

00009140 <__sccl>:
__sccl():
    9140:	b570      	push	{r4, r5, r6, lr}
    9142:	780b      	ldrb	r3, [r1, #0]
    9144:	2b5e      	cmp	r3, #94	; 0x5e
    9146:	bf13      	iteet	ne
    9148:	1c4a      	addne	r2, r1, #1
    914a:	1c8a      	addeq	r2, r1, #2
    914c:	784b      	ldrbeq	r3, [r1, #1]
    914e:	2100      	movne	r1, #0
    9150:	bf08      	it	eq
    9152:	2101      	moveq	r1, #1
    9154:	1e44      	subs	r4, r0, #1
    9156:	f100 05ff 	add.w	r5, r0, #255	; 0xff
    915a:	f804 1f01 	strb.w	r1, [r4, #1]!
    915e:	42ac      	cmp	r4, r5
    9160:	d1fb      	bne.n	915a <__sccl+0x1a>
    9162:	b913      	cbnz	r3, 916a <__sccl+0x2a>
    9164:	3a01      	subs	r2, #1
    9166:	4610      	mov	r0, r2
    9168:	bd70      	pop	{r4, r5, r6, pc}
    916a:	f081 0401 	eor.w	r4, r1, #1
    916e:	54c4      	strb	r4, [r0, r3]
    9170:	1c51      	adds	r1, r2, #1
    9172:	f811 5c01 	ldrb.w	r5, [r1, #-1]
    9176:	2d2d      	cmp	r5, #45	; 0x2d
    9178:	f101 36ff 	add.w	r6, r1, #4294967295	; 0xffffffff
    917c:	460a      	mov	r2, r1
    917e:	d006      	beq.n	918e <__sccl+0x4e>
    9180:	2d5d      	cmp	r5, #93	; 0x5d
    9182:	d0f0      	beq.n	9166 <__sccl+0x26>
    9184:	b90d      	cbnz	r5, 918a <__sccl+0x4a>
    9186:	4632      	mov	r2, r6
    9188:	e7ed      	b.n	9166 <__sccl+0x26>
    918a:	462b      	mov	r3, r5
    918c:	e7ef      	b.n	916e <__sccl+0x2e>
    918e:	780e      	ldrb	r6, [r1, #0]
    9190:	2e5d      	cmp	r6, #93	; 0x5d
    9192:	d0fa      	beq.n	918a <__sccl+0x4a>
    9194:	42b3      	cmp	r3, r6
    9196:	dcf8      	bgt.n	918a <__sccl+0x4a>
    9198:	3301      	adds	r3, #1
    919a:	429e      	cmp	r6, r3
    919c:	54c4      	strb	r4, [r0, r3]
    919e:	dcfb      	bgt.n	9198 <__sccl+0x58>
    91a0:	3102      	adds	r1, #2
    91a2:	e7e6      	b.n	9172 <__sccl+0x32>

000091a4 <__sread>:
__sread():
    91a4:	b510      	push	{r4, lr}
    91a6:	460c      	mov	r4, r1
    91a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    91ac:	f000 f95e 	bl	946c <_read_r>
    91b0:	2800      	cmp	r0, #0
    91b2:	bfab      	itete	ge
    91b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    91b6:	89a3      	ldrhlt	r3, [r4, #12]
    91b8:	181b      	addge	r3, r3, r0
    91ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    91be:	bfac      	ite	ge
    91c0:	6563      	strge	r3, [r4, #84]	; 0x54
    91c2:	81a3      	strhlt	r3, [r4, #12]
    91c4:	bd10      	pop	{r4, pc}

000091c6 <__seofread>:
__seofread():
    91c6:	2000      	movs	r0, #0
    91c8:	4770      	bx	lr

000091ca <__swrite>:
__swrite():
    91ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    91ce:	461f      	mov	r7, r3
    91d0:	898b      	ldrh	r3, [r1, #12]
    91d2:	05db      	lsls	r3, r3, #23
    91d4:	4605      	mov	r5, r0
    91d6:	460c      	mov	r4, r1
    91d8:	4616      	mov	r6, r2
    91da:	d505      	bpl.n	91e8 <__swrite+0x1e>
    91dc:	2302      	movs	r3, #2
    91de:	2200      	movs	r2, #0
    91e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    91e4:	f000 f928 	bl	9438 <_lseek_r>
    91e8:	89a3      	ldrh	r3, [r4, #12]
    91ea:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    91ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    91f2:	81a3      	strh	r3, [r4, #12]
    91f4:	4632      	mov	r2, r6
    91f6:	463b      	mov	r3, r7
    91f8:	4628      	mov	r0, r5
    91fa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    91fe:	f000 b8d7 	b.w	93b0 <_write_r>

00009202 <__sseek>:
__sseek():
    9202:	b510      	push	{r4, lr}
    9204:	460c      	mov	r4, r1
    9206:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    920a:	f000 f915 	bl	9438 <_lseek_r>
    920e:	1c43      	adds	r3, r0, #1
    9210:	89a3      	ldrh	r3, [r4, #12]
    9212:	bf15      	itete	ne
    9214:	6560      	strne	r0, [r4, #84]	; 0x54
    9216:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    921a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    921e:	81a3      	strheq	r3, [r4, #12]
    9220:	bf18      	it	ne
    9222:	81a3      	strhne	r3, [r4, #12]
    9224:	bd10      	pop	{r4, pc}

00009226 <__sclose>:
__sclose():
    9226:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    922a:	f000 b8d3 	b.w	93d4 <_close_r>
    922e:	Address 0x000000000000922e is out of bounds.


00009230 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
    9230:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    9234:	4f38      	ldr	r7, [pc, #224]	; (9318 <_strtoul_l.isra.0+0xe8>)
    9236:	4686      	mov	lr, r0
    9238:	4608      	mov	r0, r1
    923a:	4605      	mov	r5, r0
    923c:	f815 4b01 	ldrb.w	r4, [r5], #1
    9240:	5de6      	ldrb	r6, [r4, r7]
    9242:	f016 0608 	ands.w	r6, r6, #8
    9246:	d131      	bne.n	92ac <_strtoul_l.isra.0+0x7c>
    9248:	2c2d      	cmp	r4, #45	; 0x2d
    924a:	d131      	bne.n	92b0 <_strtoul_l.isra.0+0x80>
    924c:	782c      	ldrb	r4, [r5, #0]
    924e:	f04f 0801 	mov.w	r8, #1
    9252:	1c85      	adds	r5, r0, #2
    9254:	2b00      	cmp	r3, #0
    9256:	d05a      	beq.n	930e <_strtoul_l.isra.0+0xde>
    9258:	2b10      	cmp	r3, #16
    925a:	d109      	bne.n	9270 <_strtoul_l.isra.0+0x40>
    925c:	2c30      	cmp	r4, #48	; 0x30
    925e:	d107      	bne.n	9270 <_strtoul_l.isra.0+0x40>
    9260:	7828      	ldrb	r0, [r5, #0]
    9262:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    9266:	2858      	cmp	r0, #88	; 0x58
    9268:	d14c      	bne.n	9304 <_strtoul_l.isra.0+0xd4>
    926a:	786c      	ldrb	r4, [r5, #1]
    926c:	2310      	movs	r3, #16
    926e:	3502      	adds	r5, #2
    9270:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    9274:	2600      	movs	r6, #0
    9276:	fbbc fcf3 	udiv	ip, ip, r3
    927a:	fb03 f90c 	mul.w	r9, r3, ip
    927e:	ea6f 0909 	mvn.w	r9, r9
    9282:	4630      	mov	r0, r6
    9284:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
    9288:	2f09      	cmp	r7, #9
    928a:	d818      	bhi.n	92be <_strtoul_l.isra.0+0x8e>
    928c:	463c      	mov	r4, r7
    928e:	42a3      	cmp	r3, r4
    9290:	dd24      	ble.n	92dc <_strtoul_l.isra.0+0xac>
    9292:	2e00      	cmp	r6, #0
    9294:	db1f      	blt.n	92d6 <_strtoul_l.isra.0+0xa6>
    9296:	4584      	cmp	ip, r0
    9298:	d31d      	bcc.n	92d6 <_strtoul_l.isra.0+0xa6>
    929a:	d101      	bne.n	92a0 <_strtoul_l.isra.0+0x70>
    929c:	45a1      	cmp	r9, r4
    929e:	db1a      	blt.n	92d6 <_strtoul_l.isra.0+0xa6>
    92a0:	fb00 4003 	mla	r0, r0, r3, r4
    92a4:	2601      	movs	r6, #1
    92a6:	f815 4b01 	ldrb.w	r4, [r5], #1
    92aa:	e7eb      	b.n	9284 <_strtoul_l.isra.0+0x54>
    92ac:	4628      	mov	r0, r5
    92ae:	e7c4      	b.n	923a <_strtoul_l.isra.0+0xa>
    92b0:	2c2b      	cmp	r4, #43	; 0x2b
    92b2:	bf08      	it	eq
    92b4:	782c      	ldrbeq	r4, [r5, #0]
    92b6:	46b0      	mov	r8, r6
    92b8:	bf08      	it	eq
    92ba:	1c85      	addeq	r5, r0, #2
    92bc:	e7ca      	b.n	9254 <_strtoul_l.isra.0+0x24>
    92be:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
    92c2:	2f19      	cmp	r7, #25
    92c4:	d801      	bhi.n	92ca <_strtoul_l.isra.0+0x9a>
    92c6:	3c37      	subs	r4, #55	; 0x37
    92c8:	e7e1      	b.n	928e <_strtoul_l.isra.0+0x5e>
    92ca:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
    92ce:	2f19      	cmp	r7, #25
    92d0:	d804      	bhi.n	92dc <_strtoul_l.isra.0+0xac>
    92d2:	3c57      	subs	r4, #87	; 0x57
    92d4:	e7db      	b.n	928e <_strtoul_l.isra.0+0x5e>
    92d6:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
    92da:	e7e4      	b.n	92a6 <_strtoul_l.isra.0+0x76>
    92dc:	2e00      	cmp	r6, #0
    92de:	da07      	bge.n	92f0 <_strtoul_l.isra.0+0xc0>
    92e0:	2322      	movs	r3, #34	; 0x22
    92e2:	f8ce 3000 	str.w	r3, [lr]
    92e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    92ea:	b942      	cbnz	r2, 92fe <_strtoul_l.isra.0+0xce>
    92ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    92f0:	f1b8 0f00 	cmp.w	r8, #0
    92f4:	d000      	beq.n	92f8 <_strtoul_l.isra.0+0xc8>
    92f6:	4240      	negs	r0, r0
    92f8:	2a00      	cmp	r2, #0
    92fa:	d0f7      	beq.n	92ec <_strtoul_l.isra.0+0xbc>
    92fc:	b106      	cbz	r6, 9300 <_strtoul_l.isra.0+0xd0>
    92fe:	1e69      	subs	r1, r5, #1
    9300:	6011      	str	r1, [r2, #0]
    9302:	e7f3      	b.n	92ec <_strtoul_l.isra.0+0xbc>
    9304:	2430      	movs	r4, #48	; 0x30
    9306:	2b00      	cmp	r3, #0
    9308:	d1b2      	bne.n	9270 <_strtoul_l.isra.0+0x40>
    930a:	2308      	movs	r3, #8
    930c:	e7b0      	b.n	9270 <_strtoul_l.isra.0+0x40>
    930e:	2c30      	cmp	r4, #48	; 0x30
    9310:	d0a6      	beq.n	9260 <_strtoul_l.isra.0+0x30>
    9312:	230a      	movs	r3, #10
    9314:	e7ac      	b.n	9270 <_strtoul_l.isra.0+0x40>
    9316:	bf00      	nop
    9318:	0000b189 	.word	0x0000b189

0000931c <_strtoul_r>:
_strtoul_r():
    931c:	f7ff bf88 	b.w	9230 <_strtoul_l.isra.0>

00009320 <__submore>:
__submore():
    9320:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9324:	460c      	mov	r4, r1
    9326:	6b49      	ldr	r1, [r1, #52]	; 0x34
    9328:	f104 0344 	add.w	r3, r4, #68	; 0x44
    932c:	4299      	cmp	r1, r3
    932e:	d11d      	bne.n	936c <__submore+0x4c>
    9330:	f44f 6180 	mov.w	r1, #1024	; 0x400
    9334:	f7fb f816 	bl	4364 <_malloc_r>
    9338:	b918      	cbnz	r0, 9342 <__submore+0x22>
    933a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    933e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9342:	f44f 6380 	mov.w	r3, #1024	; 0x400
    9346:	63a3      	str	r3, [r4, #56]	; 0x38
    9348:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
    934c:	6360      	str	r0, [r4, #52]	; 0x34
    934e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
    9352:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    9356:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
    935a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    935e:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
    9362:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
    9366:	6020      	str	r0, [r4, #0]
    9368:	2000      	movs	r0, #0
    936a:	e7e8      	b.n	933e <__submore+0x1e>
    936c:	6ba6      	ldr	r6, [r4, #56]	; 0x38
    936e:	0077      	lsls	r7, r6, #1
    9370:	463a      	mov	r2, r7
    9372:	f7ff f9ff 	bl	8774 <_realloc_r>
    9376:	4605      	mov	r5, r0
    9378:	2800      	cmp	r0, #0
    937a:	d0de      	beq.n	933a <__submore+0x1a>
    937c:	eb00 0806 	add.w	r8, r0, r6
    9380:	4601      	mov	r1, r0
    9382:	4632      	mov	r2, r6
    9384:	4640      	mov	r0, r8
    9386:	f7fa ff6f 	bl	4268 <memcpy>
    938a:	f8c4 8000 	str.w	r8, [r4]
    938e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
    9392:	e7e9      	b.n	9368 <__submore+0x48>

00009394 <__ascii_wctomb>:
__ascii_wctomb():
    9394:	b149      	cbz	r1, 93aa <__ascii_wctomb+0x16>
    9396:	2aff      	cmp	r2, #255	; 0xff
    9398:	bf85      	ittet	hi
    939a:	238a      	movhi	r3, #138	; 0x8a
    939c:	6003      	strhi	r3, [r0, #0]
    939e:	700a      	strbls	r2, [r1, #0]
    93a0:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
    93a4:	bf98      	it	ls
    93a6:	2001      	movls	r0, #1
    93a8:	4770      	bx	lr
    93aa:	4608      	mov	r0, r1
    93ac:	4770      	bx	lr
    93ae:	Address 0x00000000000093ae is out of bounds.


000093b0 <_write_r>:
_write_r():
    93b0:	b538      	push	{r3, r4, r5, lr}
    93b2:	4c07      	ldr	r4, [pc, #28]	; (93d0 <_write_r+0x20>)
    93b4:	4605      	mov	r5, r0
    93b6:	4608      	mov	r0, r1
    93b8:	4611      	mov	r1, r2
    93ba:	2200      	movs	r2, #0
    93bc:	6022      	str	r2, [r4, #0]
    93be:	461a      	mov	r2, r3
    93c0:	f7f7 fcfe 	bl	dc0 <_write>
    93c4:	1c43      	adds	r3, r0, #1
    93c6:	d102      	bne.n	93ce <_write_r+0x1e>
    93c8:	6823      	ldr	r3, [r4, #0]
    93ca:	b103      	cbz	r3, 93ce <_write_r+0x1e>
    93cc:	602b      	str	r3, [r5, #0]
    93ce:	bd38      	pop	{r3, r4, r5, pc}
    93d0:	100012ec 	.word	0x100012ec

000093d4 <_close_r>:
_close_r():
    93d4:	b538      	push	{r3, r4, r5, lr}
    93d6:	4c06      	ldr	r4, [pc, #24]	; (93f0 <_close_r+0x1c>)
    93d8:	2300      	movs	r3, #0
    93da:	4605      	mov	r5, r0
    93dc:	4608      	mov	r0, r1
    93de:	6023      	str	r3, [r4, #0]
    93e0:	f000 fe26 	bl	a030 <_close>
    93e4:	1c43      	adds	r3, r0, #1
    93e6:	d102      	bne.n	93ee <_close_r+0x1a>
    93e8:	6823      	ldr	r3, [r4, #0]
    93ea:	b103      	cbz	r3, 93ee <_close_r+0x1a>
    93ec:	602b      	str	r3, [r5, #0]
    93ee:	bd38      	pop	{r3, r4, r5, pc}
    93f0:	100012ec 	.word	0x100012ec

000093f4 <_fstat_r>:
_fstat_r():
    93f4:	b538      	push	{r3, r4, r5, lr}
    93f6:	4c07      	ldr	r4, [pc, #28]	; (9414 <_fstat_r+0x20>)
    93f8:	2300      	movs	r3, #0
    93fa:	4605      	mov	r5, r0
    93fc:	4608      	mov	r0, r1
    93fe:	4611      	mov	r1, r2
    9400:	6023      	str	r3, [r4, #0]
    9402:	f000 fe1d 	bl	a040 <_fstat>
    9406:	1c43      	adds	r3, r0, #1
    9408:	d102      	bne.n	9410 <_fstat_r+0x1c>
    940a:	6823      	ldr	r3, [r4, #0]
    940c:	b103      	cbz	r3, 9410 <_fstat_r+0x1c>
    940e:	602b      	str	r3, [r5, #0]
    9410:	bd38      	pop	{r3, r4, r5, pc}
    9412:	bf00      	nop
    9414:	100012ec 	.word	0x100012ec

00009418 <_isatty_r>:
_isatty_r():
    9418:	b538      	push	{r3, r4, r5, lr}
    941a:	4c06      	ldr	r4, [pc, #24]	; (9434 <_isatty_r+0x1c>)
    941c:	2300      	movs	r3, #0
    941e:	4605      	mov	r5, r0
    9420:	4608      	mov	r0, r1
    9422:	6023      	str	r3, [r4, #0]
    9424:	f7f7 fcb8 	bl	d98 <_isatty>
    9428:	1c43      	adds	r3, r0, #1
    942a:	d102      	bne.n	9432 <_isatty_r+0x1a>
    942c:	6823      	ldr	r3, [r4, #0]
    942e:	b103      	cbz	r3, 9432 <_isatty_r+0x1a>
    9430:	602b      	str	r3, [r5, #0]
    9432:	bd38      	pop	{r3, r4, r5, pc}
    9434:	100012ec 	.word	0x100012ec

00009438 <_lseek_r>:
_lseek_r():
    9438:	b538      	push	{r3, r4, r5, lr}
    943a:	4c07      	ldr	r4, [pc, #28]	; (9458 <_lseek_r+0x20>)
    943c:	4605      	mov	r5, r0
    943e:	4608      	mov	r0, r1
    9440:	4611      	mov	r1, r2
    9442:	2200      	movs	r2, #0
    9444:	6022      	str	r2, [r4, #0]
    9446:	461a      	mov	r2, r3
    9448:	f000 fe02 	bl	a050 <_lseek>
    944c:	1c43      	adds	r3, r0, #1
    944e:	d102      	bne.n	9456 <_lseek_r+0x1e>
    9450:	6823      	ldr	r3, [r4, #0]
    9452:	b103      	cbz	r3, 9456 <_lseek_r+0x1e>
    9454:	602b      	str	r3, [r5, #0]
    9456:	bd38      	pop	{r3, r4, r5, pc}
    9458:	100012ec 	.word	0x100012ec

0000945c <_malloc_usable_size_r>:
_malloc_usable_size_r():
    945c:	f851 3c04 	ldr.w	r3, [r1, #-4]
    9460:	1f18      	subs	r0, r3, #4
    9462:	2b00      	cmp	r3, #0
    9464:	bfbc      	itt	lt
    9466:	580b      	ldrlt	r3, [r1, r0]
    9468:	18c0      	addlt	r0, r0, r3
    946a:	4770      	bx	lr

0000946c <_read_r>:
_read_r():
    946c:	b538      	push	{r3, r4, r5, lr}
    946e:	4c07      	ldr	r4, [pc, #28]	; (948c <_read_r+0x20>)
    9470:	4605      	mov	r5, r0
    9472:	4608      	mov	r0, r1
    9474:	4611      	mov	r1, r2
    9476:	2200      	movs	r2, #0
    9478:	6022      	str	r2, [r4, #0]
    947a:	461a      	mov	r2, r3
    947c:	f7f7 fcd8 	bl	e30 <_read>
    9480:	1c43      	adds	r3, r0, #1
    9482:	d102      	bne.n	948a <_read_r+0x1e>
    9484:	6823      	ldr	r3, [r4, #0]
    9486:	b103      	cbz	r3, 948a <_read_r+0x1e>
    9488:	602b      	str	r3, [r5, #0]
    948a:	bd38      	pop	{r3, r4, r5, pc}
    948c:	100012ec 	.word	0x100012ec

00009490 <lflush>:
lflush():
    9490:	8983      	ldrh	r3, [r0, #12]
    9492:	f003 0309 	and.w	r3, r3, #9
    9496:	2b09      	cmp	r3, #9
    9498:	d101      	bne.n	949e <lflush+0xe>
    949a:	f7fd bffd 	b.w	7498 <fflush>
    949e:	2000      	movs	r0, #0
    94a0:	4770      	bx	lr
    94a2:	Address 0x00000000000094a2 is out of bounds.


000094a4 <__srefill_r>:
__srefill_r():
    94a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    94a6:	460c      	mov	r4, r1
    94a8:	4605      	mov	r5, r0
    94aa:	b118      	cbz	r0, 94b4 <__srefill_r+0x10>
    94ac:	6983      	ldr	r3, [r0, #24]
    94ae:	b90b      	cbnz	r3, 94b4 <__srefill_r+0x10>
    94b0:	f7fe f85c 	bl	756c <__sinit>
    94b4:	4b3c      	ldr	r3, [pc, #240]	; (95a8 <__srefill_r+0x104>)
    94b6:	429c      	cmp	r4, r3
    94b8:	d10a      	bne.n	94d0 <__srefill_r+0x2c>
    94ba:	686c      	ldr	r4, [r5, #4]
    94bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    94c0:	2300      	movs	r3, #0
    94c2:	6063      	str	r3, [r4, #4]
    94c4:	b293      	uxth	r3, r2
    94c6:	069e      	lsls	r6, r3, #26
    94c8:	d50c      	bpl.n	94e4 <__srefill_r+0x40>
    94ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    94ce:	e067      	b.n	95a0 <__srefill_r+0xfc>
    94d0:	4b36      	ldr	r3, [pc, #216]	; (95ac <__srefill_r+0x108>)
    94d2:	429c      	cmp	r4, r3
    94d4:	d101      	bne.n	94da <__srefill_r+0x36>
    94d6:	68ac      	ldr	r4, [r5, #8]
    94d8:	e7f0      	b.n	94bc <__srefill_r+0x18>
    94da:	4b35      	ldr	r3, [pc, #212]	; (95b0 <__srefill_r+0x10c>)
    94dc:	429c      	cmp	r4, r3
    94de:	bf08      	it	eq
    94e0:	68ec      	ldreq	r4, [r5, #12]
    94e2:	e7eb      	b.n	94bc <__srefill_r+0x18>
    94e4:	0758      	lsls	r0, r3, #29
    94e6:	d449      	bmi.n	957c <__srefill_r+0xd8>
    94e8:	06d9      	lsls	r1, r3, #27
    94ea:	d405      	bmi.n	94f8 <__srefill_r+0x54>
    94ec:	2309      	movs	r3, #9
    94ee:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    94f2:	602b      	str	r3, [r5, #0]
    94f4:	81a2      	strh	r2, [r4, #12]
    94f6:	e7e8      	b.n	94ca <__srefill_r+0x26>
    94f8:	071a      	lsls	r2, r3, #28
    94fa:	d50b      	bpl.n	9514 <__srefill_r+0x70>
    94fc:	4621      	mov	r1, r4
    94fe:	4628      	mov	r0, r5
    9500:	f7fd ff8e 	bl	7420 <_fflush_r>
    9504:	2800      	cmp	r0, #0
    9506:	d1e0      	bne.n	94ca <__srefill_r+0x26>
    9508:	89a3      	ldrh	r3, [r4, #12]
    950a:	60a0      	str	r0, [r4, #8]
    950c:	f023 0308 	bic.w	r3, r3, #8
    9510:	81a3      	strh	r3, [r4, #12]
    9512:	61a0      	str	r0, [r4, #24]
    9514:	89a3      	ldrh	r3, [r4, #12]
    9516:	f043 0304 	orr.w	r3, r3, #4
    951a:	81a3      	strh	r3, [r4, #12]
    951c:	6923      	ldr	r3, [r4, #16]
    951e:	b91b      	cbnz	r3, 9528 <__srefill_r+0x84>
    9520:	4621      	mov	r1, r4
    9522:	4628      	mov	r0, r5
    9524:	f7fe fc6c 	bl	7e00 <__smakebuf_r>
    9528:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
    952c:	b2be      	uxth	r6, r7
    952e:	07b3      	lsls	r3, r6, #30
    9530:	d00f      	beq.n	9552 <__srefill_r+0xae>
    9532:	2301      	movs	r3, #1
    9534:	81a3      	strh	r3, [r4, #12]
    9536:	4b1f      	ldr	r3, [pc, #124]	; (95b4 <__srefill_r+0x110>)
    9538:	491f      	ldr	r1, [pc, #124]	; (95b8 <__srefill_r+0x114>)
    953a:	6818      	ldr	r0, [r3, #0]
    953c:	f006 0609 	and.w	r6, r6, #9
    9540:	f7fe f892 	bl	7668 <_fwalk>
    9544:	2e09      	cmp	r6, #9
    9546:	81a7      	strh	r7, [r4, #12]
    9548:	d103      	bne.n	9552 <__srefill_r+0xae>
    954a:	4621      	mov	r1, r4
    954c:	4628      	mov	r0, r5
    954e:	f7fd fee1 	bl	7314 <__sflush_r>
    9552:	6922      	ldr	r2, [r4, #16]
    9554:	6022      	str	r2, [r4, #0]
    9556:	6a66      	ldr	r6, [r4, #36]	; 0x24
    9558:	6963      	ldr	r3, [r4, #20]
    955a:	6a21      	ldr	r1, [r4, #32]
    955c:	4628      	mov	r0, r5
    955e:	47b0      	blx	r6
    9560:	2800      	cmp	r0, #0
    9562:	6060      	str	r0, [r4, #4]
    9564:	dc1d      	bgt.n	95a2 <__srefill_r+0xfe>
    9566:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    956a:	bf17      	itett	ne
    956c:	2200      	movne	r2, #0
    956e:	f043 0320 	orreq.w	r3, r3, #32
    9572:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
    9576:	6062      	strne	r2, [r4, #4]
    9578:	81a3      	strh	r3, [r4, #12]
    957a:	e7a6      	b.n	94ca <__srefill_r+0x26>
    957c:	6b61      	ldr	r1, [r4, #52]	; 0x34
    957e:	2900      	cmp	r1, #0
    9580:	d0cc      	beq.n	951c <__srefill_r+0x78>
    9582:	f104 0344 	add.w	r3, r4, #68	; 0x44
    9586:	4299      	cmp	r1, r3
    9588:	d002      	beq.n	9590 <__srefill_r+0xec>
    958a:	4628      	mov	r0, r5
    958c:	f7fa fe9c 	bl	42c8 <_free_r>
    9590:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9592:	6063      	str	r3, [r4, #4]
    9594:	2000      	movs	r0, #0
    9596:	6360      	str	r0, [r4, #52]	; 0x34
    9598:	2b00      	cmp	r3, #0
    959a:	d0bf      	beq.n	951c <__srefill_r+0x78>
    959c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    959e:	6023      	str	r3, [r4, #0]
    95a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    95a2:	2000      	movs	r0, #0
    95a4:	e7fc      	b.n	95a0 <__srefill_r+0xfc>
    95a6:	bf00      	nop
    95a8:	0000b358 	.word	0x0000b358
    95ac:	0000b378 	.word	0x0000b378
    95b0:	0000b338 	.word	0x0000b338
    95b4:	0000b28c 	.word	0x0000b28c
    95b8:	00009491 	.word	0x00009491

000095bc <__aeabi_drsub>:
__aeabi_drsub():
    95bc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    95c0:	e002      	b.n	95c8 <__adddf3>
    95c2:	bf00      	nop

000095c4 <__aeabi_dsub>:
__subdf3():
    95c4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000095c8 <__adddf3>:
__aeabi_dadd():
    95c8:	b530      	push	{r4, r5, lr}
    95ca:	ea4f 0441 	mov.w	r4, r1, lsl #1
    95ce:	ea4f 0543 	mov.w	r5, r3, lsl #1
    95d2:	ea94 0f05 	teq	r4, r5
    95d6:	bf08      	it	eq
    95d8:	ea90 0f02 	teqeq	r0, r2
    95dc:	bf1f      	itttt	ne
    95de:	ea54 0c00 	orrsne.w	ip, r4, r0
    95e2:	ea55 0c02 	orrsne.w	ip, r5, r2
    95e6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    95ea:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    95ee:	f000 80e2 	beq.w	97b6 <__adddf3+0x1ee>
    95f2:	ea4f 5454 	mov.w	r4, r4, lsr #21
    95f6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    95fa:	bfb8      	it	lt
    95fc:	426d      	neglt	r5, r5
    95fe:	dd0c      	ble.n	961a <__adddf3+0x52>
    9600:	442c      	add	r4, r5
    9602:	ea80 0202 	eor.w	r2, r0, r2
    9606:	ea81 0303 	eor.w	r3, r1, r3
    960a:	ea82 0000 	eor.w	r0, r2, r0
    960e:	ea83 0101 	eor.w	r1, r3, r1
    9612:	ea80 0202 	eor.w	r2, r0, r2
    9616:	ea81 0303 	eor.w	r3, r1, r3
    961a:	2d36      	cmp	r5, #54	; 0x36
    961c:	bf88      	it	hi
    961e:	bd30      	pophi	{r4, r5, pc}
    9620:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    9624:	ea4f 3101 	mov.w	r1, r1, lsl #12
    9628:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    962c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    9630:	d002      	beq.n	9638 <__adddf3+0x70>
    9632:	4240      	negs	r0, r0
    9634:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    9638:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    963c:	ea4f 3303 	mov.w	r3, r3, lsl #12
    9640:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    9644:	d002      	beq.n	964c <__adddf3+0x84>
    9646:	4252      	negs	r2, r2
    9648:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    964c:	ea94 0f05 	teq	r4, r5
    9650:	f000 80a7 	beq.w	97a2 <__adddf3+0x1da>
    9654:	f1a4 0401 	sub.w	r4, r4, #1
    9658:	f1d5 0e20 	rsbs	lr, r5, #32
    965c:	db0d      	blt.n	967a <__adddf3+0xb2>
    965e:	fa02 fc0e 	lsl.w	ip, r2, lr
    9662:	fa22 f205 	lsr.w	r2, r2, r5
    9666:	1880      	adds	r0, r0, r2
    9668:	f141 0100 	adc.w	r1, r1, #0
    966c:	fa03 f20e 	lsl.w	r2, r3, lr
    9670:	1880      	adds	r0, r0, r2
    9672:	fa43 f305 	asr.w	r3, r3, r5
    9676:	4159      	adcs	r1, r3
    9678:	e00e      	b.n	9698 <__adddf3+0xd0>
    967a:	f1a5 0520 	sub.w	r5, r5, #32
    967e:	f10e 0e20 	add.w	lr, lr, #32
    9682:	2a01      	cmp	r2, #1
    9684:	fa03 fc0e 	lsl.w	ip, r3, lr
    9688:	bf28      	it	cs
    968a:	f04c 0c02 	orrcs.w	ip, ip, #2
    968e:	fa43 f305 	asr.w	r3, r3, r5
    9692:	18c0      	adds	r0, r0, r3
    9694:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    9698:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    969c:	d507      	bpl.n	96ae <__adddf3+0xe6>
    969e:	f04f 0e00 	mov.w	lr, #0
    96a2:	f1dc 0c00 	rsbs	ip, ip, #0
    96a6:	eb7e 0000 	sbcs.w	r0, lr, r0
    96aa:	eb6e 0101 	sbc.w	r1, lr, r1
    96ae:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    96b2:	d31b      	bcc.n	96ec <__adddf3+0x124>
    96b4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    96b8:	d30c      	bcc.n	96d4 <__adddf3+0x10c>
    96ba:	0849      	lsrs	r1, r1, #1
    96bc:	ea5f 0030 	movs.w	r0, r0, rrx
    96c0:	ea4f 0c3c 	mov.w	ip, ip, rrx
    96c4:	f104 0401 	add.w	r4, r4, #1
    96c8:	ea4f 5244 	mov.w	r2, r4, lsl #21
    96cc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    96d0:	f080 809a 	bcs.w	9808 <__adddf3+0x240>
    96d4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    96d8:	bf08      	it	eq
    96da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    96de:	f150 0000 	adcs.w	r0, r0, #0
    96e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    96e6:	ea41 0105 	orr.w	r1, r1, r5
    96ea:	bd30      	pop	{r4, r5, pc}
    96ec:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    96f0:	4140      	adcs	r0, r0
    96f2:	eb41 0101 	adc.w	r1, r1, r1
    96f6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    96fa:	f1a4 0401 	sub.w	r4, r4, #1
    96fe:	d1e9      	bne.n	96d4 <__adddf3+0x10c>
    9700:	f091 0f00 	teq	r1, #0
    9704:	bf04      	itt	eq
    9706:	4601      	moveq	r1, r0
    9708:	2000      	moveq	r0, #0
    970a:	fab1 f381 	clz	r3, r1
    970e:	bf08      	it	eq
    9710:	3320      	addeq	r3, #32
    9712:	f1a3 030b 	sub.w	r3, r3, #11
    9716:	f1b3 0220 	subs.w	r2, r3, #32
    971a:	da0c      	bge.n	9736 <__adddf3+0x16e>
    971c:	320c      	adds	r2, #12
    971e:	dd08      	ble.n	9732 <__adddf3+0x16a>
    9720:	f102 0c14 	add.w	ip, r2, #20
    9724:	f1c2 020c 	rsb	r2, r2, #12
    9728:	fa01 f00c 	lsl.w	r0, r1, ip
    972c:	fa21 f102 	lsr.w	r1, r1, r2
    9730:	e00c      	b.n	974c <__adddf3+0x184>
    9732:	f102 0214 	add.w	r2, r2, #20
    9736:	bfd8      	it	le
    9738:	f1c2 0c20 	rsble	ip, r2, #32
    973c:	fa01 f102 	lsl.w	r1, r1, r2
    9740:	fa20 fc0c 	lsr.w	ip, r0, ip
    9744:	bfdc      	itt	le
    9746:	ea41 010c 	orrle.w	r1, r1, ip
    974a:	4090      	lslle	r0, r2
    974c:	1ae4      	subs	r4, r4, r3
    974e:	bfa2      	ittt	ge
    9750:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    9754:	4329      	orrge	r1, r5
    9756:	bd30      	popge	{r4, r5, pc}
    9758:	ea6f 0404 	mvn.w	r4, r4
    975c:	3c1f      	subs	r4, #31
    975e:	da1c      	bge.n	979a <__adddf3+0x1d2>
    9760:	340c      	adds	r4, #12
    9762:	dc0e      	bgt.n	9782 <__adddf3+0x1ba>
    9764:	f104 0414 	add.w	r4, r4, #20
    9768:	f1c4 0220 	rsb	r2, r4, #32
    976c:	fa20 f004 	lsr.w	r0, r0, r4
    9770:	fa01 f302 	lsl.w	r3, r1, r2
    9774:	ea40 0003 	orr.w	r0, r0, r3
    9778:	fa21 f304 	lsr.w	r3, r1, r4
    977c:	ea45 0103 	orr.w	r1, r5, r3
    9780:	bd30      	pop	{r4, r5, pc}
    9782:	f1c4 040c 	rsb	r4, r4, #12
    9786:	f1c4 0220 	rsb	r2, r4, #32
    978a:	fa20 f002 	lsr.w	r0, r0, r2
    978e:	fa01 f304 	lsl.w	r3, r1, r4
    9792:	ea40 0003 	orr.w	r0, r0, r3
    9796:	4629      	mov	r1, r5
    9798:	bd30      	pop	{r4, r5, pc}
    979a:	fa21 f004 	lsr.w	r0, r1, r4
    979e:	4629      	mov	r1, r5
    97a0:	bd30      	pop	{r4, r5, pc}
    97a2:	f094 0f00 	teq	r4, #0
    97a6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    97aa:	bf06      	itte	eq
    97ac:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    97b0:	3401      	addeq	r4, #1
    97b2:	3d01      	subne	r5, #1
    97b4:	e74e      	b.n	9654 <__adddf3+0x8c>
    97b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    97ba:	bf18      	it	ne
    97bc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    97c0:	d029      	beq.n	9816 <__adddf3+0x24e>
    97c2:	ea94 0f05 	teq	r4, r5
    97c6:	bf08      	it	eq
    97c8:	ea90 0f02 	teqeq	r0, r2
    97cc:	d005      	beq.n	97da <__adddf3+0x212>
    97ce:	ea54 0c00 	orrs.w	ip, r4, r0
    97d2:	bf04      	itt	eq
    97d4:	4619      	moveq	r1, r3
    97d6:	4610      	moveq	r0, r2
    97d8:	bd30      	pop	{r4, r5, pc}
    97da:	ea91 0f03 	teq	r1, r3
    97de:	bf1e      	ittt	ne
    97e0:	2100      	movne	r1, #0
    97e2:	2000      	movne	r0, #0
    97e4:	bd30      	popne	{r4, r5, pc}
    97e6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    97ea:	d105      	bne.n	97f8 <__adddf3+0x230>
    97ec:	0040      	lsls	r0, r0, #1
    97ee:	4149      	adcs	r1, r1
    97f0:	bf28      	it	cs
    97f2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    97f6:	bd30      	pop	{r4, r5, pc}
    97f8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    97fc:	bf3c      	itt	cc
    97fe:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    9802:	bd30      	popcc	{r4, r5, pc}
    9804:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    9808:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    980c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    9810:	f04f 0000 	mov.w	r0, #0
    9814:	bd30      	pop	{r4, r5, pc}
    9816:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    981a:	bf1a      	itte	ne
    981c:	4619      	movne	r1, r3
    981e:	4610      	movne	r0, r2
    9820:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    9824:	bf1c      	itt	ne
    9826:	460b      	movne	r3, r1
    9828:	4602      	movne	r2, r0
    982a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    982e:	bf06      	itte	eq
    9830:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    9834:	ea91 0f03 	teqeq	r1, r3
    9838:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    983c:	bd30      	pop	{r4, r5, pc}
    983e:	bf00      	nop

00009840 <__aeabi_ui2d>:
__floatunsidf():
    9840:	f090 0f00 	teq	r0, #0
    9844:	bf04      	itt	eq
    9846:	2100      	moveq	r1, #0
    9848:	4770      	bxeq	lr
    984a:	b530      	push	{r4, r5, lr}
    984c:	f44f 6480 	mov.w	r4, #1024	; 0x400
    9850:	f104 0432 	add.w	r4, r4, #50	; 0x32
    9854:	f04f 0500 	mov.w	r5, #0
    9858:	f04f 0100 	mov.w	r1, #0
    985c:	e750      	b.n	9700 <__adddf3+0x138>
    985e:	bf00      	nop

00009860 <__aeabi_i2d>:
__aeabi_i2d():
    9860:	f090 0f00 	teq	r0, #0
    9864:	bf04      	itt	eq
    9866:	2100      	moveq	r1, #0
    9868:	4770      	bxeq	lr
    986a:	b530      	push	{r4, r5, lr}
    986c:	f44f 6480 	mov.w	r4, #1024	; 0x400
    9870:	f104 0432 	add.w	r4, r4, #50	; 0x32
    9874:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    9878:	bf48      	it	mi
    987a:	4240      	negmi	r0, r0
    987c:	f04f 0100 	mov.w	r1, #0
    9880:	e73e      	b.n	9700 <__adddf3+0x138>
    9882:	bf00      	nop

00009884 <__aeabi_f2d>:
__aeabi_f2d():
    9884:	0042      	lsls	r2, r0, #1
    9886:	ea4f 01e2 	mov.w	r1, r2, asr #3
    988a:	ea4f 0131 	mov.w	r1, r1, rrx
    988e:	ea4f 7002 	mov.w	r0, r2, lsl #28
    9892:	bf1f      	itttt	ne
    9894:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    9898:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    989c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    98a0:	4770      	bxne	lr
    98a2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    98a6:	bf08      	it	eq
    98a8:	4770      	bxeq	lr
    98aa:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    98ae:	bf04      	itt	eq
    98b0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    98b4:	4770      	bxeq	lr
    98b6:	b530      	push	{r4, r5, lr}
    98b8:	f44f 7460 	mov.w	r4, #896	; 0x380
    98bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    98c0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    98c4:	e71c      	b.n	9700 <__adddf3+0x138>
    98c6:	bf00      	nop

000098c8 <__aeabi_ul2d>:
__floatundidf():
    98c8:	ea50 0201 	orrs.w	r2, r0, r1
    98cc:	bf08      	it	eq
    98ce:	4770      	bxeq	lr
    98d0:	b530      	push	{r4, r5, lr}
    98d2:	f04f 0500 	mov.w	r5, #0
    98d6:	e00a      	b.n	98ee <__aeabi_l2d+0x16>

000098d8 <__aeabi_l2d>:
__aeabi_l2d():
    98d8:	ea50 0201 	orrs.w	r2, r0, r1
    98dc:	bf08      	it	eq
    98de:	4770      	bxeq	lr
    98e0:	b530      	push	{r4, r5, lr}
    98e2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    98e6:	d502      	bpl.n	98ee <__aeabi_l2d+0x16>
    98e8:	4240      	negs	r0, r0
    98ea:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    98ee:	f44f 6480 	mov.w	r4, #1024	; 0x400
    98f2:	f104 0432 	add.w	r4, r4, #50	; 0x32
    98f6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    98fa:	f43f aed8 	beq.w	96ae <__adddf3+0xe6>
    98fe:	f04f 0203 	mov.w	r2, #3
    9902:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    9906:	bf18      	it	ne
    9908:	3203      	addne	r2, #3
    990a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    990e:	bf18      	it	ne
    9910:	3203      	addne	r2, #3
    9912:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    9916:	f1c2 0320 	rsb	r3, r2, #32
    991a:	fa00 fc03 	lsl.w	ip, r0, r3
    991e:	fa20 f002 	lsr.w	r0, r0, r2
    9922:	fa01 fe03 	lsl.w	lr, r1, r3
    9926:	ea40 000e 	orr.w	r0, r0, lr
    992a:	fa21 f102 	lsr.w	r1, r1, r2
    992e:	4414      	add	r4, r2
    9930:	e6bd      	b.n	96ae <__adddf3+0xe6>
    9932:	bf00      	nop

00009934 <__aeabi_dmul>:
__muldf3():
    9934:	b570      	push	{r4, r5, r6, lr}
    9936:	f04f 0cff 	mov.w	ip, #255	; 0xff
    993a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    993e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    9942:	bf1d      	ittte	ne
    9944:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    9948:	ea94 0f0c 	teqne	r4, ip
    994c:	ea95 0f0c 	teqne	r5, ip
    9950:	f000 f8de 	bleq	9b10 <__aeabi_dmul+0x1dc>
    9954:	442c      	add	r4, r5
    9956:	ea81 0603 	eor.w	r6, r1, r3
    995a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    995e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    9962:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    9966:	bf18      	it	ne
    9968:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    996c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9970:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    9974:	d038      	beq.n	99e8 <__aeabi_dmul+0xb4>
    9976:	fba0 ce02 	umull	ip, lr, r0, r2
    997a:	f04f 0500 	mov.w	r5, #0
    997e:	fbe1 e502 	umlal	lr, r5, r1, r2
    9982:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    9986:	fbe0 e503 	umlal	lr, r5, r0, r3
    998a:	f04f 0600 	mov.w	r6, #0
    998e:	fbe1 5603 	umlal	r5, r6, r1, r3
    9992:	f09c 0f00 	teq	ip, #0
    9996:	bf18      	it	ne
    9998:	f04e 0e01 	orrne.w	lr, lr, #1
    999c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    99a0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    99a4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    99a8:	d204      	bcs.n	99b4 <__aeabi_dmul+0x80>
    99aa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    99ae:	416d      	adcs	r5, r5
    99b0:	eb46 0606 	adc.w	r6, r6, r6
    99b4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    99b8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    99bc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    99c0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    99c4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    99c8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    99cc:	bf88      	it	hi
    99ce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    99d2:	d81e      	bhi.n	9a12 <__aeabi_dmul+0xde>
    99d4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    99d8:	bf08      	it	eq
    99da:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    99de:	f150 0000 	adcs.w	r0, r0, #0
    99e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    99e6:	bd70      	pop	{r4, r5, r6, pc}
    99e8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    99ec:	ea46 0101 	orr.w	r1, r6, r1
    99f0:	ea40 0002 	orr.w	r0, r0, r2
    99f4:	ea81 0103 	eor.w	r1, r1, r3
    99f8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    99fc:	bfc2      	ittt	gt
    99fe:	ebd4 050c 	rsbsgt	r5, r4, ip
    9a02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    9a06:	bd70      	popgt	{r4, r5, r6, pc}
    9a08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9a0c:	f04f 0e00 	mov.w	lr, #0
    9a10:	3c01      	subs	r4, #1
    9a12:	f300 80ab 	bgt.w	9b6c <__aeabi_dmul+0x238>
    9a16:	f114 0f36 	cmn.w	r4, #54	; 0x36
    9a1a:	bfde      	ittt	le
    9a1c:	2000      	movle	r0, #0
    9a1e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    9a22:	bd70      	pople	{r4, r5, r6, pc}
    9a24:	f1c4 0400 	rsb	r4, r4, #0
    9a28:	3c20      	subs	r4, #32
    9a2a:	da35      	bge.n	9a98 <__aeabi_dmul+0x164>
    9a2c:	340c      	adds	r4, #12
    9a2e:	dc1b      	bgt.n	9a68 <__aeabi_dmul+0x134>
    9a30:	f104 0414 	add.w	r4, r4, #20
    9a34:	f1c4 0520 	rsb	r5, r4, #32
    9a38:	fa00 f305 	lsl.w	r3, r0, r5
    9a3c:	fa20 f004 	lsr.w	r0, r0, r4
    9a40:	fa01 f205 	lsl.w	r2, r1, r5
    9a44:	ea40 0002 	orr.w	r0, r0, r2
    9a48:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    9a4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    9a50:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    9a54:	fa21 f604 	lsr.w	r6, r1, r4
    9a58:	eb42 0106 	adc.w	r1, r2, r6
    9a5c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9a60:	bf08      	it	eq
    9a62:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9a66:	bd70      	pop	{r4, r5, r6, pc}
    9a68:	f1c4 040c 	rsb	r4, r4, #12
    9a6c:	f1c4 0520 	rsb	r5, r4, #32
    9a70:	fa00 f304 	lsl.w	r3, r0, r4
    9a74:	fa20 f005 	lsr.w	r0, r0, r5
    9a78:	fa01 f204 	lsl.w	r2, r1, r4
    9a7c:	ea40 0002 	orr.w	r0, r0, r2
    9a80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9a84:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    9a88:	f141 0100 	adc.w	r1, r1, #0
    9a8c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9a90:	bf08      	it	eq
    9a92:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9a96:	bd70      	pop	{r4, r5, r6, pc}
    9a98:	f1c4 0520 	rsb	r5, r4, #32
    9a9c:	fa00 f205 	lsl.w	r2, r0, r5
    9aa0:	ea4e 0e02 	orr.w	lr, lr, r2
    9aa4:	fa20 f304 	lsr.w	r3, r0, r4
    9aa8:	fa01 f205 	lsl.w	r2, r1, r5
    9aac:	ea43 0302 	orr.w	r3, r3, r2
    9ab0:	fa21 f004 	lsr.w	r0, r1, r4
    9ab4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9ab8:	fa21 f204 	lsr.w	r2, r1, r4
    9abc:	ea20 0002 	bic.w	r0, r0, r2
    9ac0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    9ac4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9ac8:	bf08      	it	eq
    9aca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9ace:	bd70      	pop	{r4, r5, r6, pc}
    9ad0:	f094 0f00 	teq	r4, #0
    9ad4:	d10f      	bne.n	9af6 <__aeabi_dmul+0x1c2>
    9ad6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    9ada:	0040      	lsls	r0, r0, #1
    9adc:	eb41 0101 	adc.w	r1, r1, r1
    9ae0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9ae4:	bf08      	it	eq
    9ae6:	3c01      	subeq	r4, #1
    9ae8:	d0f7      	beq.n	9ada <__aeabi_dmul+0x1a6>
    9aea:	ea41 0106 	orr.w	r1, r1, r6
    9aee:	f095 0f00 	teq	r5, #0
    9af2:	bf18      	it	ne
    9af4:	4770      	bxne	lr
    9af6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    9afa:	0052      	lsls	r2, r2, #1
    9afc:	eb43 0303 	adc.w	r3, r3, r3
    9b00:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    9b04:	bf08      	it	eq
    9b06:	3d01      	subeq	r5, #1
    9b08:	d0f7      	beq.n	9afa <__aeabi_dmul+0x1c6>
    9b0a:	ea43 0306 	orr.w	r3, r3, r6
    9b0e:	4770      	bx	lr
    9b10:	ea94 0f0c 	teq	r4, ip
    9b14:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    9b18:	bf18      	it	ne
    9b1a:	ea95 0f0c 	teqne	r5, ip
    9b1e:	d00c      	beq.n	9b3a <__aeabi_dmul+0x206>
    9b20:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9b24:	bf18      	it	ne
    9b26:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9b2a:	d1d1      	bne.n	9ad0 <__aeabi_dmul+0x19c>
    9b2c:	ea81 0103 	eor.w	r1, r1, r3
    9b30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9b34:	f04f 0000 	mov.w	r0, #0
    9b38:	bd70      	pop	{r4, r5, r6, pc}
    9b3a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9b3e:	bf06      	itte	eq
    9b40:	4610      	moveq	r0, r2
    9b42:	4619      	moveq	r1, r3
    9b44:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9b48:	d019      	beq.n	9b7e <__aeabi_dmul+0x24a>
    9b4a:	ea94 0f0c 	teq	r4, ip
    9b4e:	d102      	bne.n	9b56 <__aeabi_dmul+0x222>
    9b50:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    9b54:	d113      	bne.n	9b7e <__aeabi_dmul+0x24a>
    9b56:	ea95 0f0c 	teq	r5, ip
    9b5a:	d105      	bne.n	9b68 <__aeabi_dmul+0x234>
    9b5c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    9b60:	bf1c      	itt	ne
    9b62:	4610      	movne	r0, r2
    9b64:	4619      	movne	r1, r3
    9b66:	d10a      	bne.n	9b7e <__aeabi_dmul+0x24a>
    9b68:	ea81 0103 	eor.w	r1, r1, r3
    9b6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9b70:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    9b74:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    9b78:	f04f 0000 	mov.w	r0, #0
    9b7c:	bd70      	pop	{r4, r5, r6, pc}
    9b7e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    9b82:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    9b86:	bd70      	pop	{r4, r5, r6, pc}

00009b88 <__aeabi_ddiv>:
__divdf3():
    9b88:	b570      	push	{r4, r5, r6, lr}
    9b8a:	f04f 0cff 	mov.w	ip, #255	; 0xff
    9b8e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    9b92:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    9b96:	bf1d      	ittte	ne
    9b98:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    9b9c:	ea94 0f0c 	teqne	r4, ip
    9ba0:	ea95 0f0c 	teqne	r5, ip
    9ba4:	f000 f8a7 	bleq	9cf6 <__aeabi_ddiv+0x16e>
    9ba8:	eba4 0405 	sub.w	r4, r4, r5
    9bac:	ea81 0e03 	eor.w	lr, r1, r3
    9bb0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    9bb4:	ea4f 3101 	mov.w	r1, r1, lsl #12
    9bb8:	f000 8088 	beq.w	9ccc <__aeabi_ddiv+0x144>
    9bbc:	ea4f 3303 	mov.w	r3, r3, lsl #12
    9bc0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    9bc4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    9bc8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    9bcc:	ea4f 2202 	mov.w	r2, r2, lsl #8
    9bd0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    9bd4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    9bd8:	ea4f 2600 	mov.w	r6, r0, lsl #8
    9bdc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    9be0:	429d      	cmp	r5, r3
    9be2:	bf08      	it	eq
    9be4:	4296      	cmpeq	r6, r2
    9be6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    9bea:	f504 7440 	add.w	r4, r4, #768	; 0x300
    9bee:	d202      	bcs.n	9bf6 <__aeabi_ddiv+0x6e>
    9bf0:	085b      	lsrs	r3, r3, #1
    9bf2:	ea4f 0232 	mov.w	r2, r2, rrx
    9bf6:	1ab6      	subs	r6, r6, r2
    9bf8:	eb65 0503 	sbc.w	r5, r5, r3
    9bfc:	085b      	lsrs	r3, r3, #1
    9bfe:	ea4f 0232 	mov.w	r2, r2, rrx
    9c02:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    9c06:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    9c0a:	ebb6 0e02 	subs.w	lr, r6, r2
    9c0e:	eb75 0e03 	sbcs.w	lr, r5, r3
    9c12:	bf22      	ittt	cs
    9c14:	1ab6      	subcs	r6, r6, r2
    9c16:	4675      	movcs	r5, lr
    9c18:	ea40 000c 	orrcs.w	r0, r0, ip
    9c1c:	085b      	lsrs	r3, r3, #1
    9c1e:	ea4f 0232 	mov.w	r2, r2, rrx
    9c22:	ebb6 0e02 	subs.w	lr, r6, r2
    9c26:	eb75 0e03 	sbcs.w	lr, r5, r3
    9c2a:	bf22      	ittt	cs
    9c2c:	1ab6      	subcs	r6, r6, r2
    9c2e:	4675      	movcs	r5, lr
    9c30:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    9c34:	085b      	lsrs	r3, r3, #1
    9c36:	ea4f 0232 	mov.w	r2, r2, rrx
    9c3a:	ebb6 0e02 	subs.w	lr, r6, r2
    9c3e:	eb75 0e03 	sbcs.w	lr, r5, r3
    9c42:	bf22      	ittt	cs
    9c44:	1ab6      	subcs	r6, r6, r2
    9c46:	4675      	movcs	r5, lr
    9c48:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    9c4c:	085b      	lsrs	r3, r3, #1
    9c4e:	ea4f 0232 	mov.w	r2, r2, rrx
    9c52:	ebb6 0e02 	subs.w	lr, r6, r2
    9c56:	eb75 0e03 	sbcs.w	lr, r5, r3
    9c5a:	bf22      	ittt	cs
    9c5c:	1ab6      	subcs	r6, r6, r2
    9c5e:	4675      	movcs	r5, lr
    9c60:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    9c64:	ea55 0e06 	orrs.w	lr, r5, r6
    9c68:	d018      	beq.n	9c9c <__aeabi_ddiv+0x114>
    9c6a:	ea4f 1505 	mov.w	r5, r5, lsl #4
    9c6e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    9c72:	ea4f 1606 	mov.w	r6, r6, lsl #4
    9c76:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    9c7a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    9c7e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    9c82:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    9c86:	d1c0      	bne.n	9c0a <__aeabi_ddiv+0x82>
    9c88:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9c8c:	d10b      	bne.n	9ca6 <__aeabi_ddiv+0x11e>
    9c8e:	ea41 0100 	orr.w	r1, r1, r0
    9c92:	f04f 0000 	mov.w	r0, #0
    9c96:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    9c9a:	e7b6      	b.n	9c0a <__aeabi_ddiv+0x82>
    9c9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9ca0:	bf04      	itt	eq
    9ca2:	4301      	orreq	r1, r0
    9ca4:	2000      	moveq	r0, #0
    9ca6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    9caa:	bf88      	it	hi
    9cac:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    9cb0:	f63f aeaf 	bhi.w	9a12 <__aeabi_dmul+0xde>
    9cb4:	ebb5 0c03 	subs.w	ip, r5, r3
    9cb8:	bf04      	itt	eq
    9cba:	ebb6 0c02 	subseq.w	ip, r6, r2
    9cbe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    9cc2:	f150 0000 	adcs.w	r0, r0, #0
    9cc6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    9cca:	bd70      	pop	{r4, r5, r6, pc}
    9ccc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    9cd0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    9cd4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    9cd8:	bfc2      	ittt	gt
    9cda:	ebd4 050c 	rsbsgt	r5, r4, ip
    9cde:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    9ce2:	bd70      	popgt	{r4, r5, r6, pc}
    9ce4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9ce8:	f04f 0e00 	mov.w	lr, #0
    9cec:	3c01      	subs	r4, #1
    9cee:	e690      	b.n	9a12 <__aeabi_dmul+0xde>
    9cf0:	ea45 0e06 	orr.w	lr, r5, r6
    9cf4:	e68d      	b.n	9a12 <__aeabi_dmul+0xde>
    9cf6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    9cfa:	ea94 0f0c 	teq	r4, ip
    9cfe:	bf08      	it	eq
    9d00:	ea95 0f0c 	teqeq	r5, ip
    9d04:	f43f af3b 	beq.w	9b7e <__aeabi_dmul+0x24a>
    9d08:	ea94 0f0c 	teq	r4, ip
    9d0c:	d10a      	bne.n	9d24 <__aeabi_ddiv+0x19c>
    9d0e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    9d12:	f47f af34 	bne.w	9b7e <__aeabi_dmul+0x24a>
    9d16:	ea95 0f0c 	teq	r5, ip
    9d1a:	f47f af25 	bne.w	9b68 <__aeabi_dmul+0x234>
    9d1e:	4610      	mov	r0, r2
    9d20:	4619      	mov	r1, r3
    9d22:	e72c      	b.n	9b7e <__aeabi_dmul+0x24a>
    9d24:	ea95 0f0c 	teq	r5, ip
    9d28:	d106      	bne.n	9d38 <__aeabi_ddiv+0x1b0>
    9d2a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    9d2e:	f43f aefd 	beq.w	9b2c <__aeabi_dmul+0x1f8>
    9d32:	4610      	mov	r0, r2
    9d34:	4619      	mov	r1, r3
    9d36:	e722      	b.n	9b7e <__aeabi_dmul+0x24a>
    9d38:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9d3c:	bf18      	it	ne
    9d3e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9d42:	f47f aec5 	bne.w	9ad0 <__aeabi_dmul+0x19c>
    9d46:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    9d4a:	f47f af0d 	bne.w	9b68 <__aeabi_dmul+0x234>
    9d4e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    9d52:	f47f aeeb 	bne.w	9b2c <__aeabi_dmul+0x1f8>
    9d56:	e712      	b.n	9b7e <__aeabi_dmul+0x24a>

00009d58 <__gedf2>:
__gedf2():
    9d58:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    9d5c:	e006      	b.n	9d6c <__cmpdf2+0x4>
    9d5e:	bf00      	nop

00009d60 <__ledf2>:
__ledf2():
    9d60:	f04f 0c01 	mov.w	ip, #1
    9d64:	e002      	b.n	9d6c <__cmpdf2+0x4>
    9d66:	bf00      	nop

00009d68 <__cmpdf2>:
__nedf2():
    9d68:	f04f 0c01 	mov.w	ip, #1
    9d6c:	f84d cd04 	str.w	ip, [sp, #-4]!
    9d70:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    9d74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    9d78:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    9d7c:	bf18      	it	ne
    9d7e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    9d82:	d01b      	beq.n	9dbc <__cmpdf2+0x54>
    9d84:	b001      	add	sp, #4
    9d86:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    9d8a:	bf0c      	ite	eq
    9d8c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    9d90:	ea91 0f03 	teqne	r1, r3
    9d94:	bf02      	ittt	eq
    9d96:	ea90 0f02 	teqeq	r0, r2
    9d9a:	2000      	moveq	r0, #0
    9d9c:	4770      	bxeq	lr
    9d9e:	f110 0f00 	cmn.w	r0, #0
    9da2:	ea91 0f03 	teq	r1, r3
    9da6:	bf58      	it	pl
    9da8:	4299      	cmppl	r1, r3
    9daa:	bf08      	it	eq
    9dac:	4290      	cmpeq	r0, r2
    9dae:	bf2c      	ite	cs
    9db0:	17d8      	asrcs	r0, r3, #31
    9db2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    9db6:	f040 0001 	orr.w	r0, r0, #1
    9dba:	4770      	bx	lr
    9dbc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    9dc0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    9dc4:	d102      	bne.n	9dcc <__cmpdf2+0x64>
    9dc6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    9dca:	d107      	bne.n	9ddc <__cmpdf2+0x74>
    9dcc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    9dd0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    9dd4:	d1d6      	bne.n	9d84 <__cmpdf2+0x1c>
    9dd6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    9dda:	d0d3      	beq.n	9d84 <__cmpdf2+0x1c>
    9ddc:	f85d 0b04 	ldr.w	r0, [sp], #4
    9de0:	4770      	bx	lr
    9de2:	bf00      	nop

00009de4 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    9de4:	4684      	mov	ip, r0
    9de6:	4610      	mov	r0, r2
    9de8:	4662      	mov	r2, ip
    9dea:	468c      	mov	ip, r1
    9dec:	4619      	mov	r1, r3
    9dee:	4663      	mov	r3, ip
    9df0:	e000      	b.n	9df4 <__aeabi_cdcmpeq>
    9df2:	bf00      	nop

00009df4 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    9df4:	b501      	push	{r0, lr}
    9df6:	f7ff ffb7 	bl	9d68 <__cmpdf2>
    9dfa:	2800      	cmp	r0, #0
    9dfc:	bf48      	it	mi
    9dfe:	f110 0f00 	cmnmi.w	r0, #0
    9e02:	bd01      	pop	{r0, pc}

00009e04 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    9e04:	f84d ed08 	str.w	lr, [sp, #-8]!
    9e08:	f7ff fff4 	bl	9df4 <__aeabi_cdcmpeq>
    9e0c:	bf0c      	ite	eq
    9e0e:	2001      	moveq	r0, #1
    9e10:	2000      	movne	r0, #0
    9e12:	f85d fb08 	ldr.w	pc, [sp], #8
    9e16:	bf00      	nop

00009e18 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    9e18:	f84d ed08 	str.w	lr, [sp, #-8]!
    9e1c:	f7ff ffea 	bl	9df4 <__aeabi_cdcmpeq>
    9e20:	bf34      	ite	cc
    9e22:	2001      	movcc	r0, #1
    9e24:	2000      	movcs	r0, #0
    9e26:	f85d fb08 	ldr.w	pc, [sp], #8
    9e2a:	bf00      	nop

00009e2c <__aeabi_dcmple>:
__aeabi_dcmple():
    9e2c:	f84d ed08 	str.w	lr, [sp, #-8]!
    9e30:	f7ff ffe0 	bl	9df4 <__aeabi_cdcmpeq>
    9e34:	bf94      	ite	ls
    9e36:	2001      	movls	r0, #1
    9e38:	2000      	movhi	r0, #0
    9e3a:	f85d fb08 	ldr.w	pc, [sp], #8
    9e3e:	bf00      	nop

00009e40 <__aeabi_dcmpge>:
__aeabi_dcmpge():
    9e40:	f84d ed08 	str.w	lr, [sp, #-8]!
    9e44:	f7ff ffce 	bl	9de4 <__aeabi_cdrcmple>
    9e48:	bf94      	ite	ls
    9e4a:	2001      	movls	r0, #1
    9e4c:	2000      	movhi	r0, #0
    9e4e:	f85d fb08 	ldr.w	pc, [sp], #8
    9e52:	bf00      	nop

00009e54 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    9e54:	f84d ed08 	str.w	lr, [sp, #-8]!
    9e58:	f7ff ffc4 	bl	9de4 <__aeabi_cdrcmple>
    9e5c:	bf34      	ite	cc
    9e5e:	2001      	movcc	r0, #1
    9e60:	2000      	movcs	r0, #0
    9e62:	f85d fb08 	ldr.w	pc, [sp], #8
    9e66:	bf00      	nop

00009e68 <__aeabi_dcmpun>:
__unorddf2():
    9e68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    9e6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    9e70:	d102      	bne.n	9e78 <__aeabi_dcmpun+0x10>
    9e72:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    9e76:	d10a      	bne.n	9e8e <__aeabi_dcmpun+0x26>
    9e78:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    9e7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    9e80:	d102      	bne.n	9e88 <__aeabi_dcmpun+0x20>
    9e82:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    9e86:	d102      	bne.n	9e8e <__aeabi_dcmpun+0x26>
    9e88:	f04f 0000 	mov.w	r0, #0
    9e8c:	4770      	bx	lr
    9e8e:	f04f 0001 	mov.w	r0, #1
    9e92:	4770      	bx	lr

00009e94 <__aeabi_d2iz>:
__aeabi_d2iz():
    9e94:	ea4f 0241 	mov.w	r2, r1, lsl #1
    9e98:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    9e9c:	d215      	bcs.n	9eca <__aeabi_d2iz+0x36>
    9e9e:	d511      	bpl.n	9ec4 <__aeabi_d2iz+0x30>
    9ea0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    9ea4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    9ea8:	d912      	bls.n	9ed0 <__aeabi_d2iz+0x3c>
    9eaa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    9eae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    9eb2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    9eb6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    9eba:	fa23 f002 	lsr.w	r0, r3, r2
    9ebe:	bf18      	it	ne
    9ec0:	4240      	negne	r0, r0
    9ec2:	4770      	bx	lr
    9ec4:	f04f 0000 	mov.w	r0, #0
    9ec8:	4770      	bx	lr
    9eca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    9ece:	d105      	bne.n	9edc <__aeabi_d2iz+0x48>
    9ed0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    9ed4:	bf08      	it	eq
    9ed6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    9eda:	4770      	bx	lr
    9edc:	f04f 0000 	mov.w	r0, #0
    9ee0:	4770      	bx	lr
    9ee2:	bf00      	nop

00009ee4 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    9ee4:	004a      	lsls	r2, r1, #1
    9ee6:	d211      	bcs.n	9f0c <__aeabi_d2uiz+0x28>
    9ee8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    9eec:	d211      	bcs.n	9f12 <__aeabi_d2uiz+0x2e>
    9eee:	d50d      	bpl.n	9f0c <__aeabi_d2uiz+0x28>
    9ef0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    9ef4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    9ef8:	d40e      	bmi.n	9f18 <__aeabi_d2uiz+0x34>
    9efa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    9efe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    9f02:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    9f06:	fa23 f002 	lsr.w	r0, r3, r2
    9f0a:	4770      	bx	lr
    9f0c:	f04f 0000 	mov.w	r0, #0
    9f10:	4770      	bx	lr
    9f12:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    9f16:	d102      	bne.n	9f1e <__aeabi_d2uiz+0x3a>
    9f18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    9f1c:	4770      	bx	lr
    9f1e:	f04f 0000 	mov.w	r0, #0
    9f22:	4770      	bx	lr

00009f24 <__aeabi_d2f>:
__truncdfsf2():
    9f24:	ea4f 0241 	mov.w	r2, r1, lsl #1
    9f28:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    9f2c:	bf24      	itt	cs
    9f2e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    9f32:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    9f36:	d90d      	bls.n	9f54 <__aeabi_d2f+0x30>
    9f38:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    9f3c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    9f40:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    9f44:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    9f48:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    9f4c:	bf08      	it	eq
    9f4e:	f020 0001 	biceq.w	r0, r0, #1
    9f52:	4770      	bx	lr
    9f54:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    9f58:	d121      	bne.n	9f9e <__aeabi_d2f+0x7a>
    9f5a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    9f5e:	bfbc      	itt	lt
    9f60:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    9f64:	4770      	bxlt	lr
    9f66:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9f6a:	ea4f 5252 	mov.w	r2, r2, lsr #21
    9f6e:	f1c2 0218 	rsb	r2, r2, #24
    9f72:	f1c2 0c20 	rsb	ip, r2, #32
    9f76:	fa10 f30c 	lsls.w	r3, r0, ip
    9f7a:	fa20 f002 	lsr.w	r0, r0, r2
    9f7e:	bf18      	it	ne
    9f80:	f040 0001 	orrne.w	r0, r0, #1
    9f84:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    9f88:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    9f8c:	fa03 fc0c 	lsl.w	ip, r3, ip
    9f90:	ea40 000c 	orr.w	r0, r0, ip
    9f94:	fa23 f302 	lsr.w	r3, r3, r2
    9f98:	ea4f 0343 	mov.w	r3, r3, lsl #1
    9f9c:	e7cc      	b.n	9f38 <__aeabi_d2f+0x14>
    9f9e:	ea7f 5362 	mvns.w	r3, r2, asr #21
    9fa2:	d107      	bne.n	9fb4 <__aeabi_d2f+0x90>
    9fa4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    9fa8:	bf1e      	ittt	ne
    9faa:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    9fae:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    9fb2:	4770      	bxne	lr
    9fb4:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    9fb8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    9fbc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    9fc0:	4770      	bx	lr
    9fc2:	bf00      	nop

00009fc4 <__aeabi_d2lz>:
__fixdfdi():
    9fc4:	b538      	push	{r3, r4, r5, lr}
    9fc6:	2200      	movs	r2, #0
    9fc8:	2300      	movs	r3, #0
    9fca:	4604      	mov	r4, r0
    9fcc:	460d      	mov	r5, r1
    9fce:	f7ff ff23 	bl	9e18 <__aeabi_dcmplt>
    9fd2:	b928      	cbnz	r0, 9fe0 <__aeabi_d2lz+0x1c>
    9fd4:	4620      	mov	r0, r4
    9fd6:	4629      	mov	r1, r5
    9fd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    9fdc:	f000 b80a 	b.w	9ff4 <__aeabi_d2ulz>
    9fe0:	4620      	mov	r0, r4
    9fe2:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
    9fe6:	f000 f805 	bl	9ff4 <__aeabi_d2ulz>
    9fea:	4240      	negs	r0, r0
    9fec:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    9ff0:	bd38      	pop	{r3, r4, r5, pc}
    9ff2:	bf00      	nop

00009ff4 <__aeabi_d2ulz>:
__fixunsdfdi():
    9ff4:	b5d0      	push	{r4, r6, r7, lr}
    9ff6:	2200      	movs	r2, #0
    9ff8:	4b0b      	ldr	r3, [pc, #44]	; (a028 <__aeabi_d2ulz+0x34>)
    9ffa:	4606      	mov	r6, r0
    9ffc:	460f      	mov	r7, r1
    9ffe:	f7ff fc99 	bl	9934 <__aeabi_dmul>
    a002:	f7ff ff6f 	bl	9ee4 <__aeabi_d2uiz>
    a006:	4604      	mov	r4, r0
    a008:	f7ff fc1a 	bl	9840 <__aeabi_ui2d>
    a00c:	2200      	movs	r2, #0
    a00e:	4b07      	ldr	r3, [pc, #28]	; (a02c <__aeabi_d2ulz+0x38>)
    a010:	f7ff fc90 	bl	9934 <__aeabi_dmul>
    a014:	4602      	mov	r2, r0
    a016:	460b      	mov	r3, r1
    a018:	4630      	mov	r0, r6
    a01a:	4639      	mov	r1, r7
    a01c:	f7ff fad2 	bl	95c4 <__aeabi_dsub>
    a020:	f7ff ff60 	bl	9ee4 <__aeabi_d2uiz>
    a024:	4621      	mov	r1, r4
    a026:	bdd0      	pop	{r4, r6, r7, pc}
    a028:	3df00000 	.word	0x3df00000
    a02c:	41f00000 	.word	0x41f00000

0000a030 <_close>:
_close():
    a030:	4b02      	ldr	r3, [pc, #8]	; (a03c <_close+0xc>)
    a032:	2258      	movs	r2, #88	; 0x58
    a034:	601a      	str	r2, [r3, #0]
    a036:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a03a:	4770      	bx	lr
    a03c:	100012ec 	.word	0x100012ec

0000a040 <_fstat>:
_fstat():
    a040:	4b02      	ldr	r3, [pc, #8]	; (a04c <_fstat+0xc>)
    a042:	2258      	movs	r2, #88	; 0x58
    a044:	601a      	str	r2, [r3, #0]
    a046:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a04a:	4770      	bx	lr
    a04c:	100012ec 	.word	0x100012ec

0000a050 <_lseek>:
_lseek():
    a050:	4b02      	ldr	r3, [pc, #8]	; (a05c <_lseek+0xc>)
    a052:	2258      	movs	r2, #88	; 0x58
    a054:	601a      	str	r2, [r3, #0]
    a056:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a05a:	4770      	bx	lr
    a05c:	100012ec 	.word	0x100012ec

0000a060 <__FUNCTION__.8182>:
    a060:	72746e65 6f705f79 00746e69 2873250a     entry_point..%s(
    a070:	57203a29 494e5241 203a474e 736e6553     ): WARNING: Sens
    a080:	6520726f 726f7272 6e6f2073 69687420     or errors on thi
    a090:	6f622073 0a647261 73250a00 203a2928     s board...%s(): 
    a0a0:	65746e45 676e6972 69616d20 0a29286e     Entering main().
    a0b0:	52524500 203a524f 6e69616d 73202928     .ERROR: main() s
    a0c0:	6c756f68 656e2064 20726576 75746572     hould never retu
    a0d0:	202c6e72 676f7270 206d6172 20736168     rn, program has 
    a0e0:	6e656562 6c616820 00646574 78656e55     been halted.Unex
    a0f0:	74636570 43206465 65205550 70656378     pected CPU excep
    a100:	6e6f6974 75250020 6e692820 72726574     tion .%u (interr
    a110:	29747075 73616820 63636f20 64657275     upt) has occured
    a120:	646e6120 65687420 6f727020 6d617267      and the program
    a130:	6c697720 6f6e206c 61682077 000a746c      will now halt..
    a140:	65637845 6f697470 7061206e 72616570     Exception appear
    a150:	6f742073 20656220 27732527 6944000a     s to be '%s'..Di
    a160:	6f792064 65722075 74736967 74207265     d you register t
    a170:	69206568 7265746e 74707572 726f6320     he interrupt cor
    a180:	74636572 7520796c 676e6973 63706c20     rectly using lpc
    a190:	7265705f 65687069 736c6172 4120682e     _peripherals.h A
    a1a0:	003f4950 61747365 72006b63 74657365     PI?.estack.reset
    a1b0:	494d4e00 72616800 61662064 00746c75     .NMI.hard fault.
    a1c0:	6f6d656d 66207972 746c7561 73756200     memory fault.bus
    a1d0:	75616620 7500746c 65676173 75616620      fault.usage fau
    a1e0:	7200746c 72657365 00646576 736f7472     lt.reserved.rtos
    a1f0:	62656400 ff006775                       .debug..

0000a1f8 <table.8042>:
    a1f8:	0000a1a4 0000a1ab 0000a1b1 0000a1b5     ................
    a208:	0000a1c0 0000a1cd 0000a1d7 0000a1e3     ................
    a218:	0000a1e3 0000a1e3 0000a1e3 0000a1ec     ................
    a228:	0000a1f1 0000a1e3 0000a1ec 0000a1ec     ................
    a238:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a248:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a258:	2d2d2d2d 2d2d2d2d 2d2d2d0a 4157202d     --------.---- WA
    a268:	4e494e52 57203a47 72632065 65687361     RNING: We crashe
    a278:	72702064 6f697665 796c7375 2d2d2d20     d previously ---
    a288:	20000a2d 3a435020 25783020 586c3830     -..  PC: 0x%08lX
    a298:	2020000a 203a524c 30257830 0a586c38     ..  LR: 0x%08lX.
    a2a8:	53502000 30203a52 38302578 000a586c     . PSR: 0x%08lX..
    a2b8:	30522020 7830203a 6c383025 20000a58       R0: 0x%08lX.. 
    a2c8:	3a315220 25783020 586c3830 2020000a      R1: 0x%08lX..  
    a2d8:	203a3252 30257830 0a586c38 52202000     R2: 0x%08lX..  R
    a2e8:	30203a33 38302578 000a586c 4620200a     3: 0x%08lX...  F
    a2f8:	20646e69 20656874 736c2e2a 69662074     ind the *.lst fi
    a308:	6920656c 6f79206e 5f207275 6c697562     le in your _buil
    a318:	69642064 74636572 2c79726f 646e6120     d directory, and
    a328:	6f6f6c20 0a70756b 68742020 43502065      lookup.  the PC
    a338:	6c617620 74206575 6f6c206f 65746163      value to locate
    a348:	69687720 66206863 74636e75 206e6f69      which function 
    a358:	73756163 74206465 2e736968 5420200a     caused this..  T
    a368:	4c206568 68732052 646c756f 20656220     he LR should be 
    a378:	20656874 65727027 756f6976 66202773     the 'previous' f
    a388:	74636e75 206e6f69 74616874 73617720     unction that was
    a398:	6e757220 676e696e 20200a2e 522d3052      running..  R0-R
    a3a8:	72612033 61702065 656d6172 73726574     3 are parameters
    a3b8:	206f7420 636e7566 6e6f6974 000a2e73      to functions...
    a3c8:	00544146 33544146 52450032 3a524f52     FAT.FAT32.ERROR:
    a3d8:	6c614320 6f74206c 65725f20 29286461      Call to _read()
    a3e8:	74697720 6e612068 736e7520 6f707075      with an unsuppo
    a3f8:	64657472 6e616820 00656c64 4f525245     rted handle.ERRO
    a408:	43203a52 206c6c61 5f206f74 74697277     R: Call to _writ
    a418:	20292865 68746977 206e6120 75736e75     e() with an unsu
    a428:	726f7070 20646574 646e6168 0d00656c     pported handle..
    a438:	73694c0a 666f2074 6d6f6320 646e616d     .List of command
    a448:	75282073 68206573 20706c65 6d616e3c     s (use help <nam
    a458:	74203e65 6567206f 75662074 68206c6c     e> to get full h
    a468:	20706c65 79206669 7320756f 2e206565     elp if you see .
    a478:	3a292e2e 000a0d20 31252020 3a207336     ..): ...  %16s :
    a488:	352e2520 2e207330 20002e2e 36312520      %.50s ....  %16
    a498:	203a2073 0d007325 6c656800 6f430070     s : %s...help.Co
    a4a8:	6e616d6d 61662064 64656c69 0d00203a     mmand failed: ..
    a4b8:	6d6f430a 646e616d 6c656820 656d2070     .Command help me
    a4c8:	67617373 25203a65 000a0d73 4f525245     ssage: %s...ERRO
    a4d8:	43203a52 646c756f 746f6e20 6e696620     R: Could not fin
    a4e8:	65682064 6620706c 6320726f 616d6d6f     d help for comma
    a4f8:	203a646e 616e5500 20656c62 6d206f74     nd: .Unable to m
    a508:	68637461 796e6120 67657220 65747369     atch any registe
    a518:	20646572 20494c43 6d6d6f63 20646e61     red CLI command 
    a528:	3a726f66 2d2d0020 2d2d2d2d 2d2d2d2d     for: .----------
    a538:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a548:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a558:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a568:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a578:	2d2d2d2d 0a0d2d2d 696c6300 6c654400     ------...cli.Del
    a588:	72656269 6c657461 72632079 65687361     iberately crashe
    a598:	68742073 79732065 6d657473 206f7420     s the system to 
    a5a8:	6f6d6564 7274736e 20657461 20776f68     demonstrate how 
    a5b8:	64206f74 67756265 63206120 68736172     to debug a crash
    a5c8:	63326900 63326900 61657220 78302064     .i2c.i2c read 0x
    a5d8:	30204444 20525278 0a3e6e3c 20633269     DD 0xRR <n>.i2c 
    a5e8:	74697277 78302065 30204444 20525278     write 0xDD 0xRR 
    a5f8:	6c61763c 203e6575 6c61763c 203e6575     <value> <value> 
    a608:	002e2e2e 6b736174 7473696c 74754f00     ....tasklist.Out
    a618:	73747570 73696c20 666f2074 4f545220     puts list of RTO
    a628:	61742053 2c736b73 55504320 646e6120     S tasks, CPU and
    a638:	61747320 75206b63 65676173 61740a2e      stack usage..ta
    a648:	696c6b73 3c207473 656d6974 7720273e     sklist <time>' w
    a658:	206c6c69 70736964 2079616c 20555043     ill display CPU 
    a668:	6c697475 74617a69 206e6f69 68746977     utilization with
    a678:	74206e69 20736968 656d6974 6e697720     in this time win
    a688:	2e776f64 61657200 72770064 00657469     dow..read.write.
    a698:	78257830 25783020 75252078 43324900     0x%x 0x%x %u.I2C
    a6a8:	61655220 666f2064 616c5320 30206576      Read of Slave 0
    a6b8:	32302578 20000a58 25783020 3a583230     x%02X..  0x%02X:
    a6c8:	25783020 20583230 29642528 3249000a      0x%02X (%d)..I2
    a6d8:	75622043 72652073 20726f72 69727564     C bus error duri
    a6e8:	6920676e 5f5f6332 64616572 616c735f     ng i2c__read_sla
    a6f8:	645f6576 28617461 43000a29 616d6d6f     ve_data()..Comma
    a708:	6520646e 726f7272 6552203a 63206461     nd error: Read c
    a718:	616d6d6f 7320646e 6c756f68 65622064     ommand should be
    a728:	32692720 65722063 30206461 20444478      'i2c read 0xDD 
    a738:	52527830 3e6e3c20 30000a27 20782578     0xRR <n>'..0x%x 
    a748:	78257830 6f725700 25206574 79622075     0x%x.Wrote %u by
    a758:	20736574 73206f74 6576616c 25783020     tes to slave 0x%
    a768:	0a583230 5b202000 5d643325 30203d20     02X..  [%3d] = 0
    a778:	32302578 25282058 000a2964 20433249     x%02X (%d)..I2C 
    a788:	20737562 6f727265 75642072 676e6972     bus error during
    a798:	63326920 72775f5f 5f657469 76616c73      i2c__write_slav
    a7a8:	61645f65 29286174 6f43000a 6e616d6d     e_data()..Comman
    a7b8:	72652064 3a726f72 69725720 63206574     d error: Write c
    a7c8:	616d6d6f 7320646e 6c756f68 65622064     ommand should be
    a7d8:	32692720 72772063 20657469 44447830      'i2c write 0xDD
    a7e8:	52783020 763c2052 65756c61 763c203e      0xRR <value> <v
    a7f8:	65756c61 2e2e203e 000a272e 4f525245     alue> ...'..ERRO
    a808:	63203a52 69666e6f 45535567 4152545f     R: configUSE_TRA
    a818:	465f4543 4c494341 20595449 6465656e     CE_FACILITY need
    a828:	6f742073 20656220 62616e65 2064656c     s to be enabled 
    a838:	46207461 52656572 43534f54 69666e6f     at FreeRTOSConfi
    a848:	0a682e67                                 g.h..

0000a84d <__FUNCTION__.9185>:
    a84d:	69726570 72656870 5f736c61 74696e69     peripherals_init
    a85d:	20445300 64726163 756f6d20 6465746e     .SD card mounted
    a86d:	63757320 73736563 6c6c7566 57000a79      successfully..W
    a87d:	494e5241 203a474e 63204453 20647261     ARNING: SD card 
    a88d:	6c756f63 6f6e2064 65622074 756f6d20     could not be mou
    a89d:	6465746e 2d2d000a 2d2d2d2d 2d2d2d2d     nted..----------
    a8ad:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a8bd:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a8cd:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a8dd:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a8ed:	2d2d2d2d 0a002d2d 250a7325 3a292873     ------..%s.%s():
    a8fd:	776f4c20 76656c20 73206c65 74726174      Low level start
    a90d:	250a7075 49000a73 73204332 6576616c     up.%s..I2C slave
    a91d:	74656420 65746365 74612064 64646120      detected at add
    a92d:	73736572 7830203a 58323025 656c000a     ress: 0x%02X..le
    a93d:	6c003064 00316465 72617453 676e6974     d0.led1.Starting
    a94d:	4f545220 72460053 54526565 4120534f      RTOS.FreeRTOS A
    a95d:	52455353 20292854 7563636f 64657272     SSERT() occurred
    a96d:	646e6920 74616369 20676e69 65206e61      indicating an e
    a97d:	726f7272 6e6f6320 69746964 74206e6f     rror condition t
    a98d:	20746168 756f6873 4e20646c 52455645     hat should NEVER
    a99d:	70616820 006e6570 44202d20 79206469      happen. - Did y
    a9ad:	6320756f 206c6c61 6c622061 696b636f     ou call a blocki
    a9bd:	4120676e 6f204950 6f6e2072 7246206e     ng API or non Fr
    a9cd:	53496d6f 20292852 20495041 69736e69     omISR() API insi
    a9dd:	61206564 5349206e 20003f52 6944202d     de an ISR?. - Di
    a9ed:	6f792064 6f662075 74656772 206f7420     d you forget to 
    a9fd:	20657375 69727066 2866746e 65647473     use fprintf(stde
    aa0d:	20297272 61206e69 5349206e 48003f52     rr) in an ISR?.H
    aa1d:	20657265 74207369 6c206568 20656e69     ere is the line 
    aa2d:	6320666f 2065646f 74616874 6c616820     of code that hal
    aa3d:	20646574 20656874 3a555043 41760020     ted the CPU: .vA
    aa4d:	696c7070 69746163 614d6e6f 636f6c6c     pplicationMalloc
    aa5d:	6c696146 6f486465 29286b6f 6c616320     FailedHook() cal
    aa6d:	3b64656c 206f6e20 65726f6d 4d415220     led; no more RAM
    aa7d:	6d656d20 0079726f 63617473 766f206b      memory.stack ov
    aa8d:	6c667265 6220776f 68742079 74207369     erflow by this t
    aa9d:	3a6b7361 43787500 69746972 4e6c6163     ask:.uxCriticalN
    aaad:	69747365 3d20676e 307e203d 28004c55     esting == ~0UL.(
    aabd:	726f7020 49564e74 4e495f43 54435f54      portNVIC_INT_CT
    aacd:	525f4c52 26204745 726f7020 43455674     RL_REG & portVEC
    aadd:	54434154 5f455649 4b53414d 3d202920     TACTIVE_MASK ) =
    aaed:	0030203d 72437875 63697469 654e6c61     = 0.uxCriticalNe
    aafd:	6e697473 63750067 72727543 50746e65     sting.ucCurrentP
    ab0d:	726f6972 20797469 75203d3e 78614d63     riority >= ucMax
    ab1d:	43737953 506c6c61 726f6972 00797469     SysCallPriority.
    ab2d:	6f702028 49417472 5f524352 20474552     ( portAIRCR_REG 
    ab3d:	6f702026 52507472 49524f49 475f5954     & portPRIORITY_G
    ab4d:	50554f52 53414d5f 2029204b 75203d3c     ROUP_MASK ) <= u
    ab5d:	78614d6c 47495250 50554f52 756c6156     lMaxPRIGROUPValu
    ab6d:	6f700065 50437472 20444955 70203d21     e.portCPUID != p
    ab7d:	4374726f 4554524f 374d5f58 7030725f     ortCORTEX_M7_r0p
    ab8d:	44495f31 726f7000 55504374 21204449     1_ID.portCPUID !
    ab9d:	6f70203d 4f437472 58455452 5f374d5f     = portCORTEX_M7_
    abad:	30703072 0044495f 6f702028 414d7472     r0p0_ID.( portMA
    abbd:	52505f58 4f524749 425f5055 20535449     X_PRIGROUP_BITS 
    abcd:	6c75202d 5078614d 52474952 5650554f     - ulMaxPRIGROUPV
    abdd:	65756c61 3d202920 5f5f203d 4349564e     alue ) == __NVIC
    abed:	4952505f 49425f4f 75005354 65755178     _PRIO_BITS.uxQue
    abfd:	654c6575 6874676e 28203e20 61425520     ueLength > ( UBa
    ac0d:	79546573 745f6570 30202920 53787000     seType_t ) 0.pxS
    ac1d:	69746174 65755163 21206575 554e203d     taticQueue != NU
    ac2d:	21004c4c 20282028 51637570 65756575     LL.!( ( pucQueue
    ac3d:	726f7453 20656761 4e203d21 204c4c55     Storage != NULL 
    ac4d:	26262029 75202820 65744978 7a69536d     ) && ( uxItemSiz
    ac5d:	3d3d2065 29203020 21002920 20282028     e == 0 ) ).!( ( 
    ac6d:	51637570 65756575 726f7453 20656761     pucQueueStorage 
    ac7d:	4e203d3d 204c4c55 26262029 75202820     == NULL ) && ( u
    ac8d:	65744978 7a69536d 3d212065 29203020     xItemSize != 0 )
    ac9d:	78002920 657a6953 203d3d20 657a6973      ).xSize == size
    acad:	2028666f 75657551 20745f65 78700029     of( Queue_t ).px
    acbd:	75657551 28210065 70202820 65744976     Queue.!( ( pvIte
    accd:	516f546d 65756575 203d3d20 4c4c554e     mToQueue == NULL
    acdd:	26202920 20282026 75517870 2d657565      ) && ( pxQueue-
    aced:	4978753e 536d6574 20657a69 28203d21     >uxItemSize != (
    acfd:	61425520 79546573 745f6570 30202920      UBaseType_t ) 0
    ad0d:	20292055 28210029 78202820 79706f43     U ) ).!( ( xCopy
    ad1d:	69736f50 6e6f6974 203d3d20 75657571     Position == queu
    ad2d:	45564f65 49525752 29204554 20262620     eOVERWRITE ) && 
    ad3d:	78702028 75657551 753e2d65 6e654c78     ( pxQueue->uxLen
    ad4d:	20687467 31203d21 29202920 20282100     gth != 1 ) ).!( 
    ad5d:	54782028 476b7361 63537465 75646568     ( xTaskGetSchedu
    ad6d:	5372656c 65746174 3d202928 6174203d     lerState() == ta
    ad7d:	43536b73 55444548 5f52454c 50535553     skSCHEDULER_SUSP
    ad8d:	45444e45 20292044 28202626 69547820     ENDED ) && ( xTi
    ad9d:	54736b63 6961576f 3d212074 29203020     cksToWait != 0 )
    adad:	70002920 65755178 3e2d6575 74497875      ).pxQueue->uxIt
    adbd:	69536d65 3d20657a 0030203d 28202821     emSize == 0.!( (
    adcd:	51787020 65756575 78753e2d 75657551      pxQueue->uxQueu
    addd:	70795465 3d3d2065 65757120 55516575     eType == queueQU
    aded:	5f455545 4d5f5349 58455455 26202920     EUE_IS_MUTEX ) &
    adfd:	20282026 75517870 2d657565 782e753e     & ( pxQueue->u.x
    ae0d:	616d6553 726f6870 4d782e65 78657475     Semaphore.xMutex
    ae1d:	646c6f48 21207265 554e203d 29204c4c     Holder != NULL )
    ae2d:	28002920 51787020 65756575 21002920      ).( pxQueue ).!
    ae3d:	20282028 76702028 66667542 29207265     ( ( ( pvBuffer )
    ae4d:	203d3d20 4c4c554e 26202920 20282026      == NULL ) && ( 
    ae5d:	78702028 75657551 2d292065 4978753e     ( pxQueue )->uxI
    ae6d:	536d6574 20657a69 28203d21 61425520     temSize != ( UBa
    ae7d:	79546573 745f6570 30202920 20292055     seType_t ) 0U ) 
    ae8d:	28210029 70202820 66754276 20726566     ).!( ( pvBuffer 
    ae9d:	4e203d3d 204c4c55 26262029 70202820     == NULL ) && ( p
    aead:	65755178 3e2d6575 74497875 69536d65     xQueue->uxItemSi
    aebd:	2120657a 2028203d 73614255 70795465     ze != ( UBaseTyp
    aecd:	20745f65 55302029 29202920 6e497800     e_t ) 0U ) ).xIn
    aedd:	69726568 636e6174 63634f65 65727275     heritanceOccurre
    aeed:	3d3d2064 46647020 45534c41 50787000     d == pdFALSE.pxP
    aefd:	69766572 5773756f 54656b61 00656d69     reviousWakeTime.
    af0d:	54782028 49656d69 6572636e 746e656d     ( xTimeIncrement
    af1d:	30203e20 00292055 63537875 75646568      > 0U ).uxSchedu
    af2d:	5372656c 65707375 6465646e 203d3d20     lerSuspended == 
    af3d:	78700030 6e657645 73694c74 78700074     0.pxEventList.px
    af4d:	20424354 70203d21 72754378 746e6572     TCB != pxCurrent
    af5d:	00424354 69547870 754f656d 44490074     TCB.pxTimeOut.ID
    af6d:	6c00454c 43747369 45525255 4c5f544e     LE.listCURRENT_L
    af7d:	5f545349 474e454c 20284854 70202826     IST_LENGTH( &( p
    af8d:	61655278 61547964 4c736b73 73747369     xReadyTasksLists
    af9d:	7875205b 50706f54 726f6972 20797469     [ uxTopPriority 
    afad:	2029205d 203e2029 78700030 6b636954     ] ) ) > 0.pxTick
    afbd:	576f5473 00746961 53787570 6b636174     sToWait.puxStack
    afcd:	66667542 21207265 554e203d 70004c4c     Buffer != NULL.p
    afdd:	73615478 6675426b 20726566 4e203d21     xTaskBuffer != N
    afed:	004c4c55 7a695378 3d3d2065 7a697320     ULL.xSize == siz
    affd:	28666f65 42435420 2920745f 6c202800     eof( TCB_t ).( l
    b00d:	4c747369 5f545349 455f5349 5954504d     istLIST_IS_EMPTY
    b01d:	78702028 616c6544 54646579 4c6b7361     ( pxDelayedTaskL
    b02d:	20747369 00292029 43547870 3d3d2042     ist ) ).pxTCB ==
    b03d:	43787020 65727275 4354746e 78700042      pxCurrentTCB.px
    b04d:	2d424354 4d78753e 78657475 65487365     TCB->uxMutexesHe
    b05d:	7000646c 626e5578 6b636f6c 43546465     ld.pxUnblockedTC
    b06d:	78750042 65686353 656c7564 73755372     B.uxSchedulerSus
    b07d:	646e6570                                 pended.

0000b084 <gpio_memory_map>:
    b084:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    b094:	20098080 200980a0                       ... ... 

0000b09c <hw_timers>:
    b09c:	40004000 00000001 0000b0cc 40008000     .@.@...........@
    b0ac:	00000002 0000b0d2 40090000 00000003     ...........@....
    b0bc:	0000b0d8 40094000 00000004 0000b0de     .....@.@........
    b0cc:	545f5748 57480030 0031545f 545f5748     HW_T0.HW_T1.HW_T
    b0dc:	57480032 0033545f 00003779 0000376d     2.HW_T3.y7..m7..
    b0ec:	00003761 30633269 63326900 32690031     a7..i2c0.i2c1.i2
    b0fc:	                                         c2.

0000b0ff <lpc_peripheral_pconp_bit_map>:
    b0ff:	16020100 18040317 13070619 0a15001a     ................
    b10f:	00000000 000c0000 001d0d00 00000000     ................
    b11f:	00000000 00000014 00000000 00000000     ................
	...
    b157:	61550e00 00307472 74726155 61550031     ..Uart0.Uart1.Ua
    b167:	00327472 74726155 ffff0033               rt2.Uart3....

0000b174 <uart__isrs>:
    b174:	00003bb9 00003bad 00003ba1 00003b95     .;...;...;...;..

0000b184 <uart_peripheral_ids>:
    b184:	08070605                                ....

0000b188 <_ctype_>:
    b188:	20202000 20202020 28282020 20282828     .         ((((( 
    b198:	20202020 20202020 20202020 20202020                     
    b1a8:	10108820 10101010 10101010 10101010      ...............
    b1b8:	04040410 04040404 10040404 10101010     ................
    b1c8:	41411010 41414141 01010101 01010101     ..AAAAAA........
    b1d8:	01010101 01010101 01010101 10101010     ................
    b1e8:	42421010 42424242 02020202 02020202     ..BBBBBB........
    b1f8:	02020202 02020202 02020202 10101010     ................
    b208:	00000020 00000000 00000000 00000000      ...............
	...
    b288:	ffffff00                                ....

0000b28c <_global_impure_ptr>:
    b28c:	10000184 2b302d23 6c680020 6665004c     ....#-0+ .hlL.ef
    b29c:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    b2ac:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    b2bc:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    b2cc:	64636261 65006665 00646c25              abcdef.e%ld.

0000b2d8 <fpi.7522>:
    b2d8:	00000035 fffffbce 000003cb 00000001     5...............
    b2e8:	00000000                                ....

0000b2ec <fpinan.7558>:
    b2ec:	00000034 fffffbce 000003cb 00000001     4...............
    b2fc:	00000000                                ....

0000b300 <tinytens>:
    b300:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    b310:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    b320:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
    b330:	4e614e00 ffffff00                       .NaN....

0000b338 <__sf_fake_stderr>:
	...

0000b358 <__sf_fake_stdin>:
	...

0000b378 <__sf_fake_stdout>:
	...

0000b398 <_C_numeric_locale>:
    b398:	0000a60a 0000a47f 100001e4 4f500043     ............C.PO
    b3a8:	00584953 ffffffff                       SIX.....

0000b3b0 <__mprec_bigtens>:
    b3b0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    b3c0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    b3d0:	7f73bf3c 75154fdd                       <.s..O.u

0000b3d8 <__mprec_tens>:
    b3d8:	00000000 3ff00000 00000000 40240000     .......?......$@
    b3e8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    b3f8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    b408:	00000000 412e8480 00000000 416312d0     .......A......cA
    b418:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    b428:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    b438:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    b448:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    b458:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    b468:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    b478:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    b488:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    b498:	79d99db4 44ea7843                       ...yCx.D

0000b4a0 <p05.7444>:
    b4a0:	00000005 00000019 0000007d 0000b4ca     ........}.......
    b4b0:	0000b4cd 0000b4d0 61462d41 3938662d     ........A-Fa-f89
    b4c0:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    b4d0:	ff005878                                xX..
